using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Org.BouncyCastle.Crypto.Digests;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.Math.EC;
using Org.BouncyCastle.Utilities;
using Phorkus.Party.Crypto;
using Phorkus.Party.Crypto.Key;
using Phorkus.Party.Signer;
using Phorkus.Party.Signer.Messages;

namespace Phorkus.HermesTest
{
    [TestClass]
    public class SignatureTest
    {
        private static byte[] Sha3(byte[] message)
        {
            var kecc = new KeccakDigest(256);
            kecc.BlockUpdate(message, 0, message.Length);
            var result = new byte[32];
            kecc.DoFinal(result, 0);
            return result;
        }

        public static long CurrentTimeMillis()
        {
            return (long) DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;
        }

        private void _validateMsgs<T>(IEnumerable<T> ts)
            where T : ISignerMessage, new()
        {
            foreach (var t in ts)
                _validateMsg(t);
        }
        
        private void _validateMsg<T>(T t)
            where T : ISignerMessage, new()
        {
            var bytes = t.ToByteArray();
            var next = new T();
            next.fromByteArray(bytes);
            var bytes2 = next.ToByteArray();
            if (!bytes.SequenceEqual(bytes2))
                throw new Exception("Wooooow!");
        }
        
        [TestMethod]
        public void TestSignature()
        {
            var plainRnd = new Random(123456789);

            long checkpoint = CurrentTimeMillis();

            var privatePaillierKeyShares = new PaillierPrivateThresholdKey[4];
            
            privatePaillierKeyShares[0] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a52565e77f055fa3b99294856f1fce8d9e80b8f19206facadb19c4de3978c105293a714a906371b43c7a265cf80fd85decc90e17bc574a979b4b083f833f4bf5c27c7a727001465677363d422ce25ba6209399de391dc987cdd6d5b19579efb8418972eb170910d7783e31279fc169996bc6b1ce314e606c52902975654e806a47b4592b9f2f280754aaee3f0180b6206658e7df74e95047744e8445629f605c1fe35a373dc4f3a609eb8357cb4bd72ecb436f72e089f51d64041925e2bc8fafc6dfb227570d3dad6787f06b0be7695639a590d1a86093224f9efca005a552cdae1be767a4c039b4cf2af5cf2801f91ed37e8ac837242c7e9f2f76fdf7060b0c9040000000200000001010000000200000102000001020000010200000102000066bbd6fbcb510ae0ae44a7c50573ec439156a6a34b46920032d26b252e60def941e4de029cd6cf8c9a10106cfd7377591d2d6125b31b2bc84acd81e2c0bbd9a3aa1f9f6ad802e8ed56414ab38d6d6d1b88d563e800b6c0e857f098855213474391349e29bbe638237ab66ff3658045787487b551a5a190f4bdbe8e26b0286248c0e7ffe8edd1bdd8b66fdecf4d2ff0be8b28e44caccd62bbb9b339777db194ca9554549db0c1feb5a917bd60ec2ddaefa64b8337e1583b6b0310717c0e075398f52e0325323aeb3097fbd130a9644ad6c23d976473c7aed55008dee30735e26b314470e136ca386b40a2c9d9c1dd66923b5c60869de6d2db0cd0a332d3ed091f1e3848a25a76bb5033870baa0075fe7883bf98f87ad3e8c69c817cba11b62fba849833ccc0e0959fcb2576a4758110319074678263513cc1b8109d1824806b11b7e78a301bd6a2c10f82eb3374fe067f4024dcdbc8b1363dd1217141f98eef9a36db1b6108253914086c46be47fef839a86fe21bdbc4c468b4c32d0f9b878e689c5cf6977e6e9ece07f0f5951dd1f3a65c7facd4f2aeab4731f9b425f1ba7874a5f8b6e78f99359ec211d0f888e12ce9f518ad37d8b7203cdcdd8d37025ece85e95cca23499d462a5e1c0920342c96d4ad3b4241b5620a69bbba388e80f350502bd6c54dda765da6660d28b989b1c96903412bbbb8d089f75c97756f8f2bf2164200162f7c282237e9d88da18964e3b4357ebeda03af15e3ae4a110b6e4efdec800ed513a2384faa6b72f97d1c8c35c577015d4bdbd2807c3ce106db44683007607c97e507affe39ffa64b23607bc367871dbe9c7135c3c6926d132fb54cb050d0c292df2a2663e2be7b9792cf5102400d4bc2f9977624fa0fae7f3f26056addda9f94aeff74933d068bfedc506407c02a1f74c589fcc2df92ac7acb467682d16f81a3eb9e1f59b039649f675aba00cafdf2063eeff2edb04ff7447cd07dbbe4fab6ec423b1e596e5d5a851865da03a62ed69af94736dae941e4c37e376f18b931b0466a23f46167b7e5dac04238a8f46220ea0339fb9179610d55bd0d0748b11058a85e0be8db07a73630b4be345edc7a2affb1075281d3df7b2e17a1debc903587a05194e7b1b24741bb7e9c1f3a28033ee6c4d2ae974a2d3df9b4427396050a1c42f0445212288847cecf5ffb276b827360599356f81c930b177e6c2f5cf32767422cfc82cef1035add578b000c125d38c31a49d4a16ff5cb6f4df7757e2e2fa93bcdd47b2c3d89995bcd2681383d04fccc03936bab94f8904b6e28468bc10c4c5a1caa2f94d6f59d1a7331546f4dce6fb7d29bd4bb3e8fdf6bfde6146dc6a2ca31ad407999f8330f790e073f8e3d85606d561b792759b5b57782051a2a7f99fa685772351ca8cb6ac647fffec62a2d314a1a4bec4338584e4caabdc68fc369945e2b5be5b9eee4aba7df7e60731c8d128fb1c855e3c94e6e3f5eaec370595fe48edcebcebf35f9250a5e0bb4ecc2ac017cd911ce0929c2090ddc9dd3e98d3f7ec74e96a6c79c5b6a04dda910da45d5f5554c3361ffa9a7290567349f8a0110a714284a316334e54340b34b028e4dc9080ad575f3387433ea00296416a2b068b61bb2a377e4fbff3983c42b175cbbf5832dab68b6173bd72bb5f66de847b3c590d36c5ed214c3c5c640a562a2886e227ad096d9f388d67508c47a090b5cd01964b7d9d663c978c26b89fb30328e2ab06179dbab06181b2319bcbd28e6e8e94a2fea7a9803ef20ee7472fd6e4e3497d4494ee830104487e07183abb6285df1e30e41ab02a90b80475b81a6c5c1869d6b400b5f8f31aff56dd629c6119c35cb29c29aece8c77865b46fd624e1629b1d4d0e876a2c1404e1db13779583bf2e1b71841363add8d38e809c47b85e9be377a8e311dcf13095a0bcd265fc60daf80bf14897e3e252a18ea54a795f760984cca404ab438bbe11977057a610e49489bc241224bd8de5a6a6a2b37a5594f508740a375d53c4286b201310863c15c271f4e39fca516725b22364712de1544020c6f29fc88c83f572082d3c012b8228c4236e5924cd6f718b97b0425e383a914322b2ccc36a73d0797e06df7c289f4ae99ec8bbea8960d8853fde0657eb0534841e363aba3ee99fa98be342b4b5bfd874b1e362450999c7c52a29be07bb96d88b350d8865edd6eedc00c5a845cc1c1bb8168e2fb2f18243054a862bb9b632e9c31df622136ae9d20946ab30fee83617a8e20fd64afa443e654d1b2643d8077167755fadae81420a86fb5f3618a0243632d8dc46fa954a0e036bf438136006071dd339b5fd454afe488ac2508a9ad487e6db7193017991d0dbea14291ce08867699b8a947d6e8945251e4ce26303e67586f0ba45af40e83af3c170d75d26b9fa386dc1bf42cd2f31dcaf117f679903cbe7480661782b73b4debb92df593ab0dae9017cbd4ce8c369ec1db6042b6dd3f7f545f91c32f8334bcbae72ce41dc08dcbb162e5239b809d2e4da96860949425eddaad19cb75525ca7966140e02c0c3bf4f02761a9494eba73143b7322013b055ce4e1c0a2f97223a9fceca1c724b463cb9f4e9082b09633cd3c073b75049e7479700597a8f1e886c9f3c61258ee63a7361e6dde1f7b40aa04ffa68f5bc52d1eb476796562a7e8a150c1b6a288c9c313c4a7ce624cee40c49b6d2b7f85fc53ac17cbe704e12a8a83cd2201d1cc8c67258df2a082927086a2603b099b9aba4fc3d4a266ba367284a5f642b584d432444a1cf3b195e250f2e158958a509cda3c5342ceee25469426d23dcfcb51e0b12dc0ae8b7cae68087f6e8c4a8c930c202919fe6b7555f847ee9dac2727face19655714d3458fbb95c5a4e6c38ee80f27a562c5e2d246c691f1b2a236ccc106c66e9f7054d0e28f015bdc56b906731a2092197b33d3222e5181a1c512fcba06bf7576a9dd6a14ec2fb348f533798c65a5a7823599711d6aba8a38d46aa9a9e8a5b3ce700759004b6e37e67f0b256d5b4122d93f846b4c50fb47d2228ee6509395b59dfa389a61b7c52792829317e5863e715dde1559b9712563e763ddf45ae43675d63a5f6cf8bf07d7da7e61185300a960744889b7efcd13b208cf19a5aac7055fae63a1d6b63bdb30a81afc3931562ec1192cdb777c07bbd4ef6e02e525d07d30571a44569d9b3551a88c84633cec705ceaba280a7ab654eb7828dd2537185ca7e1c32bda75ba1d7423ab00b39e82a4497755c5b3c61ade9524b8a78936ced78477adcd2a3badaf8e498758924fb4c631416d09ebd61c25062938dde38caa2f480a921bb1c36bc8e1712531690e70cc39cfdb302d85fb4b1fb02b1124d17688a9db8ef8e0c48b8e2a180d215226c31a36cd754aa826eafe672f02a31fcb1888391915ccbb1e871d9808fc0c68f24e4a647df76a2d19886290c35c67e6bcad653b2b8560901840b9878974b9dc66307e04f05da43410396d81c77caaced985b483eebbe6ba857889dec97a27229bef68898aa1e74d838bcfd96361a999761b9fa2b4a5006f6700ef238b137537cd5e2939a0e7e229af0428be90bf3286d87ed14c142d77fb820ea1c3f02cfaa7e71432fe3044b5dcdb2df03e54d281e25c3303709bb917a5715ec566937d7b925ab0cc4c8d93955554746c080fbcd62d1218e66e2e294f5e2357ee7f72054bf4f9eeda945488b89d856be8755f880f699dde725d422275af185944e93c6ed5359f05a3c0df4de5230db9c5e499d1492642d306a28ba219206288eb56eb8dd0c63da79f9b3ff50a27c1135c4cc7c9c8812eeb32e786b4a4c81833d6b0fa345321f11ec678a2caa226be40746fad4ffeafa76f447e85faf908e04e2a591fd4f42d6c9438e52ac4ed9811ddf7055ded01db954442e9c9a02d4808531944df6f551bb90eb8023177ceaed5b1202eee296c55b76efb07322d4f27b2e064a803443c7205e500dc3f42b831ca883cec70100000005020000ff0ce16f37d113d78e4efbd35ef3cbce6e6eceea87ad169757abbd623e4edcc84f2c16830ffdebddc3afd70095c1a97b0989f4a0c874525b4ce89173fb16669d80d0e6593b429cfe326b913f315413ca2f3297cddfe7dbd44516d87ca7928e5203c3d9399f30ca41fe1b1bc08fdd6e6df4a507c363aea5405d82e05a9bce1b468c64668fe992ffa0b7e7ceb4cf48d70f056bc59d8283643ab09d739c4ceba4da81a3a0b8e83d31c970b274a6ac3bbf7199bd1a6ee75b1eb00817227242d995f7bf1840d24764c5160eaf335362155f412071ad5733b27aaba28ed8285fe19a5303f815fe4ea167c2c547ec192f85321fc4dc13f50564dde68081d91585b221c4bd41a197739aeef0fa7fd1d4c466f1c4aecedac16e2127853f300c0c4c0e849f80de291acbc1585a94992eef1b434415bf252422b296d5e4cfa2d8db4399340802162afaf30654a399eb4b79b2468ca174a79c575f0174c3d168f802a99c2c958bddd26b1191094d43ac161a3f543a90fac471243432edfdc5ff35f470fb31c6f780e57cae9dc49994f4b1f35ba36da4191f545a3df689815bc0d3844c5626747333f3529f670490ddbd3b7601618a1026d76162207e379caefcb4dee7963dd66fd1877a0c7df1d381beecfda15061ac012217f6d7a981e30c1e4093c0213856a780a1e186342eab5c3ce74dc39ae4f66edf4d397e3acd7cd64c8c4d0cf8c3850373cf4417"),
                4289);
            privatePaillierKeyShares[1] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a52565e77f055fa3b99294856f1fce8d9e80b8f19206facadb19c4de3978c105293a714a906371b43c7a265cf80fd85decc90e17bc574a979b4b083f833f4bf5c27c7a727001465677363d422ce25ba6209399de391dc987cdd6d5b19579efb8418972eb170910d7783e31279fc169996bc6b1ce314e606c52902975654e806a47b4592b9f2f280754aaee3f0180b6206658e7df74e95047744e8445629f605c1fe35a373dc4f3a609eb8357cb4bd72ecb436f72e089f51d64041925e2bc8fafc6dfb227570d3dad6787f06b0be7695639a590d1a86093224f9efca005a552cdae1be767a4c039b4cf2af5cf2801f91ed37e8ac837242c7e9f2f76fdf7060b0c9040000000200000001010000000200000102000001020000010200000102000066bbd6fbcb510ae0ae44a7c50573ec439156a6a34b46920032d26b252e60def941e4de029cd6cf8c9a10106cfd7377591d2d6125b31b2bc84acd81e2c0bbd9a3aa1f9f6ad802e8ed56414ab38d6d6d1b88d563e800b6c0e857f098855213474391349e29bbe638237ab66ff3658045787487b551a5a190f4bdbe8e26b0286248c0e7ffe8edd1bdd8b66fdecf4d2ff0be8b28e44caccd62bbb9b339777db194ca9554549db0c1feb5a917bd60ec2ddaefa64b8337e1583b6b0310717c0e075398f52e0325323aeb3097fbd130a9644ad6c23d976473c7aed55008dee30735e26b314470e136ca386b40a2c9d9c1dd66923b5c60869de6d2db0cd0a332d3ed091f1e3848a25a76bb5033870baa0075fe7883bf98f87ad3e8c69c817cba11b62fba849833ccc0e0959fcb2576a4758110319074678263513cc1b8109d1824806b11b7e78a301bd6a2c10f82eb3374fe067f4024dcdbc8b1363dd1217141f98eef9a36db1b6108253914086c46be47fef839a86fe21bdbc4c468b4c32d0f9b878e689c5cf6977e6e9ece07f0f5951dd1f3a65c7facd4f2aeab4731f9b425f1ba7874a5f8b6e78f99359ec211d0f888e12ce9f518ad37d8b7203cdcdd8d37025ece85e95cca23499d462a5e1c0920342c96d4ad3b4241b5620a69bbba388e80f350502bd6c54dda765da6660d28b989b1c96903412bbbb8d089f75c97756f8f2bf2164200162f7c282237e9d88da18964e3b4357ebeda03af15e3ae4a110b6e4efdec800ed513a2384faa6b72f97d1c8c35c577015d4bdbd2807c3ce106db44683007607c97e507affe39ffa64b23607bc367871dbe9c7135c3c6926d132fb54cb050d0c292df2a2663e2be7b9792cf5102400d4bc2f9977624fa0fae7f3f26056addda9f94aeff74933d068bfedc506407c02a1f74c589fcc2df92ac7acb467682d16f81a3eb9e1f59b039649f675aba00cafdf2063eeff2edb04ff7447cd07dbbe4fab6ec423b1e596e5d5a851865da03a62ed69af94736dae941e4c37e376f18b931b0466a23f46167b7e5dac04238a8f46220ea0339fb9179610d55bd0d0748b11058a85e0be8db07a73630b4be345edc7a2affb1075281d3df7b2e17a1debc903587a05194e7b1b24741bb7e9c1f3a28033ee6c4d2ae974a2d3df9b4427396050a1c42f0445212288847cecf5ffb276b827360599356f81c930b177e6c2f5cf32767422cfc82cef1035add578b000c125d38c31a49d4a16ff5cb6f4df7757e2e2fa93bcdd47b2c3d89995bcd2681383d04fccc03936bab94f8904b6e28468bc10c4c5a1caa2f94d6f59d1a7331546f4dce6fb7d29bd4bb3e8fdf6bfde6146dc6a2ca31ad407999f8330f790e073f8e3d85606d561b792759b5b57782051a2a7f99fa685772351ca8cb6ac647fffec62a2d314a1a4bec4338584e4caabdc68fc369945e2b5be5b9eee4aba7df7e60731c8d128fb1c855e3c94e6e3f5eaec370595fe48edcebcebf35f9250a5e0bb4ecc2ac017cd911ce0929c2090ddc9dd3e98d3f7ec74e96a6c79c5b6a04dda910da45d5f5554c3361ffa9a7290567349f8a0110a714284a316334e54340b34b028e4dc9080ad575f3387433ea00296416a2b068b61bb2a377e4fbff3983c42b175cbbf5832dab68b6173bd72bb5f66de847b3c590d36c5ed214c3c5c640a562a2886e227ad096d9f388d67508c47a090b5cd01964b7d9d663c978c26b89fb30328e2ab06179dbab06181b2319bcbd28e6e8e94a2fea7a9803ef20ee7472fd6e4e3497d4494ee830104487e07183abb6285df1e30e41ab02a90b80475b81a6c5c1869d6b400b5f8f31aff56dd629c6119c35cb29c29aece8c77865b46fd624e1629b1d4d0e876a2c1404e1db13779583bf2e1b71841363add8d38e809c47b85e9be377a8e311dcf13095a0bcd265fc60daf80bf14897e3e252a18ea54a795f760984cca404ab438bbe11977057a610e49489bc241224bd8de5a6a6a2b37a5594f508740a375d53c4286b201310863c15c271f4e39fca516725b22364712de1544020c6f29fc88c83f572082d3c012b8228c4236e5924cd6f718b97b0425e383a914322b2ccc36a73d0797e06df7c289f4ae99ec8bbea8960d8853fde0657eb0534841e363aba3ee99fa98be342b4b5bfd874b1e362450999c7c52a29be07bb96d88b350d8865edd6eedc00c5a845cc1c1bb8168e2fb2f18243054a862bb9b632e9c31df622136ae9d20946ab30fee83617a8e20fd64afa443e654d1b2643d8077167755fadae81420a86fb5f3618a0243632d8dc46fa954a0e036bf438136006071dd339b5fd454afe488ac2508a9ad487e6db7193017991d0dbea14291ce08867699b8a947d6e8945251e4ce26303e67586f0ba45af40e83af3c170d75d26b9fa386dc1bf42cd2f31dcaf117f679903cbe7480661782b73b4debb92df593ab0dae9017cbd4ce8c369ec1db6042b6dd3f7f545f91c32f8334bcbae72ce41dc08dcbb162e5239b809d2e4da96860949425eddaad19cb75525ca7966140e02c0c3bf4f02761a9494eba73143b7322013b055ce4e1c0a2f97223a9fceca1c724b463cb9f4e9082b09633cd3c073b75049e7479700597a8f1e886c9f3c61258ee63a7361e6dde1f7b40aa04ffa68f5bc52d1eb476796562a7e8a150c1b6a288c9c313c4a7ce624cee40c49b6d2b7f85fc53ac17cbe704e12a8a83cd2201d1cc8c67258df2a082927086a2603b099b9aba4fc3d4a266ba367284a5f642b584d432444a1cf3b195e250f2e158958a509cda3c5342ceee25469426d23dcfcb51e0b12dc0ae8b7cae68087f6e8c4a8c930c202919fe6b7555f847ee9dac2727face19655714d3458fbb95c5a4e6c38ee80f27a562c5e2d246c691f1b2a236ccc106c66e9f7054d0e28f015bdc56b906731a2092197b33d3222e5181a1c512fcba06bf7576a9dd6a14ec2fb348f533798c65a5a7823599711d6aba8a38d46aa9a9e8a5b3ce700759004b6e37e67f0b256d5b4122d93f846b4c50fb47d2228ee6509395b59dfa389a61b7c52792829317e5863e715dde1559b9712563e763ddf45ae43675d63a5f6cf8bf07d7da7e61185300a960744889b7efcd13b208cf19a5aac7055fae63a1d6b63bdb30a81afc3931562ec1192cdb777c07bbd4ef6e02e525d07d30571a44569d9b3551a88c84633cec705ceaba280a7ab654eb7828dd2537185ca7e1c32bda75ba1d7423ab00b39e82a4497755c5b3c61ade9524b8a78936ced78477adcd2a3badaf8e498758924fb4c631416d09ebd61c25062938dde38caa2f480a921bb1c36bc8e1712531690e70cc39cfdb302d85fb4b1fb02b1124d17688a9db8ef8e0c48b8e2a180d215226c31a36cd754aa826eafe672f02a31fcb1888391915ccbb1e871d9808fc0c68f24e4a647df76a2d19886290c35c67e6bcad653b2b8560901840b9878974b9dc66307e04f05da43410396d81c77caaced985b483eebbe6ba857889dec97a27229bef68898aa1e74d838bcfd96361a999761b9fa2b4a5006f6700ef238b137537cd5e2939a0e7e229af0428be90bf3286d87ed14c142d77fb820ea1c3f02cfaa7e71432fe3044b5dcdb2df03e54d281e25c3303709bb917a5715ec566937d7b925ab0cc4c8d93955554746c080fbcd62d1218e66e2e294f5e2357ee7f72054bf4f9eeda945488b89d856be8755f880f699dde725d422275af185944e93c6ed5359f05a3c0df4de5230db9c5e499d1492642d306a28ba219206288eb56eb8dd0c63da79f9b3ff50a27c1135c4cc7c9c8812eeb32e786b4a4c81833d6b0fa345321f11ec678a2caa226be40746fad4ffeafa76f447e85faf908e04e2a591fd4f42d6c9438e52ac4ed9811ddf7055ded01db954442e9c9a02d4808531944df6f551bb90eb8023177ceaed5b1202eee296c55b76efb07322d4f27b2e064a803443c7205e500dc3f42b831ca883cec70200000005020000ff0ce16f37d113d78e4efbd35ef3cbce6e6eceea87ad169757abbd623e4edcc84f2c16830ffdebddc3afd70095c1a97b0989f4a0c874525b4ce89173fb16669d80d0e6593b429cfe326b913f315413ca2f3297cddfe7dbd44516d87ca7928e5203c3d9399f30ca41fe1b1bc08fdd6e6df4a507c363aea5405d82e05a9bce1b468c64668fe5aea3cc4194d157a66d724240819e7d80e1ec1d6bdb4acfd405699cf0ebddb50a9bd573caee53864b42524488afd81eb6b2ea6b097eff79e09d6f2f03e75c3d78fde5838955f491d3e275ea4fb9f5957db86ba897bcb55cae37fc703a2da0c319c72ba64c88093436f430dd3ca7b915daf7b641b734ca770e2ede08964cf0581e93da0f96990b3b6ad2cc3d90ae85391f3e7d8b060fde0cd65d72b7038bdc177de19d6649ad9a60f32d4157c68d10708e40acf9027647e0ee90492f52740b688f3d87a6fd5811e97854e7cc81c3d2c71decd02781ff4edff8dd6ea19a377d92319a0c9554d34e1ee585b338943eca88e89e52d1bc69c7583b73568f28d25aa3530b43dec54c84754ec7eb2a9e1a81fa5d1857d0caad32800de19946a7d480f6f91ef2a834871d30f6acc48d6e2ad3c2a52d5d5c65d8b807f21117973d76d43d9e1e61003d075d14bc18cce63e76f6f2e68cff4fad606c73d168b324bd53fb100d3c1f9a9d4b20c260226489da799b290a0527c58d95912f1d592a955e2cc99b48"),
                4289);
            privatePaillierKeyShares[2] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a52565e77f055fa3b99294856f1fce8d9e80b8f19206facadb19c4de3978c105293a714a906371b43c7a265cf80fd85decc90e17bc574a979b4b083f833f4bf5c27c7a727001465677363d422ce25ba6209399de391dc987cdd6d5b19579efb8418972eb170910d7783e31279fc169996bc6b1ce314e606c52902975654e806a47b4592b9f2f280754aaee3f0180b6206658e7df74e95047744e8445629f605c1fe35a373dc4f3a609eb8357cb4bd72ecb436f72e089f51d64041925e2bc8fafc6dfb227570d3dad6787f06b0be7695639a590d1a86093224f9efca005a552cdae1be767a4c039b4cf2af5cf2801f91ed37e8ac837242c7e9f2f76fdf7060b0c9040000000200000001010000000200000102000001020000010200000102000066bbd6fbcb510ae0ae44a7c50573ec439156a6a34b46920032d26b252e60def941e4de029cd6cf8c9a10106cfd7377591d2d6125b31b2bc84acd81e2c0bbd9a3aa1f9f6ad802e8ed56414ab38d6d6d1b88d563e800b6c0e857f098855213474391349e29bbe638237ab66ff3658045787487b551a5a190f4bdbe8e26b0286248c0e7ffe8edd1bdd8b66fdecf4d2ff0be8b28e44caccd62bbb9b339777db194ca9554549db0c1feb5a917bd60ec2ddaefa64b8337e1583b6b0310717c0e075398f52e0325323aeb3097fbd130a9644ad6c23d976473c7aed55008dee30735e26b314470e136ca386b40a2c9d9c1dd66923b5c60869de6d2db0cd0a332d3ed091f1e3848a25a76bb5033870baa0075fe7883bf98f87ad3e8c69c817cba11b62fba849833ccc0e0959fcb2576a4758110319074678263513cc1b8109d1824806b11b7e78a301bd6a2c10f82eb3374fe067f4024dcdbc8b1363dd1217141f98eef9a36db1b6108253914086c46be47fef839a86fe21bdbc4c468b4c32d0f9b878e689c5cf6977e6e9ece07f0f5951dd1f3a65c7facd4f2aeab4731f9b425f1ba7874a5f8b6e78f99359ec211d0f888e12ce9f518ad37d8b7203cdcdd8d37025ece85e95cca23499d462a5e1c0920342c96d4ad3b4241b5620a69bbba388e80f350502bd6c54dda765da6660d28b989b1c96903412bbbb8d089f75c97756f8f2bf2164200162f7c282237e9d88da18964e3b4357ebeda03af15e3ae4a110b6e4efdec800ed513a2384faa6b72f97d1c8c35c577015d4bdbd2807c3ce106db44683007607c97e507affe39ffa64b23607bc367871dbe9c7135c3c6926d132fb54cb050d0c292df2a2663e2be7b9792cf5102400d4bc2f9977624fa0fae7f3f26056addda9f94aeff74933d068bfedc506407c02a1f74c589fcc2df92ac7acb467682d16f81a3eb9e1f59b039649f675aba00cafdf2063eeff2edb04ff7447cd07dbbe4fab6ec423b1e596e5d5a851865da03a62ed69af94736dae941e4c37e376f18b931b0466a23f46167b7e5dac04238a8f46220ea0339fb9179610d55bd0d0748b11058a85e0be8db07a73630b4be345edc7a2affb1075281d3df7b2e17a1debc903587a05194e7b1b24741bb7e9c1f3a28033ee6c4d2ae974a2d3df9b4427396050a1c42f0445212288847cecf5ffb276b827360599356f81c930b177e6c2f5cf32767422cfc82cef1035add578b000c125d38c31a49d4a16ff5cb6f4df7757e2e2fa93bcdd47b2c3d89995bcd2681383d04fccc03936bab94f8904b6e28468bc10c4c5a1caa2f94d6f59d1a7331546f4dce6fb7d29bd4bb3e8fdf6bfde6146dc6a2ca31ad407999f8330f790e073f8e3d85606d561b792759b5b57782051a2a7f99fa685772351ca8cb6ac647fffec62a2d314a1a4bec4338584e4caabdc68fc369945e2b5be5b9eee4aba7df7e60731c8d128fb1c855e3c94e6e3f5eaec370595fe48edcebcebf35f9250a5e0bb4ecc2ac017cd911ce0929c2090ddc9dd3e98d3f7ec74e96a6c79c5b6a04dda910da45d5f5554c3361ffa9a7290567349f8a0110a714284a316334e54340b34b028e4dc9080ad575f3387433ea00296416a2b068b61bb2a377e4fbff3983c42b175cbbf5832dab68b6173bd72bb5f66de847b3c590d36c5ed214c3c5c640a562a2886e227ad096d9f388d67508c47a090b5cd01964b7d9d663c978c26b89fb30328e2ab06179dbab06181b2319bcbd28e6e8e94a2fea7a9803ef20ee7472fd6e4e3497d4494ee830104487e07183abb6285df1e30e41ab02a90b80475b81a6c5c1869d6b400b5f8f31aff56dd629c6119c35cb29c29aece8c77865b46fd624e1629b1d4d0e876a2c1404e1db13779583bf2e1b71841363add8d38e809c47b85e9be377a8e311dcf13095a0bcd265fc60daf80bf14897e3e252a18ea54a795f760984cca404ab438bbe11977057a610e49489bc241224bd8de5a6a6a2b37a5594f508740a375d53c4286b201310863c15c271f4e39fca516725b22364712de1544020c6f29fc88c83f572082d3c012b8228c4236e5924cd6f718b97b0425e383a914322b2ccc36a73d0797e06df7c289f4ae99ec8bbea8960d8853fde0657eb0534841e363aba3ee99fa98be342b4b5bfd874b1e362450999c7c52a29be07bb96d88b350d8865edd6eedc00c5a845cc1c1bb8168e2fb2f18243054a862bb9b632e9c31df622136ae9d20946ab30fee83617a8e20fd64afa443e654d1b2643d8077167755fadae81420a86fb5f3618a0243632d8dc46fa954a0e036bf438136006071dd339b5fd454afe488ac2508a9ad487e6db7193017991d0dbea14291ce08867699b8a947d6e8945251e4ce26303e67586f0ba45af40e83af3c170d75d26b9fa386dc1bf42cd2f31dcaf117f679903cbe7480661782b73b4debb92df593ab0dae9017cbd4ce8c369ec1db6042b6dd3f7f545f91c32f8334bcbae72ce41dc08dcbb162e5239b809d2e4da96860949425eddaad19cb75525ca7966140e02c0c3bf4f02761a9494eba73143b7322013b055ce4e1c0a2f97223a9fceca1c724b463cb9f4e9082b09633cd3c073b75049e7479700597a8f1e886c9f3c61258ee63a7361e6dde1f7b40aa04ffa68f5bc52d1eb476796562a7e8a150c1b6a288c9c313c4a7ce624cee40c49b6d2b7f85fc53ac17cbe704e12a8a83cd2201d1cc8c67258df2a082927086a2603b099b9aba4fc3d4a266ba367284a5f642b584d432444a1cf3b195e250f2e158958a509cda3c5342ceee25469426d23dcfcb51e0b12dc0ae8b7cae68087f6e8c4a8c930c202919fe6b7555f847ee9dac2727face19655714d3458fbb95c5a4e6c38ee80f27a562c5e2d246c691f1b2a236ccc106c66e9f7054d0e28f015bdc56b906731a2092197b33d3222e5181a1c512fcba06bf7576a9dd6a14ec2fb348f533798c65a5a7823599711d6aba8a38d46aa9a9e8a5b3ce700759004b6e37e67f0b256d5b4122d93f846b4c50fb47d2228ee6509395b59dfa389a61b7c52792829317e5863e715dde1559b9712563e763ddf45ae43675d63a5f6cf8bf07d7da7e61185300a960744889b7efcd13b208cf19a5aac7055fae63a1d6b63bdb30a81afc3931562ec1192cdb777c07bbd4ef6e02e525d07d30571a44569d9b3551a88c84633cec705ceaba280a7ab654eb7828dd2537185ca7e1c32bda75ba1d7423ab00b39e82a4497755c5b3c61ade9524b8a78936ced78477adcd2a3badaf8e498758924fb4c631416d09ebd61c25062938dde38caa2f480a921bb1c36bc8e1712531690e70cc39cfdb302d85fb4b1fb02b1124d17688a9db8ef8e0c48b8e2a180d215226c31a36cd754aa826eafe672f02a31fcb1888391915ccbb1e871d9808fc0c68f24e4a647df76a2d19886290c35c67e6bcad653b2b8560901840b9878974b9dc66307e04f05da43410396d81c77caaced985b483eebbe6ba857889dec97a27229bef68898aa1e74d838bcfd96361a999761b9fa2b4a5006f6700ef238b137537cd5e2939a0e7e229af0428be90bf3286d87ed14c142d77fb820ea1c3f02cfaa7e71432fe3044b5dcdb2df03e54d281e25c3303709bb917a5715ec566937d7b925ab0cc4c8d93955554746c080fbcd62d1218e66e2e294f5e2357ee7f72054bf4f9eeda945488b89d856be8755f880f699dde725d422275af185944e93c6ed5359f05a3c0df4de5230db9c5e499d1492642d306a28ba219206288eb56eb8dd0c63da79f9b3ff50a27c1135c4cc7c9c8812eeb32e786b4a4c81833d6b0fa345321f11ec678a2caa226be40746fad4ffeafa76f447e85faf908e04e2a591fd4f42d6c9438e52ac4ed9811ddf7055ded01db954442e9c9a02d4808531944df6f551bb90eb8023177ceaed5b1202eee296c55b76efb07322d4f27b2e064a803443c7205e500dc3f42b831ca883cec70300000005020000ff0ce16f37d113d78e4efbd35ef3cbce6e6eceea87ad169757abbd623e4edcc84f2c16830ffdebddc3afd70095c1a97b0989f4a0c874525b4ce89173fb16669d80d0e6593b429cfe326b913f315413ca2f3297cddfe7dbd44516d87ca7928e5203c3d9399f30ca41fe1b1bc08fdd6e6df4a507c363aea5405d82e05a9bce1b468c64668fe1ca47f7cb41d3fa7d920d757b97775d7f407400271922035b1f2e5f60341ab12cfa791e252a3265ea48e51777a295ce860ab6260ae6dc817e61486648b677a8aa9705f103fcb5d045af8c937f023dd3c7be5ca58cea9290fc8e5e8d70632b87e4ecef89d3c8264f3e632f9ab4735e36b08a8e9cede7bbd896ab9a4c6f583f18c98cc52e32b244a2113ea6b6728e2fb0d05bd390ccefb00d60ac60ce86398f143001e271fec205d2cb173e99cdf4fcbe69ea840d3549b6e699875e56a2d1ebd62b74baaa60c4d8593e6342f78ee00936dcd82b8b3295a5bd481eb0ada89128b951a30fdd65fa86238bb72be02db923ed9d09b7a5b2d458bc05eb7b575a23cfc9f778c323f5a456f741ec68b12315af9a7c3a26203999917bcf6d0c18dc750e9b52d6e0bf8b50feebebf7ff0ab57e462329dc831c1cb4bb30fc8bf1580b1c21012fbed02cf84fcd2bd6e138207bcbd5eef5707cbc4ea29853e2b02df2d327543e94441089de595a36fca9e41d4613e91895cf820e44de96112db991a5b8e5c3f279"),
                4289);
            privatePaillierKeyShares[3] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a52565e77f055fa3b99294856f1fce8d9e80b8f19206facadb19c4de3978c105293a714a906371b43c7a265cf80fd85decc90e17bc574a979b4b083f833f4bf5c27c7a727001465677363d422ce25ba6209399de391dc987cdd6d5b19579efb8418972eb170910d7783e31279fc169996bc6b1ce314e606c52902975654e806a47b4592b9f2f280754aaee3f0180b6206658e7df74e95047744e8445629f605c1fe35a373dc4f3a609eb8357cb4bd72ecb436f72e089f51d64041925e2bc8fafc6dfb227570d3dad6787f06b0be7695639a590d1a86093224f9efca005a552cdae1be767a4c039b4cf2af5cf2801f91ed37e8ac837242c7e9f2f76fdf7060b0c9040000000200000001010000000200000102000001020000010200000102000066bbd6fbcb510ae0ae44a7c50573ec439156a6a34b46920032d26b252e60def941e4de029cd6cf8c9a10106cfd7377591d2d6125b31b2bc84acd81e2c0bbd9a3aa1f9f6ad802e8ed56414ab38d6d6d1b88d563e800b6c0e857f098855213474391349e29bbe638237ab66ff3658045787487b551a5a190f4bdbe8e26b0286248c0e7ffe8edd1bdd8b66fdecf4d2ff0be8b28e44caccd62bbb9b339777db194ca9554549db0c1feb5a917bd60ec2ddaefa64b8337e1583b6b0310717c0e075398f52e0325323aeb3097fbd130a9644ad6c23d976473c7aed55008dee30735e26b314470e136ca386b40a2c9d9c1dd66923b5c60869de6d2db0cd0a332d3ed091f1e3848a25a76bb5033870baa0075fe7883bf98f87ad3e8c69c817cba11b62fba849833ccc0e0959fcb2576a4758110319074678263513cc1b8109d1824806b11b7e78a301bd6a2c10f82eb3374fe067f4024dcdbc8b1363dd1217141f98eef9a36db1b6108253914086c46be47fef839a86fe21bdbc4c468b4c32d0f9b878e689c5cf6977e6e9ece07f0f5951dd1f3a65c7facd4f2aeab4731f9b425f1ba7874a5f8b6e78f99359ec211d0f888e12ce9f518ad37d8b7203cdcdd8d37025ece85e95cca23499d462a5e1c0920342c96d4ad3b4241b5620a69bbba388e80f350502bd6c54dda765da6660d28b989b1c96903412bbbb8d089f75c97756f8f2bf2164200162f7c282237e9d88da18964e3b4357ebeda03af15e3ae4a110b6e4efdec800ed513a2384faa6b72f97d1c8c35c577015d4bdbd2807c3ce106db44683007607c97e507affe39ffa64b23607bc367871dbe9c7135c3c6926d132fb54cb050d0c292df2a2663e2be7b9792cf5102400d4bc2f9977624fa0fae7f3f26056addda9f94aeff74933d068bfedc506407c02a1f74c589fcc2df92ac7acb467682d16f81a3eb9e1f59b039649f675aba00cafdf2063eeff2edb04ff7447cd07dbbe4fab6ec423b1e596e5d5a851865da03a62ed69af94736dae941e4c37e376f18b931b0466a23f46167b7e5dac04238a8f46220ea0339fb9179610d55bd0d0748b11058a85e0be8db07a73630b4be345edc7a2affb1075281d3df7b2e17a1debc903587a05194e7b1b24741bb7e9c1f3a28033ee6c4d2ae974a2d3df9b4427396050a1c42f0445212288847cecf5ffb276b827360599356f81c930b177e6c2f5cf32767422cfc82cef1035add578b000c125d38c31a49d4a16ff5cb6f4df7757e2e2fa93bcdd47b2c3d89995bcd2681383d04fccc03936bab94f8904b6e28468bc10c4c5a1caa2f94d6f59d1a7331546f4dce6fb7d29bd4bb3e8fdf6bfde6146dc6a2ca31ad407999f8330f790e073f8e3d85606d561b792759b5b57782051a2a7f99fa685772351ca8cb6ac647fffec62a2d314a1a4bec4338584e4caabdc68fc369945e2b5be5b9eee4aba7df7e60731c8d128fb1c855e3c94e6e3f5eaec370595fe48edcebcebf35f9250a5e0bb4ecc2ac017cd911ce0929c2090ddc9dd3e98d3f7ec74e96a6c79c5b6a04dda910da45d5f5554c3361ffa9a7290567349f8a0110a714284a316334e54340b34b028e4dc9080ad575f3387433ea00296416a2b068b61bb2a377e4fbff3983c42b175cbbf5832dab68b6173bd72bb5f66de847b3c590d36c5ed214c3c5c640a562a2886e227ad096d9f388d67508c47a090b5cd01964b7d9d663c978c26b89fb30328e2ab06179dbab06181b2319bcbd28e6e8e94a2fea7a9803ef20ee7472fd6e4e3497d4494ee830104487e07183abb6285df1e30e41ab02a90b80475b81a6c5c1869d6b400b5f8f31aff56dd629c6119c35cb29c29aece8c77865b46fd624e1629b1d4d0e876a2c1404e1db13779583bf2e1b71841363add8d38e809c47b85e9be377a8e311dcf13095a0bcd265fc60daf80bf14897e3e252a18ea54a795f760984cca404ab438bbe11977057a610e49489bc241224bd8de5a6a6a2b37a5594f508740a375d53c4286b201310863c15c271f4e39fca516725b22364712de1544020c6f29fc88c83f572082d3c012b8228c4236e5924cd6f718b97b0425e383a914322b2ccc36a73d0797e06df7c289f4ae99ec8bbea8960d8853fde0657eb0534841e363aba3ee99fa98be342b4b5bfd874b1e362450999c7c52a29be07bb96d88b350d8865edd6eedc00c5a845cc1c1bb8168e2fb2f18243054a862bb9b632e9c31df622136ae9d20946ab30fee83617a8e20fd64afa443e654d1b2643d8077167755fadae81420a86fb5f3618a0243632d8dc46fa954a0e036bf438136006071dd339b5fd454afe488ac2508a9ad487e6db7193017991d0dbea14291ce08867699b8a947d6e8945251e4ce26303e67586f0ba45af40e83af3c170d75d26b9fa386dc1bf42cd2f31dcaf117f679903cbe7480661782b73b4debb92df593ab0dae9017cbd4ce8c369ec1db6042b6dd3f7f545f91c32f8334bcbae72ce41dc08dcbb162e5239b809d2e4da96860949425eddaad19cb75525ca7966140e02c0c3bf4f02761a9494eba73143b7322013b055ce4e1c0a2f97223a9fceca1c724b463cb9f4e9082b09633cd3c073b75049e7479700597a8f1e886c9f3c61258ee63a7361e6dde1f7b40aa04ffa68f5bc52d1eb476796562a7e8a150c1b6a288c9c313c4a7ce624cee40c49b6d2b7f85fc53ac17cbe704e12a8a83cd2201d1cc8c67258df2a082927086a2603b099b9aba4fc3d4a266ba367284a5f642b584d432444a1cf3b195e250f2e158958a509cda3c5342ceee25469426d23dcfcb51e0b12dc0ae8b7cae68087f6e8c4a8c930c202919fe6b7555f847ee9dac2727face19655714d3458fbb95c5a4e6c38ee80f27a562c5e2d246c691f1b2a236ccc106c66e9f7054d0e28f015bdc56b906731a2092197b33d3222e5181a1c512fcba06bf7576a9dd6a14ec2fb348f533798c65a5a7823599711d6aba8a38d46aa9a9e8a5b3ce700759004b6e37e67f0b256d5b4122d93f846b4c50fb47d2228ee6509395b59dfa389a61b7c52792829317e5863e715dde1559b9712563e763ddf45ae43675d63a5f6cf8bf07d7da7e61185300a960744889b7efcd13b208cf19a5aac7055fae63a1d6b63bdb30a81afc3931562ec1192cdb777c07bbd4ef6e02e525d07d30571a44569d9b3551a88c84633cec705ceaba280a7ab654eb7828dd2537185ca7e1c32bda75ba1d7423ab00b39e82a4497755c5b3c61ade9524b8a78936ced78477adcd2a3badaf8e498758924fb4c631416d09ebd61c25062938dde38caa2f480a921bb1c36bc8e1712531690e70cc39cfdb302d85fb4b1fb02b1124d17688a9db8ef8e0c48b8e2a180d215226c31a36cd754aa826eafe672f02a31fcb1888391915ccbb1e871d9808fc0c68f24e4a647df76a2d19886290c35c67e6bcad653b2b8560901840b9878974b9dc66307e04f05da43410396d81c77caaced985b483eebbe6ba857889dec97a27229bef68898aa1e74d838bcfd96361a999761b9fa2b4a5006f6700ef238b137537cd5e2939a0e7e229af0428be90bf3286d87ed14c142d77fb820ea1c3f02cfaa7e71432fe3044b5dcdb2df03e54d281e25c3303709bb917a5715ec566937d7b925ab0cc4c8d93955554746c080fbcd62d1218e66e2e294f5e2357ee7f72054bf4f9eeda945488b89d856be8755f880f699dde725d422275af185944e93c6ed5359f05a3c0df4de5230db9c5e499d1492642d306a28ba219206288eb56eb8dd0c63da79f9b3ff50a27c1135c4cc7c9c8812eeb32e786b4a4c81833d6b0fa345321f11ec678a2caa226be40746fad4ffeafa76f447e85faf908e04e2a591fd4f42d6c9438e52ac4ed9811ddf7055ded01db954442e9c9a02d4808531944df6f551bb90eb8023177ceaed5b1202eee296c55b76efb07322d4f27b2e064a803443c7205e500dc3f42b831ca883cec70400000005020000ff0ce16f37d113d78e4efbd35ef3cbce6e6eceea87ad169757abbd623e4edcc84f2c16830ffdebddc3afd70095c1a97b0989f4a0c874525b4ce89173fb16669d80d0e6593b429cfe326b913f315413ca2f3297cddfe7dbd44516d87ca7928e5203c3d9399f30ca41fe1b1bc08fdd6e6df4a507c363aea5405d82e05a9bce1b468c64668fdde5ec2354eed69d54b6a8a8b6ad503d7d9efbe2e256f936e238f321cf7c57ad4f591cc87f661145894f77ea6695537e556281e10c4eb9891c25219d8d859313dc30265e7ea3770eb77ca33cae4a861211c44da282186fc54ae4c0aaa698b64cb012b36d5b08436a45d22e582c3f0357861d66f8249aad3a1f28569048638dd97485b04ccecb7e08b7aa812f546dda288179299693cf820deafb4ee608e74210e222277db3d67144a3013bdbd55ce90c45945b21681d25ec447e737df32fcc43c7abedadc4319ec904719e229bfc3fa69bc386eee32bfc9a975ff2b9b6ead3e071ac13257721be2831e8a487c7337d5251751c79a93eea1fd063a01f8b7544f09be6426925fc29793510e637a810dd3a9b5bf46fa885f07790f87eeb11159c3fac8eced6e21ae0a6e1433987fcd1b883ae8ba8dbd390be5a0706cb18d8c16dc4c15f3f59b3983d42f1a9a35ab920b4eb0453fa28efe4c433f3f7a8c0e8faad6d1b4c01791f6793ab993163b0b1ae37082199dc56fc279af33e19f8b6139ebe49aa"),
                4289);
            
//            var privatePaillierKeyShares = new PaillierPrivateThresholdKey[3];
//            
//            privatePaillierKeyShares[0] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);
//            privatePaillierKeyShares[1] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);
//            privatePaillierKeyShares[2] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);

            var curveParams = new CurveParams("secp256k1");
            
            PaillierKey paillierKey = privatePaillierKeyShares[0].getPublicKey();
            
            plainRnd = new Random(98428965);
            PublicParameters publicParameters = Util.generateParamsforBitcoin(curveParams, 60, 256, plainRnd, paillierKey);
            
            plainRnd = new Random(58984789);
            
            var players = new List<PlayerSigner>();

            byte[] message =
                HexUtil.hexToBytes("e581b3843b9aca0083030d4094627306090abab3a6e1400e9345bc60c78a8bef570180118080");
            message = Sha3(message);
            
            message = HexUtil.hexToBytes("0xbadcab1e");
            //message = injectEthereumPrefix(message);
            Console.WriteLine("Hashed msg=" + HexUtil.bytesToHex(message));

            BigInteger privateKey =
                new BigInteger("d95d6db65f3e2223703c5d8e205d98e3e6b470f067b0f94f6c6bf73d4301ce48", 16);
            BigInteger randomness = Util.randomFromZnStar(curveParams.Q, plainRnd);
            BigInteger encryptedPrivateKey = new Paillier(paillierKey).encrypt(privateKey, randomness);
            ECPoint publicKey = curveParams.G.Multiply(privateKey.Mod(curveParams.Q)).Normalize();

            int n = privatePaillierKeyShares.Length;
            for (int i = 0; i < n; i++)
            {
                players.Add(new PlayerSigner(
                    publicParameters,
                    curveParams,
                    privatePaillierKeyShares[i],
                    encryptedPrivateKey,
                    message
                ));
            }

            Console.WriteLine("paillierpub=" + paillierKey.getN());
            Console.WriteLine("h1=" + publicParameters.h1);
            Console.WriteLine("h2=" + publicParameters.h2);
            Console.WriteLine("pk.x=" + publicKey.XCoord.ToBigInteger());
            Console.WriteLine("pk.y=" + publicKey.YCoord.ToBigInteger());
            Console.WriteLine("priv=" + encryptedPrivateKey);
            Console.WriteLine("msg=" + HexUtil.bytesToHex(message));

            long currentTime = CurrentTimeMillis();
            Console.WriteLine("Initialization took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round1Message> round1Messages = players.Select(player => player.round1()).ToList();

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R1 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            List<Round2Message> round2Messages = new List<Round2Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round1Messages);
                List<Round1Message> inputs = new List<Round1Message>(round1Messages);
                inputs.RemoveAt(i);
                round2Messages.Add(players[i].round2(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R2 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round3Message> round3Messages = new List<Round3Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round2Messages);
                List<Round2Message> inputs = new List<Round2Message>(round2Messages);
                inputs.RemoveAt(i);
                round3Messages.Add(players[i].round3(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R3 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round4Message> round4Messages = new List<Round4Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round3Messages);
                List<Round3Message> inputs = new List<Round3Message>(round3Messages);
                inputs.RemoveAt(i);
                round4Messages.Add(players[i].round4(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R4 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round5Message> round5Messages = new List<Round5Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round4Messages);
                List<Round4Message> inputs = new List<Round4Message>(round4Messages);
                inputs.RemoveAt(i);
                round5Messages.Add(players[i].round5(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R5 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round6Message> round6Messages = new List<Round6Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round5Messages);
                List<Round5Message> inputs = new List<Round5Message>(round5Messages);
                inputs.RemoveAt(i);
                round6Messages.Add(players[i].round6(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R6 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            List<DSASignature> signatures = new List<DSASignature>();
            for (int i = 0; i < n; ++i)
            {
                List<Round6Message> inputs = new List<Round6Message>(round6Messages);
                inputs.RemoveAt(i);
                signatures.Add(players[i].outputSignature(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("Signatire recover took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            foreach (DSASignature signature in signatures) {
                BigInteger mprime = new BigInteger(1, message);
                BigInteger invS = signature.s.ModInverse(curveParams.Q);
                ECPoint validation =
                    publicKey.Multiply(signature.r.Multiply(invS).Mod(curveParams.Q))
                        .Add(curveParams.G.Multiply(mprime.Multiply(invS).Mod(curveParams.Q)));
                BigInteger vX = validation.Normalize().XCoord.ToBigInteger().Mod(curveParams.Q);
                if (!vX.Equals(signature.r))
                    throw new Exception("Signature check failed!");
                
                byte[] publicKeyEncoded = publicKey.GetEncoded(false);
                publicKeyEncoded = Arrays.CopyOfRange(publicKeyEncoded, 1, publicKeyEncoded.Length);
                BigInteger publicKeyBigint = new BigInteger(1, publicKeyEncoded);
                
//                int recId = getRecId(message, signature, publicKeyBigint);
//                if (recId == -1) throw new Exception("Ecrecover failed");
//                int v = recId + 27;
//
//                Console.WriteLine(
//                    "v=" + Numeric.toHexStringNoPrefixZeroPadded(BigInteger.ValueOf(v), 2) +
//                    " r=" + Numeric.toHexStringNoPrefixZeroPadded(signature.r, 64) +
//                    " s=" + Numeric.toHexStringNoPrefixZeroPadded(signature.s, 64)
//                );
            }
        }
        
        /*private int getRecId(byte[] message, DSASignature signature, BigInteger publicKeyBigint) {
            for (int i = 0; i < 4; ++i) {
                ECDSASignature sig = new ECDSASignature(signature.r, signature.s);
                BigInteger recoveredKey = Sign.recoverFromSignature(i, sig, message);
                if (recoveredKey == null) continue;
                if (recoveredKey.equals(publicKeyBigint)) {
                    return i;
                }
            }
            return -1;
        }*/
        
//        private string toHexStringNoPrefixZeroPadded(BigInteger value, int padding)
//        {
//            
//        }
    }
}