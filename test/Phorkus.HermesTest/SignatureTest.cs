using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Org.BouncyCastle.Crypto.Digests;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.Math.EC;
using Org.BouncyCastle.Utilities;
using Phorkus.Party.Crypto;
using Phorkus.Party.Crypto.Key;
using Phorkus.Party.Signer;
using Phorkus.Party.Signer.Messages;

namespace Phorkus.HermesTest
{
    [TestClass]
    public class SignatureTest
    {
        private static byte[] Sha3(byte[] message)
        {
            var kecc = new KeccakDigest(256);
            kecc.BlockUpdate(message, 0, message.Length);
            var result = new byte[32];
            kecc.DoFinal(result, 0);
            return result;
        }

        public static long CurrentTimeMillis()
        {
            return (long) DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;
        }

        private void _validateMsgs<T>(IEnumerable<T> ts)
            where T : ISignerMessage, new()
        {
            foreach (var t in ts)
                _validateMsg(t);
        }
        
        private void _validateMsg<T>(T t)
            where T : ISignerMessage, new()
        {
            var bytes = t.ToByteArray();
            var next = new T();
            next.fromByteArray(bytes);
            var bytes2 = next.ToByteArray();
            if (!bytes.SequenceEqual(bytes2))
                throw new Exception("Wooooow!");
        }
        
        [TestMethod]
        public void TestSignature()
        {
            var plainRnd = new Random(123456789);

            long checkpoint = CurrentTimeMillis();

            var privatePaillierKeyShares = new PaillierPrivateThresholdKey[4];
            
            privatePaillierKeyShares[0] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a2d352ba69a4caf0ed696f64a8779913911368bfa2640818a1bc125db8a236d836c6cd3a3e783ff81ac476dae089483b909f268fd0a401af20560b29a241414330a72be2662dd184ed85b4bc6f97fb18c96da56e0a56ae74178ea8a4ac6e53a407b805dfd5bb681dd807c08d5e266c17ef1538de6944f641ccce7bc23d15e9bacfe341c0b94a3123c41104e8ba15a87b9bb236268e2ea5eea4bc32e063d5ed52e8d78fbdce8a4a7cf8633ef8382034518d954e07042910bb0b0a70ef0ef163f7557bc67f2c5fbdd005dc04cad2324b6b89ea109cf5ff089615d21bfe749f9cb1c6eaf7fb36896dff7f1efdf5be983394d4338b446b9388295320b7ee8f0d0b27104000000020000000101000000020000010200000102000001020000010200005439f5a9033d61de63f1f4aae1e344a9e8236b420910910a6cb2f10a16743b1c844ba10c258630fba36e49a29dd2014ceae7cfb13978246a71d34ec3f387316624b7b32b0b156814e788cd5fe80c9d50b6cc805c610d9d86d0116cb15debbd06efd1e5e0ac2f2f4090e57ec8122f0c10b0322381fbbf34fcdf06d11fdddd065834484a85a152505d360b8002e22ff73256baa99229c9447ecb7c211f7edf34f22529f9dffa6271683b03b21e5f066b85164a905a7cf4328edca856eef8392d56f8e529673f9df161f25feaf485b05e4f6f51b784a728ce229e787547dda157cacae18ad60243e1672faaaf861df1d26d52758b1a5f42513f9fba5d44b4394a98b700d4988ee34463d6abca289d9cbed4d902dee2d43fba10f728e48a3b0f21c8e085ab89e79d8883c124b833e04b8da573a7bfe9db8bf0e69c1cf6700e358fdff0fe66f7bf155294938129bf56e1a0e41d5189c671cd455a45a361b5f2cceef2a13e0b3f49f7dc61077adf517c99110340c5e5681f93fe213d3d14c2143ccbae9c63bfc863ae397343859be73295b2304518597391da8256e3b0ae6b56b0639d3479222b1bdaaf09e9d52a643552e82e9a614d2bf252cdcbe960ab4a77ba62ffc2adf06152e7fd4404f1046291507df3ff8f8f1ad201e1765df0457399d155d617a9508e86e09ed5cf4fc6197a044a2cc0a13af5142cc62cc2e458c22a62683df25bd9b696e3392c16483f6c726882c30ea8ea4efcdcc9645905f41d92f93f82d2b6711d86eb22c62b8a15c8f6fb279a635c2e60679f5ab2e31a9a91eb2f9317908b10d51f84216fda1554a8d5ac381a8c1d5b31dcc7d03621165a49896b4cb3e725abf971e71f79eb477ef332c1c420c89e188173fd387930323b4b4baa3dd698bb7668aa4b821e8e2f3275f5d65005a675b5546da34b4ab02ac1b822a255fe2099e7a5838edbd34e17a3cb1ad22e5cfa4cdb257a921a56badd2fcfcb371aaa4f80c4c961fb93d636fa96c5a1d2e6f5e8b679722527aca9652cecff1744e71e11e79fd9e723f84e4a19e57c72930f316644302e2e733fca16250beb412107c4404d915e33385892e457de1b8474773eeb4e35b970af3cc778226bdf71159862222a92b4ccf103506ff9805c338dcb94512c31c789966685b1c9ff93ecb8cf7076af4149a999872945f1eb83dfeb5a68f9f5492c1225dbd4911343d7ec713c032459acb8fffe3f7965528a73779c607e420cf50df5111184d852ff179ea7e4e2a25a20adbf31eb5a9af1a9bfca3da678bff3e31d26360980ae06a69825377d2826e39e2381bec3ba8b516d6e8c97929e215f3f031c8ceabff7ffb2108c805a1444ac9479b27aacce08ce1098c15ffc83ce0d46e9299c1282bcfd1e11e2e46aa39573c994c23f5893bc0dd375d60a59e92b6b081d795fc3b99bae5e7a26bc59c195effef7dabd05d7a54a9133ae6002def3e477507a7230044fd2bd912a72a597e9fa7bd10739efed7f75c67f300da8ed3dc02a9fa5527217f3ad92d229c606db1fb6019c2ba1a054b662b8f846db6ab3b5c2d88e47a270f404006b362894a6290a926c845987644fc8b3fd3baf4ffdef5b13154c72d84a943221d5d82e8f9c850cc0c85b38641b105e00eafaa49a483cf99c90365a95719115c56db2953b991156c484d476d8df237f45cc0cb64f83602e1324e22790554c5635606d24a7647d2c754d6f2de3abe16f4b6f202095e4e822fac14712c69f7a2bba4a86f088f781520c5fe190ac5640a1d43f89d13cf76ab855862cdc6266220b45c3432749c4351571463370c1cfa730cd828bb9e3c43717723fc7709557bfbf5282bc6c65e40cea91e49e19954c8673fdd3461758313c87c6b4a4b9c08931b040942230b321272fa5a59d929e1b6fe416eaed6197c8bc9a64e1dc3fbc44b836c0b25982946ac0473e6a3f78cb8e508d933d6d788f93007164c6b922ff5258bf23f7322f982e030a72dbf3693b969ccd0fbab33144e33404ca2678079107d29ff9d9589adb8f5e9aaa1a270ff84ce0b5046e6e0a4ac28276b4503dd9ab7d82678b3411c1ad19e9262de021306c864ed49aa8f0cfc79b0a41396a6b99311893b6f43cd62419f15163639997fd94cd75543cb6dc2c8bb5e075343f7ca8c7c2aa9643188e2b1f36b0a859b3f63490d18c807e7bdfe73c9e1f2f6c72a4257e1335f5f8a2759692b797e0b3ffc955d15d4acce6b22508ea81b12c5f61455bc5acbe4dbf822e68c417c84a945e0b109e97148e1b3b63165dc3f0410d074ad9afef80449d89321bfa5e3a824bacc82256e9fe19fd66cd11a85e5ff27959f94684739aaf051a7d3f7ffdc3a419434555a2703223b84fc415ed2790fbbf638dd1cbbf9ffb54cbf2835d8a60d31d4a762e4cf888bac956bac0f7d16da509e644e9aa1e300db1107998c1cbaadda156c7977e0c54b1331f2f2c98b36415dccdb426858b1dce43deb67b0214b3e00c6b675c075250dfeacb894fd74f460e2400419dd88cdd3d5cbf2498601fcfda54bc029ca75b93784e8e2769d212bccf164651ed7ecd9dfe9959255344d1732452d994ab73d8f814797a01a73fb57055d4c6ae6b136a32d0768d0a369eabf0846a2a9ad99bde1c9c523fddc30f41493ba193411e56a28b82156f28ef0f33428cff84536421642dc03ea4d3794ead7fd6d83a69e9d91ee53f127f6d86a26df9e99a36bf239b9a445f3e282fbe4c630c6c53f4b70edf128d493b526ee97a9d5d9b0a47efa47f4f1eb90e482628b305f6133c78f2725a2f61b25622883b117c18b1cf1d7e9e969b46cbaa2b76d35505bb5c98b8717f21faeda29f3cc1bb94f8c94eb8cad8b4143a4b2998820e90ceceda5bdb2434771362227d43471d1b2d2612df90692533309daea52a1d53362b223e136f9b8d5c5034ab0e0cda017d3713846afabc0c736a7162f0e6ff45daa4535e966862247308e075533662a80b4bbf1fc615e8cacf1de58c95b5519c297caab9f8242eef98cb6c6c1eac0ba6f61ee69c5e43a00daf4cb7f2b847703edb0268288a734d247cd761f6e7a8df01495dc7414d48c0938e0632fd1f4b49dcc0cde0f63b1489138ca6a6640c7efbb76c4c2551a6dc8850e6dfbd8ad98bd668e13799083862ebff77fd734578adb539c18e0be2e775bf8c59df435a2d3635db3ff87c2872b9a5aa67477a72c2c9379e3e9301f9413682b16b66a5f2ad6941bf4aa8d4910a6325d778a3d0a3ebcc30806ab31a5f7ce84eb92d6b6ede436336f3938addff5e9f04c703b61c6cfded9cb8c744838035786249d948e13372afd6add6d230261b3fbd66488dcf94c72667aacee423a8de5d2ac2d0f33e0d7409fb32d740ebdf07ec9007e245c4e3ca47a2d87e6059dfb9ea2cf8dd8f0ec793a527b4b33988ea9886d788eb3b5551b154efa62468aec70d1135ba72d7651fdc72515651e80fa0366d04c1f3802fb0d40e051cc1c7fb4d2375661796a7dc70299ae448e88756bf0bf62fb92415f69cc687196e324798391786485f65cee7ed6c651d9927ac02ba06a995a64c3a25744aff84445e8425796e0ad9d13a496ea0c72695a87bda6a3eb7c5cd0baf3e24602fcda9f686bace3b0084c800a8594141fa6960f2989b999887be78fb1a1fcec485087f375c4ec317e7ea1f669707b1a60771734a8cf795bf5a88b51109ff7353034c8c235e10f0e43ab7def01bf2f74435cde5d31524b20e1d64ad796c98f8296f591214611d15c92a48b9d9de47780a3d0e97ff0086e8aa8a9d8a8b99c02122bdfc24b7b230a2197887245d8721b656f8e00d3d0e441578d13cdf51468ebb804641e7b3a25562013e0c5b5ebd83fa6e3dd77cbf8b71df3e2b14eefdfa2e813826c93606de46093c33285a7ae6a88b0f32690274a2452b07d21f499b6e91a53ff1a9a70ace90294f97b80ce34a0372fd336c93080216706e0b19306592fb3c45e4b04c23cdc206d8dc6c2af7350100000005020000ff4257eb26bfd83fce431af9de64ded43d33d7b4592def32f6e0fd983e4b32e7f5ea3cc3ad84011378981963102cb1afb361b2549ea5c5e35ec82f88f5cc1f16b90d1abb7f9b7b3e1704bb671375e4c4e01e4cc066b0f13f87cacfda37c66296944dd35653c00f0aa6d9b0788de477719a288967d231a7c97752b31fe679b7868b53dc8faa68a4767a86e85364247e0c99b40a4c9a694a51fb78f4c15a58e79c46ac991308b28dc23549fd55eb331e97d53291738abc07f29da0747f8632c83a44579c5b450b111fb2a247ff522b7b552a9af12537e794ceb485c852557b03a0f7e2ffee33d9da88ece57ec56f06fd83585076d7d93f814cbfb6c66acbfe7df04cc53d4ca2f01c35fe9e6cdca54d8ad41cd5959b6d8f16b99caa187f8428df61f5e3a23b014985b7192fc0182e06f1e87d7b5268330b2854f95c8c1eeb2b26a59d58f17545018fafbb9ff55b9e6912b92ba758a0ef30d398e055fc1bed9cbcc53b24f9a79d90f448cc93b4e2c0e71a038ee4af27bd2814c81696e4031a89e22a7aab96217fc7d482bc52632f14025c66033d99409ef4c4115bf1191af43a788379544a608519cc8bbbb52b5e4a1fbb47c0ece47a0bd65be6b58b00762e71086d49cfce88784a5074b6b3d42d2914bfe4c9f356a330bb52ce0d43aa53ac0e147d03e7fee13b99cb036d47d12294616ca37eab9da87401685f1b5fddb69b958e9c98b2f55e8d"),
                4289);
            privatePaillierKeyShares[1] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a2d352ba69a4caf0ed696f64a8779913911368bfa2640818a1bc125db8a236d836c6cd3a3e783ff81ac476dae089483b909f268fd0a401af20560b29a241414330a72be2662dd184ed85b4bc6f97fb18c96da56e0a56ae74178ea8a4ac6e53a407b805dfd5bb681dd807c08d5e266c17ef1538de6944f641ccce7bc23d15e9bacfe341c0b94a3123c41104e8ba15a87b9bb236268e2ea5eea4bc32e063d5ed52e8d78fbdce8a4a7cf8633ef8382034518d954e07042910bb0b0a70ef0ef163f7557bc67f2c5fbdd005dc04cad2324b6b89ea109cf5ff089615d21bfe749f9cb1c6eaf7fb36896dff7f1efdf5be983394d4338b446b9388295320b7ee8f0d0b27104000000020000000101000000020000010200000102000001020000010200005439f5a9033d61de63f1f4aae1e344a9e8236b420910910a6cb2f10a16743b1c844ba10c258630fba36e49a29dd2014ceae7cfb13978246a71d34ec3f387316624b7b32b0b156814e788cd5fe80c9d50b6cc805c610d9d86d0116cb15debbd06efd1e5e0ac2f2f4090e57ec8122f0c10b0322381fbbf34fcdf06d11fdddd065834484a85a152505d360b8002e22ff73256baa99229c9447ecb7c211f7edf34f22529f9dffa6271683b03b21e5f066b85164a905a7cf4328edca856eef8392d56f8e529673f9df161f25feaf485b05e4f6f51b784a728ce229e787547dda157cacae18ad60243e1672faaaf861df1d26d52758b1a5f42513f9fba5d44b4394a98b700d4988ee34463d6abca289d9cbed4d902dee2d43fba10f728e48a3b0f21c8e085ab89e79d8883c124b833e04b8da573a7bfe9db8bf0e69c1cf6700e358fdff0fe66f7bf155294938129bf56e1a0e41d5189c671cd455a45a361b5f2cceef2a13e0b3f49f7dc61077adf517c99110340c5e5681f93fe213d3d14c2143ccbae9c63bfc863ae397343859be73295b2304518597391da8256e3b0ae6b56b0639d3479222b1bdaaf09e9d52a643552e82e9a614d2bf252cdcbe960ab4a77ba62ffc2adf06152e7fd4404f1046291507df3ff8f8f1ad201e1765df0457399d155d617a9508e86e09ed5cf4fc6197a044a2cc0a13af5142cc62cc2e458c22a62683df25bd9b696e3392c16483f6c726882c30ea8ea4efcdcc9645905f41d92f93f82d2b6711d86eb22c62b8a15c8f6fb279a635c2e60679f5ab2e31a9a91eb2f9317908b10d51f84216fda1554a8d5ac381a8c1d5b31dcc7d03621165a49896b4cb3e725abf971e71f79eb477ef332c1c420c89e188173fd387930323b4b4baa3dd698bb7668aa4b821e8e2f3275f5d65005a675b5546da34b4ab02ac1b822a255fe2099e7a5838edbd34e17a3cb1ad22e5cfa4cdb257a921a56badd2fcfcb371aaa4f80c4c961fb93d636fa96c5a1d2e6f5e8b679722527aca9652cecff1744e71e11e79fd9e723f84e4a19e57c72930f316644302e2e733fca16250beb412107c4404d915e33385892e457de1b8474773eeb4e35b970af3cc778226bdf71159862222a92b4ccf103506ff9805c338dcb94512c31c789966685b1c9ff93ecb8cf7076af4149a999872945f1eb83dfeb5a68f9f5492c1225dbd4911343d7ec713c032459acb8fffe3f7965528a73779c607e420cf50df5111184d852ff179ea7e4e2a25a20adbf31eb5a9af1a9bfca3da678bff3e31d26360980ae06a69825377d2826e39e2381bec3ba8b516d6e8c97929e215f3f031c8ceabff7ffb2108c805a1444ac9479b27aacce08ce1098c15ffc83ce0d46e9299c1282bcfd1e11e2e46aa39573c994c23f5893bc0dd375d60a59e92b6b081d795fc3b99bae5e7a26bc59c195effef7dabd05d7a54a9133ae6002def3e477507a7230044fd2bd912a72a597e9fa7bd10739efed7f75c67f300da8ed3dc02a9fa5527217f3ad92d229c606db1fb6019c2ba1a054b662b8f846db6ab3b5c2d88e47a270f404006b362894a6290a926c845987644fc8b3fd3baf4ffdef5b13154c72d84a943221d5d82e8f9c850cc0c85b38641b105e00eafaa49a483cf99c90365a95719115c56db2953b991156c484d476d8df237f45cc0cb64f83602e1324e22790554c5635606d24a7647d2c754d6f2de3abe16f4b6f202095e4e822fac14712c69f7a2bba4a86f088f781520c5fe190ac5640a1d43f89d13cf76ab855862cdc6266220b45c3432749c4351571463370c1cfa730cd828bb9e3c43717723fc7709557bfbf5282bc6c65e40cea91e49e19954c8673fdd3461758313c87c6b4a4b9c08931b040942230b321272fa5a59d929e1b6fe416eaed6197c8bc9a64e1dc3fbc44b836c0b25982946ac0473e6a3f78cb8e508d933d6d788f93007164c6b922ff5258bf23f7322f982e030a72dbf3693b969ccd0fbab33144e33404ca2678079107d29ff9d9589adb8f5e9aaa1a270ff84ce0b5046e6e0a4ac28276b4503dd9ab7d82678b3411c1ad19e9262de021306c864ed49aa8f0cfc79b0a41396a6b99311893b6f43cd62419f15163639997fd94cd75543cb6dc2c8bb5e075343f7ca8c7c2aa9643188e2b1f36b0a859b3f63490d18c807e7bdfe73c9e1f2f6c72a4257e1335f5f8a2759692b797e0b3ffc955d15d4acce6b22508ea81b12c5f61455bc5acbe4dbf822e68c417c84a945e0b109e97148e1b3b63165dc3f0410d074ad9afef80449d89321bfa5e3a824bacc82256e9fe19fd66cd11a85e5ff27959f94684739aaf051a7d3f7ffdc3a419434555a2703223b84fc415ed2790fbbf638dd1cbbf9ffb54cbf2835d8a60d31d4a762e4cf888bac956bac0f7d16da509e644e9aa1e300db1107998c1cbaadda156c7977e0c54b1331f2f2c98b36415dccdb426858b1dce43deb67b0214b3e00c6b675c075250dfeacb894fd74f460e2400419dd88cdd3d5cbf2498601fcfda54bc029ca75b93784e8e2769d212bccf164651ed7ecd9dfe9959255344d1732452d994ab73d8f814797a01a73fb57055d4c6ae6b136a32d0768d0a369eabf0846a2a9ad99bde1c9c523fddc30f41493ba193411e56a28b82156f28ef0f33428cff84536421642dc03ea4d3794ead7fd6d83a69e9d91ee53f127f6d86a26df9e99a36bf239b9a445f3e282fbe4c630c6c53f4b70edf128d493b526ee97a9d5d9b0a47efa47f4f1eb90e482628b305f6133c78f2725a2f61b25622883b117c18b1cf1d7e9e969b46cbaa2b76d35505bb5c98b8717f21faeda29f3cc1bb94f8c94eb8cad8b4143a4b2998820e90ceceda5bdb2434771362227d43471d1b2d2612df90692533309daea52a1d53362b223e136f9b8d5c5034ab0e0cda017d3713846afabc0c736a7162f0e6ff45daa4535e966862247308e075533662a80b4bbf1fc615e8cacf1de58c95b5519c297caab9f8242eef98cb6c6c1eac0ba6f61ee69c5e43a00daf4cb7f2b847703edb0268288a734d247cd761f6e7a8df01495dc7414d48c0938e0632fd1f4b49dcc0cde0f63b1489138ca6a6640c7efbb76c4c2551a6dc8850e6dfbd8ad98bd668e13799083862ebff77fd734578adb539c18e0be2e775bf8c59df435a2d3635db3ff87c2872b9a5aa67477a72c2c9379e3e9301f9413682b16b66a5f2ad6941bf4aa8d4910a6325d778a3d0a3ebcc30806ab31a5f7ce84eb92d6b6ede436336f3938addff5e9f04c703b61c6cfded9cb8c744838035786249d948e13372afd6add6d230261b3fbd66488dcf94c72667aacee423a8de5d2ac2d0f33e0d7409fb32d740ebdf07ec9007e245c4e3ca47a2d87e6059dfb9ea2cf8dd8f0ec793a527b4b33988ea9886d788eb3b5551b154efa62468aec70d1135ba72d7651fdc72515651e80fa0366d04c1f3802fb0d40e051cc1c7fb4d2375661796a7dc70299ae448e88756bf0bf62fb92415f69cc687196e324798391786485f65cee7ed6c651d9927ac02ba06a995a64c3a25744aff84445e8425796e0ad9d13a496ea0c72695a87bda6a3eb7c5cd0baf3e24602fcda9f686bace3b0084c800a8594141fa6960f2989b999887be78fb1a1fcec485087f375c4ec317e7ea1f669707b1a60771734a8cf795bf5a88b51109ff7353034c8c235e10f0e43ab7def01bf2f74435cde5d31524b20e1d64ad796c98f8296f591214611d15c92a48b9d9de47780a3d0e97ff0086e8aa8a9d8a8b99c02122bdfc24b7b230a2197887245d8721b656f8e00d3d0e441578d13cdf51468ebb804641e7b3a25562013e0c5b5ebd83fa6e3dd77cbf8b71df3e2b14eefdfa2e813826c93606de46093c33285a7ae6a88b0f32690274a2452b07d21f499b6e91a53ff1a9a70ace90294f97b80ce34a0372fd336c93080216706e0b19306592fb3c45e4b04c23cdc206d8dc6c2af7350200000005020000ff4257eb26bfd83fce431af9de64ded43d33d7b4592def32f6e0fd983e4b32e7f5ea3cc3ad84011378981963102cb1afb361b2549ea5c5e35ec82f88f5cc1f16b90d1abb7f9b7b3e1704bb671375e4c4e01e4cc066b0f13f87cacfda37c66296944dd35653c00f0aa6d9b0788de477719a288967d231a7c97752b31fe679b7868b53dc8f9ca5ee52219a5a72df7bb4015b8b22527b04bd28f283c6b8aa1557a2339905dfbee2cf9c2b19d6804758e706d8a431ee152ba560cfaf36401f7cb82b865310b0754a36f7742848368e3ce6073bfb75a3bfc1160c8ea981c8606bf07c16c1c29eca8c2e27dbdc2ef899bd45084f07326dd96beaaba56030fac2576b8bb94f7832579f396fb705e2173d0e7553b67e56e16c325ce6b5e7e7724771f3b48643b4a467b86d93d379f2d40485e7d13c65bca73e415afe22e5b6d56fb2b5d7c0f3c49a09ab1fa112cdae9b70b23a4e468ee1bce3f29b526bb1fcafb76c967ff7b7894ebbfd4d4ba27725028c1301825dde19ace25c510307f3527dd766b98f30c5d6d076cc1f12c36bf27b991f70de05d5206dc5b9855c0643d6f7652d2610ff20c0a7a0f6ec6738d48ffd491a61bb475e3f043c8dbc26c885c1971477d001b2e70d10a0742a19d75e3dc26643b7cfd6c0a90d894fdc71eaf9a7409615a1fee3454a771c02b4b0d8eb990a673d46cc5f8ad95117a50e10cb367bd25257ba86a7afaf1613"),
                4289);
            privatePaillierKeyShares[2] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a2d352ba69a4caf0ed696f64a8779913911368bfa2640818a1bc125db8a236d836c6cd3a3e783ff81ac476dae089483b909f268fd0a401af20560b29a241414330a72be2662dd184ed85b4bc6f97fb18c96da56e0a56ae74178ea8a4ac6e53a407b805dfd5bb681dd807c08d5e266c17ef1538de6944f641ccce7bc23d15e9bacfe341c0b94a3123c41104e8ba15a87b9bb236268e2ea5eea4bc32e063d5ed52e8d78fbdce8a4a7cf8633ef8382034518d954e07042910bb0b0a70ef0ef163f7557bc67f2c5fbdd005dc04cad2324b6b89ea109cf5ff089615d21bfe749f9cb1c6eaf7fb36896dff7f1efdf5be983394d4338b446b9388295320b7ee8f0d0b27104000000020000000101000000020000010200000102000001020000010200005439f5a9033d61de63f1f4aae1e344a9e8236b420910910a6cb2f10a16743b1c844ba10c258630fba36e49a29dd2014ceae7cfb13978246a71d34ec3f387316624b7b32b0b156814e788cd5fe80c9d50b6cc805c610d9d86d0116cb15debbd06efd1e5e0ac2f2f4090e57ec8122f0c10b0322381fbbf34fcdf06d11fdddd065834484a85a152505d360b8002e22ff73256baa99229c9447ecb7c211f7edf34f22529f9dffa6271683b03b21e5f066b85164a905a7cf4328edca856eef8392d56f8e529673f9df161f25feaf485b05e4f6f51b784a728ce229e787547dda157cacae18ad60243e1672faaaf861df1d26d52758b1a5f42513f9fba5d44b4394a98b700d4988ee34463d6abca289d9cbed4d902dee2d43fba10f728e48a3b0f21c8e085ab89e79d8883c124b833e04b8da573a7bfe9db8bf0e69c1cf6700e358fdff0fe66f7bf155294938129bf56e1a0e41d5189c671cd455a45a361b5f2cceef2a13e0b3f49f7dc61077adf517c99110340c5e5681f93fe213d3d14c2143ccbae9c63bfc863ae397343859be73295b2304518597391da8256e3b0ae6b56b0639d3479222b1bdaaf09e9d52a643552e82e9a614d2bf252cdcbe960ab4a77ba62ffc2adf06152e7fd4404f1046291507df3ff8f8f1ad201e1765df0457399d155d617a9508e86e09ed5cf4fc6197a044a2cc0a13af5142cc62cc2e458c22a62683df25bd9b696e3392c16483f6c726882c30ea8ea4efcdcc9645905f41d92f93f82d2b6711d86eb22c62b8a15c8f6fb279a635c2e60679f5ab2e31a9a91eb2f9317908b10d51f84216fda1554a8d5ac381a8c1d5b31dcc7d03621165a49896b4cb3e725abf971e71f79eb477ef332c1c420c89e188173fd387930323b4b4baa3dd698bb7668aa4b821e8e2f3275f5d65005a675b5546da34b4ab02ac1b822a255fe2099e7a5838edbd34e17a3cb1ad22e5cfa4cdb257a921a56badd2fcfcb371aaa4f80c4c961fb93d636fa96c5a1d2e6f5e8b679722527aca9652cecff1744e71e11e79fd9e723f84e4a19e57c72930f316644302e2e733fca16250beb412107c4404d915e33385892e457de1b8474773eeb4e35b970af3cc778226bdf71159862222a92b4ccf103506ff9805c338dcb94512c31c789966685b1c9ff93ecb8cf7076af4149a999872945f1eb83dfeb5a68f9f5492c1225dbd4911343d7ec713c032459acb8fffe3f7965528a73779c607e420cf50df5111184d852ff179ea7e4e2a25a20adbf31eb5a9af1a9bfca3da678bff3e31d26360980ae06a69825377d2826e39e2381bec3ba8b516d6e8c97929e215f3f031c8ceabff7ffb2108c805a1444ac9479b27aacce08ce1098c15ffc83ce0d46e9299c1282bcfd1e11e2e46aa39573c994c23f5893bc0dd375d60a59e92b6b081d795fc3b99bae5e7a26bc59c195effef7dabd05d7a54a9133ae6002def3e477507a7230044fd2bd912a72a597e9fa7bd10739efed7f75c67f300da8ed3dc02a9fa5527217f3ad92d229c606db1fb6019c2ba1a054b662b8f846db6ab3b5c2d88e47a270f404006b362894a6290a926c845987644fc8b3fd3baf4ffdef5b13154c72d84a943221d5d82e8f9c850cc0c85b38641b105e00eafaa49a483cf99c90365a95719115c56db2953b991156c484d476d8df237f45cc0cb64f83602e1324e22790554c5635606d24a7647d2c754d6f2de3abe16f4b6f202095e4e822fac14712c69f7a2bba4a86f088f781520c5fe190ac5640a1d43f89d13cf76ab855862cdc6266220b45c3432749c4351571463370c1cfa730cd828bb9e3c43717723fc7709557bfbf5282bc6c65e40cea91e49e19954c8673fdd3461758313c87c6b4a4b9c08931b040942230b321272fa5a59d929e1b6fe416eaed6197c8bc9a64e1dc3fbc44b836c0b25982946ac0473e6a3f78cb8e508d933d6d788f93007164c6b922ff5258bf23f7322f982e030a72dbf3693b969ccd0fbab33144e33404ca2678079107d29ff9d9589adb8f5e9aaa1a270ff84ce0b5046e6e0a4ac28276b4503dd9ab7d82678b3411c1ad19e9262de021306c864ed49aa8f0cfc79b0a41396a6b99311893b6f43cd62419f15163639997fd94cd75543cb6dc2c8bb5e075343f7ca8c7c2aa9643188e2b1f36b0a859b3f63490d18c807e7bdfe73c9e1f2f6c72a4257e1335f5f8a2759692b797e0b3ffc955d15d4acce6b22508ea81b12c5f61455bc5acbe4dbf822e68c417c84a945e0b109e97148e1b3b63165dc3f0410d074ad9afef80449d89321bfa5e3a824bacc82256e9fe19fd66cd11a85e5ff27959f94684739aaf051a7d3f7ffdc3a419434555a2703223b84fc415ed2790fbbf638dd1cbbf9ffb54cbf2835d8a60d31d4a762e4cf888bac956bac0f7d16da509e644e9aa1e300db1107998c1cbaadda156c7977e0c54b1331f2f2c98b36415dccdb426858b1dce43deb67b0214b3e00c6b675c075250dfeacb894fd74f460e2400419dd88cdd3d5cbf2498601fcfda54bc029ca75b93784e8e2769d212bccf164651ed7ecd9dfe9959255344d1732452d994ab73d8f814797a01a73fb57055d4c6ae6b136a32d0768d0a369eabf0846a2a9ad99bde1c9c523fddc30f41493ba193411e56a28b82156f28ef0f33428cff84536421642dc03ea4d3794ead7fd6d83a69e9d91ee53f127f6d86a26df9e99a36bf239b9a445f3e282fbe4c630c6c53f4b70edf128d493b526ee97a9d5d9b0a47efa47f4f1eb90e482628b305f6133c78f2725a2f61b25622883b117c18b1cf1d7e9e969b46cbaa2b76d35505bb5c98b8717f21faeda29f3cc1bb94f8c94eb8cad8b4143a4b2998820e90ceceda5bdb2434771362227d43471d1b2d2612df90692533309daea52a1d53362b223e136f9b8d5c5034ab0e0cda017d3713846afabc0c736a7162f0e6ff45daa4535e966862247308e075533662a80b4bbf1fc615e8cacf1de58c95b5519c297caab9f8242eef98cb6c6c1eac0ba6f61ee69c5e43a00daf4cb7f2b847703edb0268288a734d247cd761f6e7a8df01495dc7414d48c0938e0632fd1f4b49dcc0cde0f63b1489138ca6a6640c7efbb76c4c2551a6dc8850e6dfbd8ad98bd668e13799083862ebff77fd734578adb539c18e0be2e775bf8c59df435a2d3635db3ff87c2872b9a5aa67477a72c2c9379e3e9301f9413682b16b66a5f2ad6941bf4aa8d4910a6325d778a3d0a3ebcc30806ab31a5f7ce84eb92d6b6ede436336f3938addff5e9f04c703b61c6cfded9cb8c744838035786249d948e13372afd6add6d230261b3fbd66488dcf94c72667aacee423a8de5d2ac2d0f33e0d7409fb32d740ebdf07ec9007e245c4e3ca47a2d87e6059dfb9ea2cf8dd8f0ec793a527b4b33988ea9886d788eb3b5551b154efa62468aec70d1135ba72d7651fdc72515651e80fa0366d04c1f3802fb0d40e051cc1c7fb4d2375661796a7dc70299ae448e88756bf0bf62fb92415f69cc687196e324798391786485f65cee7ed6c651d9927ac02ba06a995a64c3a25744aff84445e8425796e0ad9d13a496ea0c72695a87bda6a3eb7c5cd0baf3e24602fcda9f686bace3b0084c800a8594141fa6960f2989b999887be78fb1a1fcec485087f375c4ec317e7ea1f669707b1a60771734a8cf795bf5a88b51109ff7353034c8c235e10f0e43ab7def01bf2f74435cde5d31524b20e1d64ad796c98f8296f591214611d15c92a48b9d9de47780a3d0e97ff0086e8aa8a9d8a8b99c02122bdfc24b7b230a2197887245d8721b656f8e00d3d0e441578d13cdf51468ebb804641e7b3a25562013e0c5b5ebd83fa6e3dd77cbf8b71df3e2b14eefdfa2e813826c93606de46093c33285a7ae6a88b0f32690274a2452b07d21f499b6e91a53ff1a9a70ace90294f97b80ce34a0372fd336c93080216706e0b19306592fb3c45e4b04c23cdc206d8dc6c2af7350300000005020000ff4257eb26bfd83fce431af9de64ded43d33d7b4592def32f6e0fd983e4b32e7f5ea3cc3ad84011378981963102cb1afb361b2549ea5c5e35ec82f88f5cc1f16b90d1abb7f9b7b3e1704bb671375e4c4e01e4cc066b0f13f87cacfda37c66296944dd35653c00f0aa6d9b0788de477719a288967d231a7c97752b31fe679b7868b53dc8f8ee3382dc8adcc925ad2e9f61d623a585ba02fffe98e98aff9d1c7a8208572ac7513117620e9afaaa37eaf75dc15d2689f9b42cf01bdf800b8c6a81cc84e8505a5895ccf35ae486dca4e50b94d5bfa22479a974a68cd3b3e6b5cdd5735a0854f613e81c6cad2df2bc4738c8d45bdee03d998540a8b099b8ab8b0592725d9b3180c4e56a96f6d5751d4cf5fd3502718276ad5a313cf25b6650abb080716a3c70dce2755708dc4258fdb04ddb9fb5026e649778da74c6ee18bf43a4509e48e97bece54af9269fb67db42fb61e361766ad8d8b4630bf70dfd43813c703ab44a18f5da69a64e785a9522573ee9012cd7843207908d3df94fc0f8944390f3e6e0177f6dd069a2ca8581c81e3c8556086ca79aec7e46a6b09694d3d61fd39e84ed36eebcd40c42b5f3f49c4815082ecdcf998e6d451c66db8082b7fa7e97961bfe4b98c89e03bef808a757a372afbae38dfb77e1e46615c8afa42d801d2f80c2a2960cfc6b9e5e448f60f23a1920f5406a14f9bb48b3c27b0d19ee0919e670b6ac68cd99"),
                4289);
            privatePaillierKeyShares[3] = new PaillierPrivateThresholdKey(
                HexUtil.hexToBytes(
                    "0x010100000a2d352ba69a4caf0ed696f64a8779913911368bfa2640818a1bc125db8a236d836c6cd3a3e783ff81ac476dae089483b909f268fd0a401af20560b29a241414330a72be2662dd184ed85b4bc6f97fb18c96da56e0a56ae74178ea8a4ac6e53a407b805dfd5bb681dd807c08d5e266c17ef1538de6944f641ccce7bc23d15e9bacfe341c0b94a3123c41104e8ba15a87b9bb236268e2ea5eea4bc32e063d5ed52e8d78fbdce8a4a7cf8633ef8382034518d954e07042910bb0b0a70ef0ef163f7557bc67f2c5fbdd005dc04cad2324b6b89ea109cf5ff089615d21bfe749f9cb1c6eaf7fb36896dff7f1efdf5be983394d4338b446b9388295320b7ee8f0d0b27104000000020000000101000000020000010200000102000001020000010200005439f5a9033d61de63f1f4aae1e344a9e8236b420910910a6cb2f10a16743b1c844ba10c258630fba36e49a29dd2014ceae7cfb13978246a71d34ec3f387316624b7b32b0b156814e788cd5fe80c9d50b6cc805c610d9d86d0116cb15debbd06efd1e5e0ac2f2f4090e57ec8122f0c10b0322381fbbf34fcdf06d11fdddd065834484a85a152505d360b8002e22ff73256baa99229c9447ecb7c211f7edf34f22529f9dffa6271683b03b21e5f066b85164a905a7cf4328edca856eef8392d56f8e529673f9df161f25feaf485b05e4f6f51b784a728ce229e787547dda157cacae18ad60243e1672faaaf861df1d26d52758b1a5f42513f9fba5d44b4394a98b700d4988ee34463d6abca289d9cbed4d902dee2d43fba10f728e48a3b0f21c8e085ab89e79d8883c124b833e04b8da573a7bfe9db8bf0e69c1cf6700e358fdff0fe66f7bf155294938129bf56e1a0e41d5189c671cd455a45a361b5f2cceef2a13e0b3f49f7dc61077adf517c99110340c5e5681f93fe213d3d14c2143ccbae9c63bfc863ae397343859be73295b2304518597391da8256e3b0ae6b56b0639d3479222b1bdaaf09e9d52a643552e82e9a614d2bf252cdcbe960ab4a77ba62ffc2adf06152e7fd4404f1046291507df3ff8f8f1ad201e1765df0457399d155d617a9508e86e09ed5cf4fc6197a044a2cc0a13af5142cc62cc2e458c22a62683df25bd9b696e3392c16483f6c726882c30ea8ea4efcdcc9645905f41d92f93f82d2b6711d86eb22c62b8a15c8f6fb279a635c2e60679f5ab2e31a9a91eb2f9317908b10d51f84216fda1554a8d5ac381a8c1d5b31dcc7d03621165a49896b4cb3e725abf971e71f79eb477ef332c1c420c89e188173fd387930323b4b4baa3dd698bb7668aa4b821e8e2f3275f5d65005a675b5546da34b4ab02ac1b822a255fe2099e7a5838edbd34e17a3cb1ad22e5cfa4cdb257a921a56badd2fcfcb371aaa4f80c4c961fb93d636fa96c5a1d2e6f5e8b679722527aca9652cecff1744e71e11e79fd9e723f84e4a19e57c72930f316644302e2e733fca16250beb412107c4404d915e33385892e457de1b8474773eeb4e35b970af3cc778226bdf71159862222a92b4ccf103506ff9805c338dcb94512c31c789966685b1c9ff93ecb8cf7076af4149a999872945f1eb83dfeb5a68f9f5492c1225dbd4911343d7ec713c032459acb8fffe3f7965528a73779c607e420cf50df5111184d852ff179ea7e4e2a25a20adbf31eb5a9af1a9bfca3da678bff3e31d26360980ae06a69825377d2826e39e2381bec3ba8b516d6e8c97929e215f3f031c8ceabff7ffb2108c805a1444ac9479b27aacce08ce1098c15ffc83ce0d46e9299c1282bcfd1e11e2e46aa39573c994c23f5893bc0dd375d60a59e92b6b081d795fc3b99bae5e7a26bc59c195effef7dabd05d7a54a9133ae6002def3e477507a7230044fd2bd912a72a597e9fa7bd10739efed7f75c67f300da8ed3dc02a9fa5527217f3ad92d229c606db1fb6019c2ba1a054b662b8f846db6ab3b5c2d88e47a270f404006b362894a6290a926c845987644fc8b3fd3baf4ffdef5b13154c72d84a943221d5d82e8f9c850cc0c85b38641b105e00eafaa49a483cf99c90365a95719115c56db2953b991156c484d476d8df237f45cc0cb64f83602e1324e22790554c5635606d24a7647d2c754d6f2de3abe16f4b6f202095e4e822fac14712c69f7a2bba4a86f088f781520c5fe190ac5640a1d43f89d13cf76ab855862cdc6266220b45c3432749c4351571463370c1cfa730cd828bb9e3c43717723fc7709557bfbf5282bc6c65e40cea91e49e19954c8673fdd3461758313c87c6b4a4b9c08931b040942230b321272fa5a59d929e1b6fe416eaed6197c8bc9a64e1dc3fbc44b836c0b25982946ac0473e6a3f78cb8e508d933d6d788f93007164c6b922ff5258bf23f7322f982e030a72dbf3693b969ccd0fbab33144e33404ca2678079107d29ff9d9589adb8f5e9aaa1a270ff84ce0b5046e6e0a4ac28276b4503dd9ab7d82678b3411c1ad19e9262de021306c864ed49aa8f0cfc79b0a41396a6b99311893b6f43cd62419f15163639997fd94cd75543cb6dc2c8bb5e075343f7ca8c7c2aa9643188e2b1f36b0a859b3f63490d18c807e7bdfe73c9e1f2f6c72a4257e1335f5f8a2759692b797e0b3ffc955d15d4acce6b22508ea81b12c5f61455bc5acbe4dbf822e68c417c84a945e0b109e97148e1b3b63165dc3f0410d074ad9afef80449d89321bfa5e3a824bacc82256e9fe19fd66cd11a85e5ff27959f94684739aaf051a7d3f7ffdc3a419434555a2703223b84fc415ed2790fbbf638dd1cbbf9ffb54cbf2835d8a60d31d4a762e4cf888bac956bac0f7d16da509e644e9aa1e300db1107998c1cbaadda156c7977e0c54b1331f2f2c98b36415dccdb426858b1dce43deb67b0214b3e00c6b675c075250dfeacb894fd74f460e2400419dd88cdd3d5cbf2498601fcfda54bc029ca75b93784e8e2769d212bccf164651ed7ecd9dfe9959255344d1732452d994ab73d8f814797a01a73fb57055d4c6ae6b136a32d0768d0a369eabf0846a2a9ad99bde1c9c523fddc30f41493ba193411e56a28b82156f28ef0f33428cff84536421642dc03ea4d3794ead7fd6d83a69e9d91ee53f127f6d86a26df9e99a36bf239b9a445f3e282fbe4c630c6c53f4b70edf128d493b526ee97a9d5d9b0a47efa47f4f1eb90e482628b305f6133c78f2725a2f61b25622883b117c18b1cf1d7e9e969b46cbaa2b76d35505bb5c98b8717f21faeda29f3cc1bb94f8c94eb8cad8b4143a4b2998820e90ceceda5bdb2434771362227d43471d1b2d2612df90692533309daea52a1d53362b223e136f9b8d5c5034ab0e0cda017d3713846afabc0c736a7162f0e6ff45daa4535e966862247308e075533662a80b4bbf1fc615e8cacf1de58c95b5519c297caab9f8242eef98cb6c6c1eac0ba6f61ee69c5e43a00daf4cb7f2b847703edb0268288a734d247cd761f6e7a8df01495dc7414d48c0938e0632fd1f4b49dcc0cde0f63b1489138ca6a6640c7efbb76c4c2551a6dc8850e6dfbd8ad98bd668e13799083862ebff77fd734578adb539c18e0be2e775bf8c59df435a2d3635db3ff87c2872b9a5aa67477a72c2c9379e3e9301f9413682b16b66a5f2ad6941bf4aa8d4910a6325d778a3d0a3ebcc30806ab31a5f7ce84eb92d6b6ede436336f3938addff5e9f04c703b61c6cfded9cb8c744838035786249d948e13372afd6add6d230261b3fbd66488dcf94c72667aacee423a8de5d2ac2d0f33e0d7409fb32d740ebdf07ec9007e245c4e3ca47a2d87e6059dfb9ea2cf8dd8f0ec793a527b4b33988ea9886d788eb3b5551b154efa62468aec70d1135ba72d7651fdc72515651e80fa0366d04c1f3802fb0d40e051cc1c7fb4d2375661796a7dc70299ae448e88756bf0bf62fb92415f69cc687196e324798391786485f65cee7ed6c651d9927ac02ba06a995a64c3a25744aff84445e8425796e0ad9d13a496ea0c72695a87bda6a3eb7c5cd0baf3e24602fcda9f686bace3b0084c800a8594141fa6960f2989b999887be78fb1a1fcec485087f375c4ec317e7ea1f669707b1a60771734a8cf795bf5a88b51109ff7353034c8c235e10f0e43ab7def01bf2f74435cde5d31524b20e1d64ad796c98f8296f591214611d15c92a48b9d9de47780a3d0e97ff0086e8aa8a9d8a8b99c02122bdfc24b7b230a2197887245d8721b656f8e00d3d0e441578d13cdf51468ebb804641e7b3a25562013e0c5b5ebd83fa6e3dd77cbf8b71df3e2b14eefdfa2e813826c93606de46093c33285a7ae6a88b0f32690274a2452b07d21f499b6e91a53ff1a9a70ace90294f97b80ce34a0372fd336c93080216706e0b19306592fb3c45e4b04c23cdc206d8dc6c2af7350400000005020000ff4257eb26bfd83fce431af9de64ded43d33d7b4592def32f6e0fd983e4b32e7f5ea3cc3ad84011378981963102cb1afb361b2549ea5c5e35ec82f88f5cc1f16b90d1abb7f9b7b3e1704bb671375e4c4e01e4cc066b0f13f87cacfda37c66296944dd35653c00f0aa6d9b0788de477719a288967d231a7c97752b31fe679b7868b53dc8f812082096fc13eb1d62a1feadf39525e3c3ba2d6e0996aa7498e37ae0d71df792b43535016b988d4ffa477e4df8772e32a0ae03d33ccb9c15210980e0a49f95ad5c882a6f73448a5065fbb6b5ebc7ea0cf74188842f0f4b4764dca32547f47fff7f0d565b9c98f5eef29d4123c74a999d9c4bd6970b3061aaf0946c29263edfdc0fd73e327d4cc8c6c904a52e9cfd96d6978e940e8638557ce041c59a703d97734963d4d480e584bb183d3a2ba3a912554adc05075f80c4278c1d43c08296ae392fe3f83c129211b154489787c5df3f4cd762ac58269fdd74b0c49f570dca89cf8d5ff514e3e0542226ad07ffbd0eeb72cc4c978eaac2f73512068589cfa582e64d4b432d19f1114a35999ce0b042ec8134307f15ae952b04712812c0ab9ad35d8b12c1e3313593b470faea25440f4189dfc7ca6ee7b43d8e0855f2a85158a20f0c7dd6418b310ece0a1a7a5f05b4de23a78efb9a665a11a6a24bd02a1ffe1a2dcd4880bb03328da0cf4fb1e214950a25eec59742ae3b809bfdc125ac5a922851f"),
                4289);
            
//            var privatePaillierKeyShares = new PaillierPrivateThresholdKey[3];
//            
//            privatePaillierKeyShares[0] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);
//            privatePaillierKeyShares[1] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);
//            privatePaillierKeyShares[2] = new PaillierPrivateThresholdKey(
//                HexUtil.hexToBytes(

//                4289, true);

            var curveParams = new CurveParams("secp256k1");
            
            PaillierKey paillierKey = privatePaillierKeyShares[0].getPublicKey();
            
            plainRnd = new Random(98428965);
            PublicParameters publicParameters = Util.generateParamsforBitcoin(curveParams, 60, 256, plainRnd, paillierKey);
            
            plainRnd = new Random(58984789);
            
            var players = new List<PlayerSigner>();

            byte[] message =
                HexUtil.hexToBytes("e581b3843b9aca0083030d4094627306090abab3a6e1400e9345bc60c78a8bef570180118080");
            message = Sha3(message);
            
            message = HexUtil.hexToBytes("0xbadcab1e");
            //message = injectEthereumPrefix(message);
            Console.WriteLine("Hashed msg=" + HexUtil.bytesToHex(message));

            BigInteger privateKey =
                new BigInteger("d95d6db65f3e2223703c5d8e205d98e3e6b470f067b0f94f6c6bf73d4301ce48", 16);
            BigInteger randomness = Util.randomFromZnStar(curveParams.Q, plainRnd);
            BigInteger encryptedPrivateKey = new Paillier(paillierKey).encrypt(privateKey, randomness);
            ECPoint publicKey = curveParams.G.Multiply(privateKey.Mod(curveParams.Q)).Normalize();

            int n = privatePaillierKeyShares.Length;
            for (int i = 0; i < n; i++)
            {
                players.Add(new PlayerSigner(
                    publicParameters,
                    curveParams,
                    privatePaillierKeyShares[i],
                    encryptedPrivateKey,
                    message
                ));
            }

            Console.WriteLine("paillierpub=" + paillierKey.getN());
            Console.WriteLine("h1=" + publicParameters.h1);
            Console.WriteLine("h2=" + publicParameters.h2);
            Console.WriteLine("pk.x=" + publicKey.XCoord.ToBigInteger());
            Console.WriteLine("pk.y=" + publicKey.YCoord.ToBigInteger());
            Console.WriteLine("priv=" + encryptedPrivateKey);
            Console.WriteLine("msg=" + HexUtil.bytesToHex(message));

            long currentTime = CurrentTimeMillis();
            Console.WriteLine("Initialization took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round1Message> round1Messages = players.Select(player => player.round1()).ToList();

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R1 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            List<Round2Message> round2Messages = new List<Round2Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round1Messages);
                List<Round1Message> inputs = new List<Round1Message>(round1Messages);
                inputs.RemoveAt(i);
                round2Messages.Add(players[i].round2(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R2 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round3Message> round3Messages = new List<Round3Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round2Messages);
                List<Round2Message> inputs = new List<Round2Message>(round2Messages);
                inputs.RemoveAt(i);
                round3Messages.Add(players[i].round3(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R3 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round4Message> round4Messages = new List<Round4Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round3Messages);
                List<Round3Message> inputs = new List<Round3Message>(round3Messages);
                inputs.RemoveAt(i);
                round4Messages.Add(players[i].round4(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R4 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round5Message> round5Messages = new List<Round5Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round4Messages);
                List<Round4Message> inputs = new List<Round4Message>(round4Messages);
                inputs.RemoveAt(i);
                round5Messages.Add(players[i].round5(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R5 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;

            List<Round6Message> round6Messages = new List<Round6Message>();
            for (int i = 0; i < n; ++i)
            {
                _validateMsgs(round5Messages);
                List<Round5Message> inputs = new List<Round5Message>(round5Messages);
                inputs.RemoveAt(i);
                round6Messages.Add(players[i].round6(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("R6 took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            List<DSASignature> signatures = new List<DSASignature>();
            for (int i = 0; i < n; ++i)
            {
                List<Round6Message> inputs = new List<Round6Message>(round6Messages);
                inputs.RemoveAt(i);
                signatures.Add(players[i].outputSignature(inputs.ToArray()));
            }

            currentTime = CurrentTimeMillis();
            Console.WriteLine("Signatire recover took " + (currentTime - checkpoint) + " ms");
            checkpoint = currentTime;
            
            foreach (DSASignature signature in signatures) {
                BigInteger mprime = new BigInteger(1, message);
                BigInteger invS = signature.s.ModInverse(curveParams.Q);
                ECPoint validation =
                    publicKey.Multiply(signature.r.Multiply(invS).Mod(curveParams.Q))
                        .Add(curveParams.G.Multiply(mprime.Multiply(invS).Mod(curveParams.Q)));
                BigInteger vX = validation.Normalize().XCoord.ToBigInteger().Mod(curveParams.Q);
                if (!vX.Equals(signature.r))
                    throw new Exception("Signature check failed!");
                
                byte[] publicKeyEncoded = publicKey.GetEncoded(false);
                publicKeyEncoded = Arrays.CopyOfRange(publicKeyEncoded, 1, publicKeyEncoded.Length);
                BigInteger publicKeyBigint = new BigInteger(1, publicKeyEncoded);
                
//                int recId = getRecId(message, signature, publicKeyBigint);
//                if (recId == -1) throw new Exception("Ecrecover failed");
//                int v = recId + 27;
//
//                Console.WriteLine(
//                    "v=" + Numeric.toHexStringNoPrefixZeroPadded(BigInteger.ValueOf(v), 2) +
//                    " r=" + Numeric.toHexStringNoPrefixZeroPadded(signature.r, 64) +
//                    " s=" + Numeric.toHexStringNoPrefixZeroPadded(signature.s, 64)
//                );
            }
        }
        
        /*private int getRecId(byte[] message, DSASignature signature, BigInteger publicKeyBigint) {
            for (int i = 0; i < 4; ++i) {
                ECDSASignature sig = new ECDSASignature(signature.r, signature.s);
                BigInteger recoveredKey = Sign.recoverFromSignature(i, sig, message);
                if (recoveredKey == null) continue;
                if (recoveredKey.equals(publicKeyBigint)) {
                    return i;
                }
            }
            return -1;
        }*/
        
//        private string toHexStringNoPrefixZeroPadded(BigInteger value, int padding)
//        {
//            
//        }
    }
}