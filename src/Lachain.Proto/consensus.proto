syntax = "proto3";
option csharp_namespace = "Lachain.Proto";
option java_package = "com.latoken.proto";
import "default.proto";
import "block.proto";

// HBBFT messages

message Validator {
    int64 version = 1;
    reserved 2 to 3;
    int64 era = 4;
}

message BValMessage {
    bool value = 1;
    int64 agreement = 2;
    int64 epoch = 3;
}

message AuxMessage {
    bool value = 1;
    int64 agreement = 2;
    int64 epoch = 3;
}

message ConfMessage {
    repeated bool values = 1;
    int64 agreement = 2;
    int64 epoch = 3;
}

message CommonCoinMessage {
    bytes signature_share = 1;
    int64 agreement = 2;
    int64 epoch = 3;
}

message TPKEPartiallyDecryptedShareMessage {
    bytes share = 1;
    int32 decryptor_id = 2;
    int32 share_id = 3;
}

message TPKEHiddenPolynomialMessage {
    repeated bytes coeffs_g1 = 1;
    repeated bytes coeffs_g2 = 2;
}

message TPKEConfirmationHashMessage {
    repeated bytes hashes = 1;
}

message ValMessage {
    int32 senderId = 1;
    UInt256 merkleTreeRoot = 2;
    repeated UInt256 merkleProof = 3;
    bytes data = 4;
}

message ECHOMessage {
    int32 senderId = 1;
    UInt256 merkleTreeRoot = 2;
    repeated UInt256 merkleProof = 3;
    bytes data = 4;
}

message ReadyMessage {
    int32 senderId = 1;
    UInt256 merkleTreeRoot = 2;
}

message SignedHeaderMessage {
    BlockHeader header = 1;
    Signature signature = 2;
}

message ConsensusMessage {
    Validator validator = 1;
    oneof payload {
        BValMessage bval = 2;
        AuxMessage aux = 3;
        ConfMessage conf = 4;
        CommonCoinMessage coin = 5;
        TPKEPartiallyDecryptedShareMessage decrypted = 6;
        ValMessage val_message = 13;
        ECHOMessage echo_message = 14;
        ReadyMessage ready_message = 15;
        SignedHeaderMessage signed_header_message = 16;
        RequestConsensusMessage request_consensus = 17;
    }
    reserved 7, 9 to 12;
}

// add request type for consensus messages

message RequestBValMessage {
    int32 agreement = 1;
    int32 epoch = 2;
}

message RequestAuxMessage {
    int32 agreement = 1;
    int32 epoch = 2;
}

message RequestConfMessage {
    int32 agreement = 1;
    int32 epoch = 2;
}

message RequestCommonCoinMessage {
    int32 agreement = 1;
    int32 epoch = 2;
}

message RequestTPKEPartiallyDecryptedShareMessage {
    int32 share_id = 1;
}

message RequestValMessage {
    int32 senderId = 1;
}

message RequestECHOMessage {
    int32 sender_id = 1;
}

message RequestReadyMessage {
    int32 sender_id = 1;
}

message RequestSignedHeaderMessage {
}

message RequestConsensusMessage {
    oneof payload {
        RequestBValMessage request_bval = 1;
        RequestAuxMessage request_aux = 2;
        RequestConfMessage request_conf = 3;
        RequestCommonCoinMessage request_coin = 4;
        RequestTPKEPartiallyDecryptedShareMessage request_decrypted = 5;
        RequestValMessage request_val = 6;
        RequestECHOMessage request_echo = 7;
        RequestReadyMessage request_ready = 8;
        RequestSignedHeaderMessage request_signed_header = 9;
    }
}