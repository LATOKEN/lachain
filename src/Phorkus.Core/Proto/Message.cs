// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Core.Network.Proto {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvGg1kZWZhdWx0LnByb3RvGhF0cmFuc2FjdGlvbi5w",
            "cm90bxoLYmxvY2sucHJvdG8aD2NvbnNlbnN1cy5wcm90bxoKbm9kZS5wcm90",
            "byIuChdIYW5kc2hha2VSZXF1ZXN0TWVzc2FnZRITCgRub2RlGAEgASgLMgUu",
            "Tm9kZSIvChhIYW5kc2hha2VSZXNwb25zZU1lc3NhZ2USEwoEbm9kZRgBIAEo",
            "CzIFLk5vZGUiGAoWR2V0QmxvY2tIZWFkZXJzTWVzc2FnZSI5ChZCbG9ja0hl",
            "YWRlcnNHb3RNZXNzYWdlEh8KDWJsb2NrX2hlYWRlcnMYASADKAsyCC5VSW50",
            "MjU2IjIKEEdldEJsb2Nrc01lc3NhZ2USHgoMYmxvY2tfaGFzaGVzGAEgAygL",
            "MgguVUludDI1NiIqChBCbG9ja3NHb3RNZXNzYWdlEhYKBmJsb2NrcxgBIAMo",
            "CzIGLkJsb2NrIj4KFkdldFRyYW5zYWN0aW9uc01lc3NhZ2USJAoSdHJhbnNh",
            "Y3Rpb25faGFzaGVzGAEgAygLMgguVUludDI1NiI8ChZUcmFuc2FjdGlvbnNH",
            "b3RNZXNzYWdlEiIKDHRyYW5zYWN0aW9ucxgBIAMoCzIMLlRyYW5zYWN0aW9u",
            "IhMKEUdldE1lbXBvb2xNZXNzYWdlIjkKEU1lbXBvb2xHb3RNZXNzYWdlEiQK",
            "EnRyYW5zYWN0aW9uX2hhc2hlcxgBIAMoCzIILlVJbnQyNTYiFgoUR2V0TmVp",
            "Z2hib3Vyc01lc3NhZ2UiMQoUTmVpZ2hib3Vyc0dvdE1lc3NhZ2USGQoKbmVp",
            "Z2hib3VycxgBIAMoCzIFLk5vZGUi2wQKB01lc3NhZ2USGgoEdHlwZRgBIAEo",
            "DjIMLk1lc3NhZ2VUeXBlEjUKEWhhbmRzaGFrZV9yZXF1ZXN0GAogASgLMhgu",
            "SGFuZHNoYWtlUmVxdWVzdE1lc3NhZ2VIABI3ChJoYW5kc2hha2VfcmVzcG9u",
            "c2UYCyABKAsyGS5IYW5kc2hha2VSZXNwb25zZU1lc3NhZ2VIABI0ChFnZXRf",
            "YmxvY2tfaGVhZGVycxgMIAEoCzIXLkdldEJsb2NrSGVhZGVyc01lc3NhZ2VI",
            "ABI0ChFibG9ja19oZWFkZXJzX2dvdBgNIAEoCzIXLkJsb2NrSGVhZGVyc0dv",
            "dE1lc3NhZ2VIABIpCgtnZXRfbWVtcG9vbBgOIAEoCzISLkdldE1lbXBvb2xN",
            "ZXNzYWdlSAASKQoLbWVtcG9vbF9nb3QYDyABKAsyEi5NZW1wb29sR290TWVz",
            "c2FnZUgAEjMKEGdldF90cmFuc2FjdGlvbnMYECABKAsyFy5HZXRUcmFuc2Fj",
            "dGlvbnNNZXNzYWdlSAASMwoQdHJhbnNhY3Rpb25zX2dvdBgRIAEoCzIXLlRy",
            "YW5zYWN0aW9uc0dvdE1lc3NhZ2VIABIvCg5nZXRfbmVpZ2hib3VycxgSIAEo",
            "CzIVLkdldE5laWdoYm91cnNNZXNzYWdlSAASLwoObmVpZ2hib3Vyc19nb3QY",
            "EyABKAsyFS5OZWlnaGJvdXJzR290TWVzc2FnZUgAEi4KEWNvbnNlbnN1c19t",
            "ZXNzYWdlGBQgASgLMhEuQ29uc2Vuc3VzTWVzc2FnZUgAQgYKBGJvZHkq2gMK",
            "C01lc3NhZ2VUeXBlEhgKFE1FU1NBR0VfVFlQRV9VTktOT1dOEAASIgoeTUVT",
            "U0FHRV9UWVBFX0hBTkRTSEFLRV9SRVFVRVNUEAESIwofTUVTU0FHRV9UWVBF",
            "X0hBTkRTSEFLRV9SRVNQT05TRRACEiIKHk1FU1NBR0VfVFlQRV9HRVRfQkxP",
            "Q0tfSEVBREVSUxADEiIKHk1FU1NBR0VfVFlQRV9CTE9DS19IRUFERVJTX0dP",
            "VBAEEhsKF01FU1NBR0VfVFlQRV9HRVRfQkxPQ0tTEAUSGwoXTUVTU0FHRV9U",
            "WVBFX0JMT0NLU19HT1QQBhIhCh1NRVNTQUdFX1RZUEVfR0VUX1RSQU5TQUNU",
            "SU9OUxAHEiEKHU1FU1NBR0VfVFlQRV9UUkFOU0FDVElPTlNfR09UEAgSHAoY",
            "TUVTU0FHRV9UWVBFX0dFVF9NRU1QT09MEAkSHAoYTUVTU0FHRV9UWVBFX01F",
            "TVBPT0xfR09UEAoSHwobTUVTU0FHRV9UWVBFX0dFVF9ORUlHSEJPVVJTEAsS",
            "HwobTUVTU0FHRV9UWVBFX05FSUdIQk9VUlNfR09UEAwSIgoeTUVTU0FHRV9U",
            "WVBFX0NPTlNFTlNVU19NRVNTQUdFEA1CHaoCGlBob3JrdXMuQ29yZS5OZXR3",
            "b3JrLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Core.Proto.DefaultReflection.Descriptor, global::Phorkus.Core.Proto.TransactionReflection.Descriptor, global::Phorkus.Core.Proto.BlockReflection.Descriptor, global::Phorkus.Core.Proto.ConsensusReflection.Descriptor, global::Phorkus.Core.Proto.NodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Core.Network.Proto.MessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.HandshakeRequestMessage), global::Phorkus.Core.Network.Proto.HandshakeRequestMessage.Parser, new[]{ "Node" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.HandshakeResponseMessage), global::Phorkus.Core.Network.Proto.HandshakeResponseMessage.Parser, new[]{ "Node" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage), global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage), global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage.Parser, new[]{ "BlockHeaders" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.GetBlocksMessage), global::Phorkus.Core.Network.Proto.GetBlocksMessage.Parser, new[]{ "BlockHashes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.BlocksGotMessage), global::Phorkus.Core.Network.Proto.BlocksGotMessage.Parser, new[]{ "Blocks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.GetTransactionsMessage), global::Phorkus.Core.Network.Proto.GetTransactionsMessage.Parser, new[]{ "TransactionHashes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.TransactionsGotMessage), global::Phorkus.Core.Network.Proto.TransactionsGotMessage.Parser, new[]{ "Transactions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.GetMempoolMessage), global::Phorkus.Core.Network.Proto.GetMempoolMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.MempoolGotMessage), global::Phorkus.Core.Network.Proto.MempoolGotMessage.Parser, new[]{ "TransactionHashes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.GetNeighboursMessage), global::Phorkus.Core.Network.Proto.GetNeighboursMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.NeighboursGotMessage), global::Phorkus.Core.Network.Proto.NeighboursGotMessage.Parser, new[]{ "Neighbours" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Network.Proto.Message), global::Phorkus.Core.Network.Proto.Message.Parser, new[]{ "Type", "HandshakeRequest", "HandshakeResponse", "GetBlockHeaders", "BlockHeadersGot", "GetMempool", "MempoolGot", "GetTransactions", "TransactionsGot", "GetNeighbours", "NeighboursGot", "ConsensusMessage" }, new[]{ "Body" }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    /// <summary>
    /// unknown message type, should not be used 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// messages for handshake 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_HANDSHAKE_REQUEST")] HandshakeRequest = 1,
    [pbr::OriginalName("MESSAGE_TYPE_HANDSHAKE_RESPONSE")] HandshakeResponse = 2,
    /// <summary>
    /// request block headers from peer 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_GET_BLOCK_HEADERS")] GetBlockHeaders = 3,
    [pbr::OriginalName("MESSAGE_TYPE_BLOCK_HEADERS_GOT")] BlockHeadersGot = 4,
    /// <summary>
    /// request block headers from peer 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_GET_BLOCKS")] GetBlocks = 5,
    [pbr::OriginalName("MESSAGE_TYPE_BLOCKS_GOT")] BlocksGot = 6,
    /// <summary>
    /// request transaction from peer 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_GET_TRANSACTIONS")] GetTransactions = 7,
    [pbr::OriginalName("MESSAGE_TYPE_TRANSACTIONS_GOT")] TransactionsGot = 8,
    /// <summary>
    /// request transaction pool 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_GET_MEMPOOL")] GetMempool = 9,
    [pbr::OriginalName("MESSAGE_TYPE_MEMPOOL_GOT")] MempoolGot = 10,
    /// <summary>
    /// request peer neighbours 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_GET_NEIGHBOURS")] GetNeighbours = 11,
    [pbr::OriginalName("MESSAGE_TYPE_NEIGHBOURS_GOT")] NeighboursGot = 12,
    /// <summary>
    /// consensus message 
    /// </summary>
    [pbr::OriginalName("MESSAGE_TYPE_CONSENSUS_MESSAGE")] ConsensusMessage = 13,
  }

  #endregion

  #region Messages
  public sealed partial class HandshakeRequestMessage : pb::IMessage<HandshakeRequestMessage> {
    private static readonly pb::MessageParser<HandshakeRequestMessage> _parser = new pb::MessageParser<HandshakeRequestMessage>(() => new HandshakeRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequestMessage(HandshakeRequestMessage other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequestMessage Clone() {
      return new HandshakeRequestMessage(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Phorkus.Core.Proto.Node node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          node_ = new global::Phorkus.Core.Proto.Node();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              node_ = new global::Phorkus.Core.Proto.Node();
            }
            input.ReadMessage(node_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandshakeResponseMessage : pb::IMessage<HandshakeResponseMessage> {
    private static readonly pb::MessageParser<HandshakeResponseMessage> _parser = new pb::MessageParser<HandshakeResponseMessage>(() => new HandshakeResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponseMessage(HandshakeResponseMessage other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponseMessage Clone() {
      return new HandshakeResponseMessage(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Phorkus.Core.Proto.Node node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          node_ = new global::Phorkus.Core.Proto.Node();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              node_ = new global::Phorkus.Core.Proto.Node();
            }
            input.ReadMessage(node_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlockHeadersMessage : pb::IMessage<GetBlockHeadersMessage> {
    private static readonly pb::MessageParser<GetBlockHeadersMessage> _parser = new pb::MessageParser<GetBlockHeadersMessage>(() => new GetBlockHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage(GetBlockHeadersMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage Clone() {
      return new GetBlockHeadersMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockHeadersMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BlockHeadersGotMessage : pb::IMessage<BlockHeadersGotMessage> {
    private static readonly pb::MessageParser<BlockHeadersGotMessage> _parser = new pb::MessageParser<BlockHeadersGotMessage>(() => new BlockHeadersGotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeadersGotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersGotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersGotMessage(BlockHeadersGotMessage other) : this() {
      blockHeaders_ = other.blockHeaders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersGotMessage Clone() {
      return new BlockHeadersGotMessage(this);
    }

    /// <summary>Field number for the "block_headers" field.</summary>
    public const int BlockHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_blockHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> blockHeaders_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> BlockHeaders {
      get { return blockHeaders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeadersGotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeadersGotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockHeaders_.Equals(other.blockHeaders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockHeaders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blockHeaders_.WriteTo(output, _repeated_blockHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockHeaders_.CalculateSize(_repeated_blockHeaders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeadersGotMessage other) {
      if (other == null) {
        return;
      }
      blockHeaders_.Add(other.blockHeaders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockHeaders_.AddEntriesFrom(input, _repeated_blockHeaders_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlocksMessage : pb::IMessage<GetBlocksMessage> {
    private static readonly pb::MessageParser<GetBlocksMessage> _parser = new pb::MessageParser<GetBlocksMessage>(() => new GetBlocksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlocksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage(GetBlocksMessage other) : this() {
      blockHashes_ = other.blockHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage Clone() {
      return new GetBlocksMessage(this);
    }

    /// <summary>Field number for the "block_hashes" field.</summary>
    public const int BlockHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_blockHashes_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> blockHashes_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> BlockHashes {
      get { return blockHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlocksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlocksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockHashes_.Equals(other.blockHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blockHashes_.WriteTo(output, _repeated_blockHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockHashes_.CalculateSize(_repeated_blockHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlocksMessage other) {
      if (other == null) {
        return;
      }
      blockHashes_.Add(other.blockHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockHashes_.AddEntriesFrom(input, _repeated_blockHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlocksGotMessage : pb::IMessage<BlocksGotMessage> {
    private static readonly pb::MessageParser<BlocksGotMessage> _parser = new pb::MessageParser<BlocksGotMessage>(() => new BlocksGotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlocksGotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksGotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksGotMessage(BlocksGotMessage other) : this() {
      blocks_ = other.blocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksGotMessage Clone() {
      return new BlocksGotMessage(this);
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.Block> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.Block.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.Block> blocks_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.Block> Blocks {
      get { return blocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlocksGotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlocksGotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blocks_.Equals(other.blocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blocks_.WriteTo(output, _repeated_blocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlocksGotMessage other) {
      if (other == null) {
        return;
      }
      blocks_.Add(other.blocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTransactionsMessage : pb::IMessage<GetTransactionsMessage> {
    private static readonly pb::MessageParser<GetTransactionsMessage> _parser = new pb::MessageParser<GetTransactionsMessage>(() => new GetTransactionsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsMessage(GetTransactionsMessage other) : this() {
      transactionHashes_ = other.transactionHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsMessage Clone() {
      return new GetTransactionsMessage(this);
    }

    /// <summary>Field number for the "transaction_hashes" field.</summary>
    public const int TransactionHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_transactionHashes_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> transactionHashes_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> TransactionHashes {
      get { return transactionHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactionHashes_.Equals(other.transactionHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactionHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactionHashes_.WriteTo(output, _repeated_transactionHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactionHashes_.CalculateSize(_repeated_transactionHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionsMessage other) {
      if (other == null) {
        return;
      }
      transactionHashes_.Add(other.transactionHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactionHashes_.AddEntriesFrom(input, _repeated_transactionHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionsGotMessage : pb::IMessage<TransactionsGotMessage> {
    private static readonly pb::MessageParser<TransactionsGotMessage> _parser = new pb::MessageParser<TransactionsGotMessage>(() => new TransactionsGotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionsGotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsGotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsGotMessage(TransactionsGotMessage other) : this() {
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsGotMessage Clone() {
      return new TransactionsGotMessage(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.Transaction> transactions_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionsGotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionsGotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionsGotMessage other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMempoolMessage : pb::IMessage<GetMempoolMessage> {
    private static readonly pb::MessageParser<GetMempoolMessage> _parser = new pb::MessageParser<GetMempoolMessage>(() => new GetMempoolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolMessage(GetMempoolMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolMessage Clone() {
      return new GetMempoolMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MempoolGotMessage : pb::IMessage<MempoolGotMessage> {
    private static readonly pb::MessageParser<MempoolGotMessage> _parser = new pb::MessageParser<MempoolGotMessage>(() => new MempoolGotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MempoolGotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolGotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolGotMessage(MempoolGotMessage other) : this() {
      transactionHashes_ = other.transactionHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolGotMessage Clone() {
      return new MempoolGotMessage(this);
    }

    /// <summary>Field number for the "transaction_hashes" field.</summary>
    public const int TransactionHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_transactionHashes_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> transactionHashes_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> TransactionHashes {
      get { return transactionHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MempoolGotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MempoolGotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactionHashes_.Equals(other.transactionHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactionHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactionHashes_.WriteTo(output, _repeated_transactionHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactionHashes_.CalculateSize(_repeated_transactionHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MempoolGotMessage other) {
      if (other == null) {
        return;
      }
      transactionHashes_.Add(other.transactionHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactionHashes_.AddEntriesFrom(input, _repeated_transactionHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNeighboursMessage : pb::IMessage<GetNeighboursMessage> {
    private static readonly pb::MessageParser<GetNeighboursMessage> _parser = new pb::MessageParser<GetNeighboursMessage>(() => new GetNeighboursMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNeighboursMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNeighboursMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNeighboursMessage(GetNeighboursMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNeighboursMessage Clone() {
      return new GetNeighboursMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNeighboursMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNeighboursMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNeighboursMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NeighboursGotMessage : pb::IMessage<NeighboursGotMessage> {
    private static readonly pb::MessageParser<NeighboursGotMessage> _parser = new pb::MessageParser<NeighboursGotMessage>(() => new NeighboursGotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NeighboursGotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NeighboursGotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NeighboursGotMessage(NeighboursGotMessage other) : this() {
      neighbours_ = other.neighbours_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NeighboursGotMessage Clone() {
      return new NeighboursGotMessage(this);
    }

    /// <summary>Field number for the "neighbours" field.</summary>
    public const int NeighboursFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.Node> _repeated_neighbours_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.Node.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.Node> neighbours_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.Node> Neighbours {
      get { return neighbours_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NeighboursGotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NeighboursGotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!neighbours_.Equals(other.neighbours_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= neighbours_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      neighbours_.WriteTo(output, _repeated_neighbours_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += neighbours_.CalculateSize(_repeated_neighbours_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NeighboursGotMessage other) {
      if (other == null) {
        return;
      }
      neighbours_.Add(other.neighbours_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            neighbours_.AddEntriesFrom(input, _repeated_neighbours_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Network.Proto.MessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      type_ = other.type_;
      switch (other.BodyCase) {
        case BodyOneofCase.HandshakeRequest:
          HandshakeRequest = other.HandshakeRequest.Clone();
          break;
        case BodyOneofCase.HandshakeResponse:
          HandshakeResponse = other.HandshakeResponse.Clone();
          break;
        case BodyOneofCase.GetBlockHeaders:
          GetBlockHeaders = other.GetBlockHeaders.Clone();
          break;
        case BodyOneofCase.BlockHeadersGot:
          BlockHeadersGot = other.BlockHeadersGot.Clone();
          break;
        case BodyOneofCase.GetMempool:
          GetMempool = other.GetMempool.Clone();
          break;
        case BodyOneofCase.MempoolGot:
          MempoolGot = other.MempoolGot.Clone();
          break;
        case BodyOneofCase.GetTransactions:
          GetTransactions = other.GetTransactions.Clone();
          break;
        case BodyOneofCase.TransactionsGot:
          TransactionsGot = other.TransactionsGot.Clone();
          break;
        case BodyOneofCase.GetNeighbours:
          GetNeighbours = other.GetNeighbours.Clone();
          break;
        case BodyOneofCase.NeighboursGot:
          NeighboursGot = other.NeighboursGot.Clone();
          break;
        case BodyOneofCase.ConsensusMessage:
          ConsensusMessage = other.ConsensusMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Phorkus.Core.Network.Proto.MessageType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.MessageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "handshake_request" field.</summary>
    public const int HandshakeRequestFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.HandshakeRequestMessage HandshakeRequest {
      get { return bodyCase_ == BodyOneofCase.HandshakeRequest ? (global::Phorkus.Core.Network.Proto.HandshakeRequestMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.HandshakeRequest;
      }
    }

    /// <summary>Field number for the "handshake_response" field.</summary>
    public const int HandshakeResponseFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.HandshakeResponseMessage HandshakeResponse {
      get { return bodyCase_ == BodyOneofCase.HandshakeResponse ? (global::Phorkus.Core.Network.Proto.HandshakeResponseMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.HandshakeResponse;
      }
    }

    /// <summary>Field number for the "get_block_headers" field.</summary>
    public const int GetBlockHeadersFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage GetBlockHeaders {
      get { return bodyCase_ == BodyOneofCase.GetBlockHeaders ? (global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.GetBlockHeaders;
      }
    }

    /// <summary>Field number for the "block_headers_got" field.</summary>
    public const int BlockHeadersGotFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage BlockHeadersGot {
      get { return bodyCase_ == BodyOneofCase.BlockHeadersGot ? (global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.BlockHeadersGot;
      }
    }

    /// <summary>Field number for the "get_mempool" field.</summary>
    public const int GetMempoolFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.GetMempoolMessage GetMempool {
      get { return bodyCase_ == BodyOneofCase.GetMempool ? (global::Phorkus.Core.Network.Proto.GetMempoolMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.GetMempool;
      }
    }

    /// <summary>Field number for the "mempool_got" field.</summary>
    public const int MempoolGotFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.MempoolGotMessage MempoolGot {
      get { return bodyCase_ == BodyOneofCase.MempoolGot ? (global::Phorkus.Core.Network.Proto.MempoolGotMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.MempoolGot;
      }
    }

    /// <summary>Field number for the "get_transactions" field.</summary>
    public const int GetTransactionsFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.GetTransactionsMessage GetTransactions {
      get { return bodyCase_ == BodyOneofCase.GetTransactions ? (global::Phorkus.Core.Network.Proto.GetTransactionsMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.GetTransactions;
      }
    }

    /// <summary>Field number for the "transactions_got" field.</summary>
    public const int TransactionsGotFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.TransactionsGotMessage TransactionsGot {
      get { return bodyCase_ == BodyOneofCase.TransactionsGot ? (global::Phorkus.Core.Network.Proto.TransactionsGotMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.TransactionsGot;
      }
    }

    /// <summary>Field number for the "get_neighbours" field.</summary>
    public const int GetNeighboursFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.GetNeighboursMessage GetNeighbours {
      get { return bodyCase_ == BodyOneofCase.GetNeighbours ? (global::Phorkus.Core.Network.Proto.GetNeighboursMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.GetNeighbours;
      }
    }

    /// <summary>Field number for the "neighbours_got" field.</summary>
    public const int NeighboursGotFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Network.Proto.NeighboursGotMessage NeighboursGot {
      get { return bodyCase_ == BodyOneofCase.NeighboursGot ? (global::Phorkus.Core.Network.Proto.NeighboursGotMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.NeighboursGot;
      }
    }

    /// <summary>Field number for the "consensus_message" field.</summary>
    public const int ConsensusMessageFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.ConsensusMessage ConsensusMessage {
      get { return bodyCase_ == BodyOneofCase.ConsensusMessage ? (global::Phorkus.Core.Proto.ConsensusMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ConsensusMessage;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      HandshakeRequest = 10,
      HandshakeResponse = 11,
      GetBlockHeaders = 12,
      BlockHeadersGot = 13,
      GetMempool = 14,
      MempoolGot = 15,
      GetTransactions = 16,
      TransactionsGot = 17,
      GetNeighbours = 18,
      NeighboursGot = 19,
      ConsensusMessage = 20,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(HandshakeRequest, other.HandshakeRequest)) return false;
      if (!object.Equals(HandshakeResponse, other.HandshakeResponse)) return false;
      if (!object.Equals(GetBlockHeaders, other.GetBlockHeaders)) return false;
      if (!object.Equals(BlockHeadersGot, other.BlockHeadersGot)) return false;
      if (!object.Equals(GetMempool, other.GetMempool)) return false;
      if (!object.Equals(MempoolGot, other.MempoolGot)) return false;
      if (!object.Equals(GetTransactions, other.GetTransactions)) return false;
      if (!object.Equals(TransactionsGot, other.TransactionsGot)) return false;
      if (!object.Equals(GetNeighbours, other.GetNeighbours)) return false;
      if (!object.Equals(NeighboursGot, other.NeighboursGot)) return false;
      if (!object.Equals(ConsensusMessage, other.ConsensusMessage)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (bodyCase_ == BodyOneofCase.HandshakeRequest) hash ^= HandshakeRequest.GetHashCode();
      if (bodyCase_ == BodyOneofCase.HandshakeResponse) hash ^= HandshakeResponse.GetHashCode();
      if (bodyCase_ == BodyOneofCase.GetBlockHeaders) hash ^= GetBlockHeaders.GetHashCode();
      if (bodyCase_ == BodyOneofCase.BlockHeadersGot) hash ^= BlockHeadersGot.GetHashCode();
      if (bodyCase_ == BodyOneofCase.GetMempool) hash ^= GetMempool.GetHashCode();
      if (bodyCase_ == BodyOneofCase.MempoolGot) hash ^= MempoolGot.GetHashCode();
      if (bodyCase_ == BodyOneofCase.GetTransactions) hash ^= GetTransactions.GetHashCode();
      if (bodyCase_ == BodyOneofCase.TransactionsGot) hash ^= TransactionsGot.GetHashCode();
      if (bodyCase_ == BodyOneofCase.GetNeighbours) hash ^= GetNeighbours.GetHashCode();
      if (bodyCase_ == BodyOneofCase.NeighboursGot) hash ^= NeighboursGot.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ConsensusMessage) hash ^= ConsensusMessage.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (bodyCase_ == BodyOneofCase.HandshakeRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(HandshakeRequest);
      }
      if (bodyCase_ == BodyOneofCase.HandshakeResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(HandshakeResponse);
      }
      if (bodyCase_ == BodyOneofCase.GetBlockHeaders) {
        output.WriteRawTag(98);
        output.WriteMessage(GetBlockHeaders);
      }
      if (bodyCase_ == BodyOneofCase.BlockHeadersGot) {
        output.WriteRawTag(106);
        output.WriteMessage(BlockHeadersGot);
      }
      if (bodyCase_ == BodyOneofCase.GetMempool) {
        output.WriteRawTag(114);
        output.WriteMessage(GetMempool);
      }
      if (bodyCase_ == BodyOneofCase.MempoolGot) {
        output.WriteRawTag(122);
        output.WriteMessage(MempoolGot);
      }
      if (bodyCase_ == BodyOneofCase.GetTransactions) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(GetTransactions);
      }
      if (bodyCase_ == BodyOneofCase.TransactionsGot) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(TransactionsGot);
      }
      if (bodyCase_ == BodyOneofCase.GetNeighbours) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GetNeighbours);
      }
      if (bodyCase_ == BodyOneofCase.NeighboursGot) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NeighboursGot);
      }
      if (bodyCase_ == BodyOneofCase.ConsensusMessage) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ConsensusMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (bodyCase_ == BodyOneofCase.HandshakeRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandshakeRequest);
      }
      if (bodyCase_ == BodyOneofCase.HandshakeResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandshakeResponse);
      }
      if (bodyCase_ == BodyOneofCase.GetBlockHeaders) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBlockHeaders);
      }
      if (bodyCase_ == BodyOneofCase.BlockHeadersGot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeadersGot);
      }
      if (bodyCase_ == BodyOneofCase.GetMempool) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMempool);
      }
      if (bodyCase_ == BodyOneofCase.MempoolGot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MempoolGot);
      }
      if (bodyCase_ == BodyOneofCase.GetTransactions) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetTransactions);
      }
      if (bodyCase_ == BodyOneofCase.TransactionsGot) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TransactionsGot);
      }
      if (bodyCase_ == BodyOneofCase.GetNeighbours) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetNeighbours);
      }
      if (bodyCase_ == BodyOneofCase.NeighboursGot) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NeighboursGot);
      }
      if (bodyCase_ == BodyOneofCase.ConsensusMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConsensusMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.HandshakeRequest:
          if (HandshakeRequest == null) {
            HandshakeRequest = new global::Phorkus.Core.Network.Proto.HandshakeRequestMessage();
          }
          HandshakeRequest.MergeFrom(other.HandshakeRequest);
          break;
        case BodyOneofCase.HandshakeResponse:
          if (HandshakeResponse == null) {
            HandshakeResponse = new global::Phorkus.Core.Network.Proto.HandshakeResponseMessage();
          }
          HandshakeResponse.MergeFrom(other.HandshakeResponse);
          break;
        case BodyOneofCase.GetBlockHeaders:
          if (GetBlockHeaders == null) {
            GetBlockHeaders = new global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage();
          }
          GetBlockHeaders.MergeFrom(other.GetBlockHeaders);
          break;
        case BodyOneofCase.BlockHeadersGot:
          if (BlockHeadersGot == null) {
            BlockHeadersGot = new global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage();
          }
          BlockHeadersGot.MergeFrom(other.BlockHeadersGot);
          break;
        case BodyOneofCase.GetMempool:
          if (GetMempool == null) {
            GetMempool = new global::Phorkus.Core.Network.Proto.GetMempoolMessage();
          }
          GetMempool.MergeFrom(other.GetMempool);
          break;
        case BodyOneofCase.MempoolGot:
          if (MempoolGot == null) {
            MempoolGot = new global::Phorkus.Core.Network.Proto.MempoolGotMessage();
          }
          MempoolGot.MergeFrom(other.MempoolGot);
          break;
        case BodyOneofCase.GetTransactions:
          if (GetTransactions == null) {
            GetTransactions = new global::Phorkus.Core.Network.Proto.GetTransactionsMessage();
          }
          GetTransactions.MergeFrom(other.GetTransactions);
          break;
        case BodyOneofCase.TransactionsGot:
          if (TransactionsGot == null) {
            TransactionsGot = new global::Phorkus.Core.Network.Proto.TransactionsGotMessage();
          }
          TransactionsGot.MergeFrom(other.TransactionsGot);
          break;
        case BodyOneofCase.GetNeighbours:
          if (GetNeighbours == null) {
            GetNeighbours = new global::Phorkus.Core.Network.Proto.GetNeighboursMessage();
          }
          GetNeighbours.MergeFrom(other.GetNeighbours);
          break;
        case BodyOneofCase.NeighboursGot:
          if (NeighboursGot == null) {
            NeighboursGot = new global::Phorkus.Core.Network.Proto.NeighboursGotMessage();
          }
          NeighboursGot.MergeFrom(other.NeighboursGot);
          break;
        case BodyOneofCase.ConsensusMessage:
          if (ConsensusMessage == null) {
            ConsensusMessage = new global::Phorkus.Core.Proto.ConsensusMessage();
          }
          ConsensusMessage.MergeFrom(other.ConsensusMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Phorkus.Core.Network.Proto.MessageType) input.ReadEnum();
            break;
          }
          case 82: {
            global::Phorkus.Core.Network.Proto.HandshakeRequestMessage subBuilder = new global::Phorkus.Core.Network.Proto.HandshakeRequestMessage();
            if (bodyCase_ == BodyOneofCase.HandshakeRequest) {
              subBuilder.MergeFrom(HandshakeRequest);
            }
            input.ReadMessage(subBuilder);
            HandshakeRequest = subBuilder;
            break;
          }
          case 90: {
            global::Phorkus.Core.Network.Proto.HandshakeResponseMessage subBuilder = new global::Phorkus.Core.Network.Proto.HandshakeResponseMessage();
            if (bodyCase_ == BodyOneofCase.HandshakeResponse) {
              subBuilder.MergeFrom(HandshakeResponse);
            }
            input.ReadMessage(subBuilder);
            HandshakeResponse = subBuilder;
            break;
          }
          case 98: {
            global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage subBuilder = new global::Phorkus.Core.Network.Proto.GetBlockHeadersMessage();
            if (bodyCase_ == BodyOneofCase.GetBlockHeaders) {
              subBuilder.MergeFrom(GetBlockHeaders);
            }
            input.ReadMessage(subBuilder);
            GetBlockHeaders = subBuilder;
            break;
          }
          case 106: {
            global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage subBuilder = new global::Phorkus.Core.Network.Proto.BlockHeadersGotMessage();
            if (bodyCase_ == BodyOneofCase.BlockHeadersGot) {
              subBuilder.MergeFrom(BlockHeadersGot);
            }
            input.ReadMessage(subBuilder);
            BlockHeadersGot = subBuilder;
            break;
          }
          case 114: {
            global::Phorkus.Core.Network.Proto.GetMempoolMessage subBuilder = new global::Phorkus.Core.Network.Proto.GetMempoolMessage();
            if (bodyCase_ == BodyOneofCase.GetMempool) {
              subBuilder.MergeFrom(GetMempool);
            }
            input.ReadMessage(subBuilder);
            GetMempool = subBuilder;
            break;
          }
          case 122: {
            global::Phorkus.Core.Network.Proto.MempoolGotMessage subBuilder = new global::Phorkus.Core.Network.Proto.MempoolGotMessage();
            if (bodyCase_ == BodyOneofCase.MempoolGot) {
              subBuilder.MergeFrom(MempoolGot);
            }
            input.ReadMessage(subBuilder);
            MempoolGot = subBuilder;
            break;
          }
          case 130: {
            global::Phorkus.Core.Network.Proto.GetTransactionsMessage subBuilder = new global::Phorkus.Core.Network.Proto.GetTransactionsMessage();
            if (bodyCase_ == BodyOneofCase.GetTransactions) {
              subBuilder.MergeFrom(GetTransactions);
            }
            input.ReadMessage(subBuilder);
            GetTransactions = subBuilder;
            break;
          }
          case 138: {
            global::Phorkus.Core.Network.Proto.TransactionsGotMessage subBuilder = new global::Phorkus.Core.Network.Proto.TransactionsGotMessage();
            if (bodyCase_ == BodyOneofCase.TransactionsGot) {
              subBuilder.MergeFrom(TransactionsGot);
            }
            input.ReadMessage(subBuilder);
            TransactionsGot = subBuilder;
            break;
          }
          case 146: {
            global::Phorkus.Core.Network.Proto.GetNeighboursMessage subBuilder = new global::Phorkus.Core.Network.Proto.GetNeighboursMessage();
            if (bodyCase_ == BodyOneofCase.GetNeighbours) {
              subBuilder.MergeFrom(GetNeighbours);
            }
            input.ReadMessage(subBuilder);
            GetNeighbours = subBuilder;
            break;
          }
          case 154: {
            global::Phorkus.Core.Network.Proto.NeighboursGotMessage subBuilder = new global::Phorkus.Core.Network.Proto.NeighboursGotMessage();
            if (bodyCase_ == BodyOneofCase.NeighboursGot) {
              subBuilder.MergeFrom(NeighboursGot);
            }
            input.ReadMessage(subBuilder);
            NeighboursGot = subBuilder;
            break;
          }
          case 162: {
            global::Phorkus.Core.Proto.ConsensusMessage subBuilder = new global::Phorkus.Core.Proto.ConsensusMessage();
            if (bodyCase_ == BodyOneofCase.ConsensusMessage) {
              subBuilder.MergeFrom(ConsensusMessage);
            }
            input.ReadMessage(subBuilder);
            ConsensusMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
