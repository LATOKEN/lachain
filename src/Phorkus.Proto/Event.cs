// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from event.proto</summary>
  public static partial class EventReflection {

    #region Descriptor
    /// <summary>File descriptor for event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtldmVudC5wcm90bxoNZGVmYXVsdC5wcm90byKGAQoFRXZlbnQSGgoIY29u",
            "dHJhY3QYASABKAsyCC5VSW50MTYwEgwKBGRhdGEYAiABKAwSIgoQdHJhbnNh",
            "Y3Rpb25faGFzaBgDIAEoCzIILlVJbnQyNTYSDQoFaW5kZXgYBCABKA0SIAoO",
            "c2lnbmF0dXJlX2hhc2gYBSABKAsyCC5VSW50MjU2QiMKEWNvbS5sYXRva2Vu",
            "LnByb3RvqgINUGhvcmt1cy5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Event), global::Phorkus.Proto.Event.Parser, new[]{ "Contract", "Data", "TransactionHash", "Index", "SignatureHash" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.EventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      data_ = other.data_;
      transactionHash_ = other.transactionHash_ != null ? other.transactionHash_.Clone() : null;
      index_ = other.index_;
      signatureHash_ = other.signatureHash_ != null ? other.signatureHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_hash" field.</summary>
    public const int TransactionHashFieldNumber = 3;
    private global::Phorkus.Proto.UInt256 transactionHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 TransactionHash {
      get { return transactionHash_; }
      set {
        transactionHash_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "signature_hash" field.</summary>
    public const int SignatureHashFieldNumber = 5;
    private global::Phorkus.Proto.UInt256 signatureHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 SignatureHash {
      get { return signatureHash_; }
      set {
        signatureHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contract, other.Contract)) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(TransactionHash, other.TransactionHash)) return false;
      if (Index != other.Index) return false;
      if (!object.Equals(SignatureHash, other.SignatureHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (transactionHash_ != null) hash ^= TransactionHash.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (signatureHash_ != null) hash ^= SignatureHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contract);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (transactionHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransactionHash);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (signatureHash_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SignatureHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (transactionHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionHash);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (signatureHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignatureHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          contract_ = new global::Phorkus.Proto.UInt160();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.transactionHash_ != null) {
        if (transactionHash_ == null) {
          transactionHash_ = new global::Phorkus.Proto.UInt256();
        }
        TransactionHash.MergeFrom(other.TransactionHash);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.signatureHash_ != null) {
        if (signatureHash_ == null) {
          signatureHash_ = new global::Phorkus.Proto.UInt256();
        }
        SignatureHash.MergeFrom(other.SignatureHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contract_ == null) {
              contract_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(contract_);
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            if (transactionHash_ == null) {
              transactionHash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(transactionHash_);
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
          case 42: {
            if (signatureHash_ == null) {
              signatureHash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(signatureHash_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
