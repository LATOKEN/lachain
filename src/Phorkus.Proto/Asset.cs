// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from asset.proto</summary>
  public static partial class AssetReflection {

    #region Descriptor
    /// <summary>File descriptor for asset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgthc3NldC5wcm90bxoNZGVmYXVsdC5wcm90byK/AQoFQXNzZXQSFgoEaGFz",
            "aBgBIAEoCzIILlVJbnQxNjASGAoEdHlwZRgCIAEoDjIKLkFzc2V0VHlwZRIM",
            "CgRuYW1lGAMgASgJEhgKBnN1cHBseRgEIAEoCzIILlVJbnQyNTYSFwoFbGlt",
            "aXQYBSABKAsyCC5VSW50MjU2EhAKCGRlY2ltYWxzGAYgASgNEhcKBW93bmVy",
            "GAcgASgLMgguVUludDE2MBIYCgZtaW50ZXIYCCABKAsyCC5VSW50MTYwKj4K",
            "CUFzc2V0VHlwZRIYChRBU1NFVF9UWVBFX0dPVkVSTklORxAAEhcKE0FTU0VU",
            "X1RZUEVfUExBVEZPUk0QAkIjChFjb20ubGF0b2tlbi5wcm90b6oCDVBob3Jr",
            "dXMuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Proto.AssetType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Asset), global::Phorkus.Proto.Asset.Parser, new[]{ "Hash", "Type", "Name", "Supply", "Limit", "Decimals", "Owner", "Minter" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AssetType {
    [pbr::OriginalName("ASSET_TYPE_GOVERNING")] Governing = 0,
    [pbr::OriginalName("ASSET_TYPE_PLATFORM")] Platform = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Asset : pb::IMessage<Asset> {
    private static readonly pb::MessageParser<Asset> _parser = new pb::MessageParser<Asset>(() => new Asset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Asset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.AssetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset(Asset other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      type_ = other.type_;
      name_ = other.name_;
      supply_ = other.supply_ != null ? other.supply_.Clone() : null;
      limit_ = other.limit_ != null ? other.limit_.Clone() : null;
      decimals_ = other.decimals_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      minter_ = other.minter_ != null ? other.minter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset Clone() {
      return new Asset(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Phorkus.Proto.AssetType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.AssetType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supply" field.</summary>
    public const int SupplyFieldNumber = 4;
    private global::Phorkus.Proto.UInt256 supply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Supply {
      get { return supply_; }
      set {
        supply_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 5;
    private global::Phorkus.Proto.UInt256 limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 6;
    private uint decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private global::Phorkus.Proto.UInt160 owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "minter" field.</summary>
    public const int MinterFieldNumber = 8;
    private global::Phorkus.Proto.UInt160 minter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Minter {
      get { return minter_; }
      set {
        minter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Asset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Asset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Supply, other.Supply)) return false;
      if (!object.Equals(Limit, other.Limit)) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Minter, other.Minter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (supply_ != null) hash ^= Supply.GetHashCode();
      if (limit_ != null) hash ^= Limit.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (minter_ != null) hash ^= Minter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (supply_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Supply);
      }
      if (limit_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Limit);
      }
      if (Decimals != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Decimals);
      }
      if (owner_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Owner);
      }
      if (minter_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Minter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (supply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supply);
      }
      if (limit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Limit);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Decimals);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (minter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Asset other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          hash_ = new global::Phorkus.Proto.UInt160();
        }
        Hash.MergeFrom(other.Hash);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.supply_ != null) {
        if (supply_ == null) {
          supply_ = new global::Phorkus.Proto.UInt256();
        }
        Supply.MergeFrom(other.Supply);
      }
      if (other.limit_ != null) {
        if (limit_ == null) {
          limit_ = new global::Phorkus.Proto.UInt256();
        }
        Limit.MergeFrom(other.Limit);
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          owner_ = new global::Phorkus.Proto.UInt160();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.minter_ != null) {
        if (minter_ == null) {
          minter_ = new global::Phorkus.Proto.UInt160();
        }
        Minter.MergeFrom(other.Minter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              hash_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(hash_);
            break;
          }
          case 16: {
            type_ = (global::Phorkus.Proto.AssetType) input.ReadEnum();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            if (supply_ == null) {
              supply_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(supply_);
            break;
          }
          case 42: {
            if (limit_ == null) {
              limit_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(limit_);
            break;
          }
          case 48: {
            Decimals = input.ReadUInt32();
            break;
          }
          case 58: {
            if (owner_ == null) {
              owner_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(owner_);
            break;
          }
          case 66: {
            if (minter_ == null) {
              minter_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(minter_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
