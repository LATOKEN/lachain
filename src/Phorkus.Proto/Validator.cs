// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: validator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from validator.proto</summary>
  public static partial class ValidatorReflection {

    #region Descriptor
    /// <summary>File descriptor for validator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ValidatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg92YWxpZGF0b3IucHJvdG8aDWRlZmF1bHQucHJvdG8iZAoJVmFsaWRhdG9y",
            "Eh4KCnB1YmxpY19rZXkYASABKAsyCi5QdWJsaWNLZXkSHgoFc3RhdGUYAiAB",
            "KA4yDy5WYWxpZGF0b3JTdGF0ZRIXCgV2b3RlcxgDIAEoCzIILlVJbnQyNTYq",
            "SQoOVmFsaWRhdG9yU3RhdGUSGwoXVkFMSURBVE9SX1NUQVRFX1dBSVRJTkcQ",
            "ABIaChZWQUxJREFUT1JfU1RBVEVfQUNUSVZFEAFCEKoCDVBob3JrdXMuUHJv",
            "dG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Proto.ValidatorState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Validator), global::Phorkus.Proto.Validator.Parser, new[]{ "PublicKey", "State", "Votes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ValidatorState {
    [pbr::OriginalName("VALIDATOR_STATE_WAITING")] Waiting = 0,
    [pbr::OriginalName("VALIDATOR_STATE_ACTIVE")] Active = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Validator : pb::IMessage<Validator> {
    private static readonly pb::MessageParser<Validator> _parser = new pb::MessageParser<Validator>(() => new Validator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Validator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ValidatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator(Validator other) : this() {
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      state_ = other.state_;
      votes_ = other.votes_ != null ? other.votes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator Clone() {
      return new Validator(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private global::Phorkus.Proto.PublicKey publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.PublicKey PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Phorkus.Proto.ValidatorState state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.ValidatorState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "votes" field.</summary>
    public const int VotesFieldNumber = 3;
    private global::Phorkus.Proto.UInt256 votes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Votes {
      get { return votes_; }
      set {
        votes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Validator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Validator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Votes, other.Votes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (votes_ != null) hash ^= Votes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (publicKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKey);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (votes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Votes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (votes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Votes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Validator other) {
      if (other == null) {
        return;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          publicKey_ = new global::Phorkus.Proto.PublicKey();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.votes_ != null) {
        if (votes_ == null) {
          votes_ = new global::Phorkus.Proto.UInt256();
        }
        Votes.MergeFrom(other.Votes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (publicKey_ == null) {
              publicKey_ = new global::Phorkus.Proto.PublicKey();
            }
            input.ReadMessage(publicKey_);
            break;
          }
          case 16: {
            state_ = (global::Phorkus.Proto.ValidatorState) input.ReadEnum();
            break;
          }
          case 26: {
            if (votes_ == null) {
              votes_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(votes_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
