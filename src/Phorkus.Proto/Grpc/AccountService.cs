// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: account_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto.Grpc {

  /// <summary>Holder for reflection information generated from account_service.proto</summary>
  public static partial class AccountServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for account_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhY2NvdW50X3NlcnZpY2UucHJvdG8aDmNvbnRyYWN0LnByb3RvGhF0cmFu",
            "c2FjdGlvbi5wcm90bxoNZGVmYXVsdC5wcm90byJiCh5TZW5kQWNjZXB0ZWRU",
            "cmFuc2FjdGlvblJlcXVlc3QSIQoLdHJhbnNhY3Rpb24YASABKAsyDC5UcmFu",
            "c2FjdGlvbhIdCglzaWduYXR1cmUYAiABKAsyCi5TaWduYXR1cmUiNgocU2Vu",
            "ZEFjY2VwdGVkVHJhbnNhY3Rpb25SZXBseRIWCgRoYXNoGAEgASgLMgguVUlu",
            "dDI1NiJMChFHZXRCYWxhbmNlUmVxdWVzdBIZCgdhZGRyZXNzGAEgASgLMggu",
            "VUludDE2MBIcCgphc3NldF9oYXNoGAIgASgLMgguVUludDE2MCJKCg9HZXRC",
            "YWxhbmNlUmVwbHkSHAoKYXNzZXRfaGFzaBgBIAEoCzIILlVJbnQxNjASGQoH",
            "YmFsYW5jZRgCIAEoCzIILlVJbnQyNTYiGwoZR2V0QXZhaWxhYmxlQXNzZXRz",
            "UmVxdWVzdCKIAQoXR2V0QXZhaWxhYmxlQXNzZXRzUmVwbHkSNAoGYXNzZXRz",
            "GAEgAygLMiQuR2V0QXZhaWxhYmxlQXNzZXRzUmVwbHkuQXNzZXRzRW50cnka",
            "NwoLQXNzZXRzRW50cnkSCwoDa2V5GAEgASgJEhcKBXZhbHVlGAIgASgLMggu",
            "VUludDE2MDoCOAEiNQobQ2FsY1RyYW5zYWN0aW9uTm9uY2VSZXF1ZXN0EhYK",
            "BGZyb20YASABKAsyCC5VSW50MTYwIioKGUNhbGNUcmFuc2FjdGlvbk5vbmNl",
            "UmVwbHkSDQoFbm9uY2UYASABKAQyvQIKDkFjY291bnRTZXJ2aWNlElkKF1Nl",
            "bmRBY2NlcHRlZFRyYW5zYWN0aW9uEh8uU2VuZEFjY2VwdGVkVHJhbnNhY3Rp",
            "b25SZXF1ZXN0Gh0uU2VuZEFjY2VwdGVkVHJhbnNhY3Rpb25SZXBseRIyCgpH",
            "ZXRCYWxhbmNlEhIuR2V0QmFsYW5jZVJlcXVlc3QaEC5HZXRCYWxhbmNlUmVw",
            "bHkSSgoSR2V0QXZhaWxhYmxlQXNzZXRzEhouR2V0QXZhaWxhYmxlQXNzZXRz",
            "UmVxdWVzdBoYLkdldEF2YWlsYWJsZUFzc2V0c1JlcGx5ElAKFENhbGNUcmFu",
            "c2FjdGlvbk5vbmNlEhwuQ2FsY1RyYW5zYWN0aW9uTm9uY2VSZXF1ZXN0Ghou",
            "Q2FsY1RyYW5zYWN0aW9uTm9uY2VSZXBseUIoChFjb20ubGF0b2tlbi5wcm90",
            "b6oCElBob3JrdXMuUHJvdG8uR3JwY2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.ContractReflection.Descriptor, global::Phorkus.Proto.TransactionReflection.Descriptor, global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.SendAcceptedTransactionRequest), global::Phorkus.Proto.Grpc.SendAcceptedTransactionRequest.Parser, new[]{ "Transaction", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.SendAcceptedTransactionReply), global::Phorkus.Proto.Grpc.SendAcceptedTransactionReply.Parser, new[]{ "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.GetBalanceRequest), global::Phorkus.Proto.Grpc.GetBalanceRequest.Parser, new[]{ "Address", "AssetHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.GetBalanceReply), global::Phorkus.Proto.Grpc.GetBalanceReply.Parser, new[]{ "AssetHash", "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.GetAvailableAssetsRequest), global::Phorkus.Proto.Grpc.GetAvailableAssetsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.GetAvailableAssetsReply), global::Phorkus.Proto.Grpc.GetAvailableAssetsReply.Parser, new[]{ "Assets" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.CalcTransactionNonceRequest), global::Phorkus.Proto.Grpc.CalcTransactionNonceRequest.Parser, new[]{ "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Grpc.CalcTransactionNonceReply), global::Phorkus.Proto.Grpc.CalcTransactionNonceReply.Parser, new[]{ "Nonce" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SendAcceptedTransactionRequest : pb::IMessage<SendAcceptedTransactionRequest> {
    private static readonly pb::MessageParser<SendAcceptedTransactionRequest> _parser = new pb::MessageParser<SendAcceptedTransactionRequest>(() => new SendAcceptedTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendAcceptedTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionRequest(SendAcceptedTransactionRequest other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionRequest Clone() {
      return new SendAcceptedTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Phorkus.Proto.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::Phorkus.Proto.Signature signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendAcceptedTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendAcceptedTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendAcceptedTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Phorkus.Proto.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::Phorkus.Proto.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Phorkus.Proto.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            if (signature_ == null) {
              signature_ = new global::Phorkus.Proto.Signature();
            }
            input.ReadMessage(signature_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendAcceptedTransactionReply : pb::IMessage<SendAcceptedTransactionReply> {
    private static readonly pb::MessageParser<SendAcceptedTransactionReply> _parser = new pb::MessageParser<SendAcceptedTransactionReply>(() => new SendAcceptedTransactionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendAcceptedTransactionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionReply(SendAcceptedTransactionReply other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAcceptedTransactionReply Clone() {
      return new SendAcceptedTransactionReply(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Phorkus.Proto.UInt256 hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendAcceptedTransactionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendAcceptedTransactionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendAcceptedTransactionReply other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          hash_ = new global::Phorkus.Proto.UInt256();
        }
        Hash.MergeFrom(other.Hash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              hash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(hash_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalanceRequest : pb::IMessage<GetBalanceRequest> {
    private static readonly pb::MessageParser<GetBalanceRequest> _parser = new pb::MessageParser<GetBalanceRequest>(() => new GetBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest(GetBalanceRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      assetHash_ = other.assetHash_ != null ? other.assetHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest Clone() {
      return new GetBalanceRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "asset_hash" field.</summary>
    public const int AssetHashFieldNumber = 2;
    private global::Phorkus.Proto.UInt160 assetHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 AssetHash {
      get { return assetHash_; }
      set {
        assetHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(AssetHash, other.AssetHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (assetHash_ != null) hash ^= AssetHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (assetHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AssetHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (assetHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Phorkus.Proto.UInt160();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.assetHash_ != null) {
        if (assetHash_ == null) {
          assetHash_ = new global::Phorkus.Proto.UInt160();
        }
        AssetHash.MergeFrom(other.AssetHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(address_);
            break;
          }
          case 18: {
            if (assetHash_ == null) {
              assetHash_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(assetHash_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalanceReply : pb::IMessage<GetBalanceReply> {
    private static readonly pb::MessageParser<GetBalanceReply> _parser = new pb::MessageParser<GetBalanceReply>(() => new GetBalanceReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceReply(GetBalanceReply other) : this() {
      assetHash_ = other.assetHash_ != null ? other.assetHash_.Clone() : null;
      balance_ = other.balance_ != null ? other.balance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceReply Clone() {
      return new GetBalanceReply(this);
    }

    /// <summary>Field number for the "asset_hash" field.</summary>
    public const int AssetHashFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 assetHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 AssetHash {
      get { return assetHash_; }
      set {
        assetHash_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private global::Phorkus.Proto.UInt256 balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AssetHash, other.AssetHash)) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (assetHash_ != null) hash ^= AssetHash.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (assetHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AssetHash);
      }
      if (balance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (assetHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetHash);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceReply other) {
      if (other == null) {
        return;
      }
      if (other.assetHash_ != null) {
        if (assetHash_ == null) {
          assetHash_ = new global::Phorkus.Proto.UInt160();
        }
        AssetHash.MergeFrom(other.AssetHash);
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Phorkus.Proto.UInt256();
        }
        Balance.MergeFrom(other.Balance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (assetHash_ == null) {
              assetHash_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(assetHash_);
            break;
          }
          case 18: {
            if (balance_ == null) {
              balance_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(balance_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAvailableAssetsRequest : pb::IMessage<GetAvailableAssetsRequest> {
    private static readonly pb::MessageParser<GetAvailableAssetsRequest> _parser = new pb::MessageParser<GetAvailableAssetsRequest>(() => new GetAvailableAssetsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableAssetsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsRequest(GetAvailableAssetsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsRequest Clone() {
      return new GetAvailableAssetsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableAssetsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableAssetsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableAssetsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAvailableAssetsReply : pb::IMessage<GetAvailableAssetsReply> {
    private static readonly pb::MessageParser<GetAvailableAssetsReply> _parser = new pb::MessageParser<GetAvailableAssetsReply>(() => new GetAvailableAssetsReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableAssetsReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsReply(GetAvailableAssetsReply other) : this() {
      assets_ = other.assets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableAssetsReply Clone() {
      return new GetAvailableAssetsReply(this);
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Phorkus.Proto.UInt160>.Codec _map_assets_codec
        = new pbc::MapField<string, global::Phorkus.Proto.UInt160>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Phorkus.Proto.UInt160.Parser), 10);
    private readonly pbc::MapField<string, global::Phorkus.Proto.UInt160> assets_ = new pbc::MapField<string, global::Phorkus.Proto.UInt160>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Phorkus.Proto.UInt160> Assets {
      get { return assets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableAssetsReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableAssetsReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Assets.Equals(other.Assets)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Assets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assets_.WriteTo(output, _map_assets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assets_.CalculateSize(_map_assets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableAssetsReply other) {
      if (other == null) {
        return;
      }
      assets_.Add(other.assets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assets_.AddEntriesFrom(input, _map_assets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalcTransactionNonceRequest : pb::IMessage<CalcTransactionNonceRequest> {
    private static readonly pb::MessageParser<CalcTransactionNonceRequest> _parser = new pb::MessageParser<CalcTransactionNonceRequest>(() => new CalcTransactionNonceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalcTransactionNonceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceRequest(CalcTransactionNonceRequest other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceRequest Clone() {
      return new CalcTransactionNonceRequest(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalcTransactionNonceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalcTransactionNonceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalcTransactionNonceRequest other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Phorkus.Proto.UInt160();
        }
        From.MergeFrom(other.From);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              from_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(from_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalcTransactionNonceReply : pb::IMessage<CalcTransactionNonceReply> {
    private static readonly pb::MessageParser<CalcTransactionNonceReply> _parser = new pb::MessageParser<CalcTransactionNonceReply>(() => new CalcTransactionNonceReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalcTransactionNonceReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.Grpc.AccountServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceReply(CalcTransactionNonceReply other) : this() {
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalcTransactionNonceReply Clone() {
      return new CalcTransactionNonceReply(this);
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 1;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalcTransactionNonceReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalcTransactionNonceReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nonce != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalcTransactionNonceReply other) {
      if (other == null) {
        return;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Nonce = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
