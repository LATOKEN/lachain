// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: blockchain_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Phorkus.Network.Grpc {
  public static partial class BlockchainService
  {
    static readonly string __ServiceName = "BlockchainService";

    static readonly grpc::Marshaller<global::Phorkus.Proto.HandshakeRequest> __Marshaller_HandshakeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.HandshakeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.HandshakeReply> __Marshaller_HandshakeReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.HandshakeReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.PingRequest> __Marshaller_PingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.PingRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.PingReply> __Marshaller_PingReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.PingReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetBlocksByHashesRequest> __Marshaller_GetBlocksByHashesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetBlocksByHashesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetBlocksByHashesReply> __Marshaller_GetBlocksByHashesReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetBlocksByHashesReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetBlocksByHeightRangeRequest> __Marshaller_GetBlocksByHeightRangeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetBlocksByHeightRangeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetBlocksByHeightRangeReply> __Marshaller_GetBlocksByHeightRangeReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetBlocksByHeightRangeReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetTransactionsByHashesRequest> __Marshaller_GetTransactionsByHashesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetTransactionsByHashesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetTransactionsByHashesReply> __Marshaller_GetTransactionsByHashesReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetTransactionsByHashesReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest> __Marshaller_GetTransactionHashesByBlockHeightRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply> __Marshaller_GetTransactionHashesByBlockHeightReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Phorkus.Proto.HandshakeRequest, global::Phorkus.Proto.HandshakeReply> __Method_Handshake = new grpc::Method<global::Phorkus.Proto.HandshakeRequest, global::Phorkus.Proto.HandshakeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Handshake",
        __Marshaller_HandshakeRequest,
        __Marshaller_HandshakeReply);

    static readonly grpc::Method<global::Phorkus.Proto.PingRequest, global::Phorkus.Proto.PingReply> __Method_Ping = new grpc::Method<global::Phorkus.Proto.PingRequest, global::Phorkus.Proto.PingReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_PingRequest,
        __Marshaller_PingReply);

    static readonly grpc::Method<global::Phorkus.Proto.GetBlocksByHashesRequest, global::Phorkus.Proto.GetBlocksByHashesReply> __Method_GetBlocksByHashes = new grpc::Method<global::Phorkus.Proto.GetBlocksByHashesRequest, global::Phorkus.Proto.GetBlocksByHashesReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetBlocksByHashes",
        __Marshaller_GetBlocksByHashesRequest,
        __Marshaller_GetBlocksByHashesReply);

    static readonly grpc::Method<global::Phorkus.Proto.GetBlocksByHeightRangeRequest, global::Phorkus.Proto.GetBlocksByHeightRangeReply> __Method_GetBlocksByHeightRange = new grpc::Method<global::Phorkus.Proto.GetBlocksByHeightRangeRequest, global::Phorkus.Proto.GetBlocksByHeightRangeReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetBlocksByHeightRange",
        __Marshaller_GetBlocksByHeightRangeRequest,
        __Marshaller_GetBlocksByHeightRangeReply);

    static readonly grpc::Method<global::Phorkus.Proto.GetTransactionsByHashesRequest, global::Phorkus.Proto.GetTransactionsByHashesReply> __Method_GetTransactionsByHashes = new grpc::Method<global::Phorkus.Proto.GetTransactionsByHashesRequest, global::Phorkus.Proto.GetTransactionsByHashesReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTransactionsByHashes",
        __Marshaller_GetTransactionsByHashesRequest,
        __Marshaller_GetTransactionsByHashesReply);

    static readonly grpc::Method<global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest, global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply> __Method_GetTransactionHashesByBlockHeight = new grpc::Method<global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest, global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTransactionHashesByBlockHeight",
        __Marshaller_GetTransactionHashesByBlockHeightRequest,
        __Marshaller_GetTransactionHashesByBlockHeightReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Phorkus.Network.Grpc.BlockchainServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BlockchainService</summary>
    public abstract partial class BlockchainServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.HandshakeReply> Handshake(global::Phorkus.Proto.HandshakeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.PingReply> Ping(global::Phorkus.Proto.PingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetBlocksByHashes(global::Phorkus.Proto.GetBlocksByHashesRequest request, grpc::IServerStreamWriter<global::Phorkus.Proto.GetBlocksByHashesReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetBlocksByHeightRange(global::Phorkus.Proto.GetBlocksByHeightRangeRequest request, grpc::IServerStreamWriter<global::Phorkus.Proto.GetBlocksByHeightRangeReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetTransactionsByHashes(global::Phorkus.Proto.GetTransactionsByHashesRequest request, grpc::IServerStreamWriter<global::Phorkus.Proto.GetTransactionsByHashesReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetTransactionHashesByBlockHeight(global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest request, grpc::IServerStreamWriter<global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BlockchainService</summary>
    public partial class BlockchainServiceClient : grpc::ClientBase<BlockchainServiceClient>
    {
      /// <summary>Creates a new client for BlockchainService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BlockchainServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BlockchainService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BlockchainServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BlockchainServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BlockchainServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Phorkus.Proto.HandshakeReply Handshake(global::Phorkus.Proto.HandshakeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Handshake(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.HandshakeReply Handshake(global::Phorkus.Proto.HandshakeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Handshake, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.HandshakeReply> HandshakeAsync(global::Phorkus.Proto.HandshakeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HandshakeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.HandshakeReply> HandshakeAsync(global::Phorkus.Proto.HandshakeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Handshake, null, options, request);
      }
      public virtual global::Phorkus.Proto.PingReply Ping(global::Phorkus.Proto.PingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.PingReply Ping(global::Phorkus.Proto.PingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.PingReply> PingAsync(global::Phorkus.Proto.PingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.PingReply> PingAsync(global::Phorkus.Proto.PingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetBlocksByHashesReply> GetBlocksByHashes(global::Phorkus.Proto.GetBlocksByHashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlocksByHashes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetBlocksByHashesReply> GetBlocksByHashes(global::Phorkus.Proto.GetBlocksByHashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetBlocksByHashes, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetBlocksByHeightRangeReply> GetBlocksByHeightRange(global::Phorkus.Proto.GetBlocksByHeightRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlocksByHeightRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetBlocksByHeightRangeReply> GetBlocksByHeightRange(global::Phorkus.Proto.GetBlocksByHeightRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetBlocksByHeightRange, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetTransactionsByHashesReply> GetTransactionsByHashes(global::Phorkus.Proto.GetTransactionsByHashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransactionsByHashes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetTransactionsByHashesReply> GetTransactionsByHashes(global::Phorkus.Proto.GetTransactionsByHashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTransactionsByHashes, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply> GetTransactionHashesByBlockHeight(global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransactionHashesByBlockHeight(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Phorkus.Proto.GetTransactionHashesByBlockHeightReply> GetTransactionHashesByBlockHeight(global::Phorkus.Proto.GetTransactionHashesByBlockHeightRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTransactionHashesByBlockHeight, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BlockchainServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BlockchainServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BlockchainServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Handshake, serviceImpl.Handshake)
          .AddMethod(__Method_Ping, serviceImpl.Ping)
          .AddMethod(__Method_GetBlocksByHashes, serviceImpl.GetBlocksByHashes)
          .AddMethod(__Method_GetBlocksByHeightRange, serviceImpl.GetBlocksByHeightRange)
          .AddMethod(__Method_GetTransactionsByHashes, serviceImpl.GetTransactionsByHashes)
          .AddMethod(__Method_GetTransactionHashesByBlockHeight, serviceImpl.GetTransactionHashesByBlockHeight).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BlockchainServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Handshake, serviceImpl.Handshake);
      serviceBinder.AddMethod(__Method_Ping, serviceImpl.Ping);
      serviceBinder.AddMethod(__Method_GetBlocksByHashes, serviceImpl.GetBlocksByHashes);
      serviceBinder.AddMethod(__Method_GetBlocksByHeightRange, serviceImpl.GetBlocksByHeightRange);
      serviceBinder.AddMethod(__Method_GetTransactionsByHashes, serviceImpl.GetTransactionsByHashes);
      serviceBinder.AddMethod(__Method_GetTransactionHashesByBlockHeight, serviceImpl.GetTransactionHashesByBlockHeight);
    }

  }
}
#endregion
