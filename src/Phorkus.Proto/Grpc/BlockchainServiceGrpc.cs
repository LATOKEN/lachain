// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: blockchain_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Phorkus.Proto.Grpc {
  public static partial class BlockchainService
  {
    static readonly string __ServiceName = "BlockchainService";

    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockByHeightRequest> __Marshaller_GetBlockByHeightRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockByHeightRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockByHeightReply> __Marshaller_GetBlockByHeightReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockByHeightReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockByHashRequest> __Marshaller_GetBlockByHashRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockByHashRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockByHashReply> __Marshaller_GetBlockByHashReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockByHashReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetTransactionByHashRequest> __Marshaller_GetTransactionByHashRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetTransactionByHashRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetTransactionByHashReply> __Marshaller_GetTransactionByHashReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetTransactionByHashReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockStatRequest> __Marshaller_GetBlockStatRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockStatRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Phorkus.Proto.Grpc.GetBlockStatReply> __Marshaller_GetBlockStatReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Phorkus.Proto.Grpc.GetBlockStatReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Phorkus.Proto.Grpc.GetBlockByHeightRequest, global::Phorkus.Proto.Grpc.GetBlockByHeightReply> __Method_GetBlockByHeight = new grpc::Method<global::Phorkus.Proto.Grpc.GetBlockByHeightRequest, global::Phorkus.Proto.Grpc.GetBlockByHeightReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlockByHeight",
        __Marshaller_GetBlockByHeightRequest,
        __Marshaller_GetBlockByHeightReply);

    static readonly grpc::Method<global::Phorkus.Proto.Grpc.GetBlockByHashRequest, global::Phorkus.Proto.Grpc.GetBlockByHashReply> __Method_GetBlockByHash = new grpc::Method<global::Phorkus.Proto.Grpc.GetBlockByHashRequest, global::Phorkus.Proto.Grpc.GetBlockByHashReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlockByHash",
        __Marshaller_GetBlockByHashRequest,
        __Marshaller_GetBlockByHashReply);

    static readonly grpc::Method<global::Phorkus.Proto.Grpc.GetTransactionByHashRequest, global::Phorkus.Proto.Grpc.GetTransactionByHashReply> __Method_GetTransactionByHash = new grpc::Method<global::Phorkus.Proto.Grpc.GetTransactionByHashRequest, global::Phorkus.Proto.Grpc.GetTransactionByHashReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTransactionByHash",
        __Marshaller_GetTransactionByHashRequest,
        __Marshaller_GetTransactionByHashReply);

    static readonly grpc::Method<global::Phorkus.Proto.Grpc.GetBlockStatRequest, global::Phorkus.Proto.Grpc.GetBlockStatReply> __Method_GetBlockStat = new grpc::Method<global::Phorkus.Proto.Grpc.GetBlockStatRequest, global::Phorkus.Proto.Grpc.GetBlockStatReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlockStat",
        __Marshaller_GetBlockStatRequest,
        __Marshaller_GetBlockStatReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Phorkus.Proto.Grpc.BlockchainServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BlockchainService</summary>
    public abstract partial class BlockchainServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.Grpc.GetBlockByHeightReply> GetBlockByHeight(global::Phorkus.Proto.Grpc.GetBlockByHeightRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.Grpc.GetBlockByHashReply> GetBlockByHash(global::Phorkus.Proto.Grpc.GetBlockByHashRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.Grpc.GetTransactionByHashReply> GetTransactionByHash(global::Phorkus.Proto.Grpc.GetTransactionByHashRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Phorkus.Proto.Grpc.GetBlockStatReply> GetBlockStat(global::Phorkus.Proto.Grpc.GetBlockStatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BlockchainService</summary>
    public partial class BlockchainServiceClient : grpc::ClientBase<BlockchainServiceClient>
    {
      /// <summary>Creates a new client for BlockchainService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BlockchainServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BlockchainService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BlockchainServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BlockchainServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BlockchainServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Phorkus.Proto.Grpc.GetBlockByHeightReply GetBlockByHeight(global::Phorkus.Proto.Grpc.GetBlockByHeightRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockByHeight(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.Grpc.GetBlockByHeightReply GetBlockByHeight(global::Phorkus.Proto.Grpc.GetBlockByHeightRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlockByHeight, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockByHeightReply> GetBlockByHeightAsync(global::Phorkus.Proto.Grpc.GetBlockByHeightRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockByHeightAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockByHeightReply> GetBlockByHeightAsync(global::Phorkus.Proto.Grpc.GetBlockByHeightRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlockByHeight, null, options, request);
      }
      public virtual global::Phorkus.Proto.Grpc.GetBlockByHashReply GetBlockByHash(global::Phorkus.Proto.Grpc.GetBlockByHashRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockByHash(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.Grpc.GetBlockByHashReply GetBlockByHash(global::Phorkus.Proto.Grpc.GetBlockByHashRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlockByHash, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockByHashReply> GetBlockByHashAsync(global::Phorkus.Proto.Grpc.GetBlockByHashRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockByHashAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockByHashReply> GetBlockByHashAsync(global::Phorkus.Proto.Grpc.GetBlockByHashRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlockByHash, null, options, request);
      }
      public virtual global::Phorkus.Proto.Grpc.GetTransactionByHashReply GetTransactionByHash(global::Phorkus.Proto.Grpc.GetTransactionByHashRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransactionByHash(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.Grpc.GetTransactionByHashReply GetTransactionByHash(global::Phorkus.Proto.Grpc.GetTransactionByHashRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTransactionByHash, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetTransactionByHashReply> GetTransactionByHashAsync(global::Phorkus.Proto.Grpc.GetTransactionByHashRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransactionByHashAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetTransactionByHashReply> GetTransactionByHashAsync(global::Phorkus.Proto.Grpc.GetTransactionByHashRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTransactionByHash, null, options, request);
      }
      public virtual global::Phorkus.Proto.Grpc.GetBlockStatReply GetBlockStat(global::Phorkus.Proto.Grpc.GetBlockStatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockStat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Phorkus.Proto.Grpc.GetBlockStatReply GetBlockStat(global::Phorkus.Proto.Grpc.GetBlockStatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlockStat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockStatReply> GetBlockStatAsync(global::Phorkus.Proto.Grpc.GetBlockStatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockStatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Phorkus.Proto.Grpc.GetBlockStatReply> GetBlockStatAsync(global::Phorkus.Proto.Grpc.GetBlockStatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlockStat, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BlockchainServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BlockchainServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BlockchainServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetBlockByHeight, serviceImpl.GetBlockByHeight)
          .AddMethod(__Method_GetBlockByHash, serviceImpl.GetBlockByHash)
          .AddMethod(__Method_GetTransactionByHash, serviceImpl.GetTransactionByHash)
          .AddMethod(__Method_GetBlockStat, serviceImpl.GetBlockStat).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BlockchainServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetBlockByHeight, serviceImpl.GetBlockByHeight);
      serviceBinder.AddMethod(__Method_GetBlockByHash, serviceImpl.GetBlockByHash);
      serviceBinder.AddMethod(__Method_GetTransactionByHash, serviceImpl.GetTransactionByHash);
      serviceBinder.AddMethod(__Method_GetBlockStat, serviceImpl.GetBlockStat);
    }

  }
}
#endregion
