// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: consensus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from consensus.proto</summary>
  public static partial class ConsensusReflection {

    #region Descriptor
    /// <summary>File descriptor for consensus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConsensusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9jb25zZW5zdXMucHJvdG8aDWRlZmF1bHQucHJvdG8iYQoJVmFsaWRhdG9y",
            "Eg8KB3ZlcnNpb24YASABKA0SGwoJcHJldl9oYXNoGAIgASgLMgguVUludDI1",
            "NhIXCg92YWxpZGF0b3JfaW5kZXgYAyABKA0SDQoFZXBvY2gYBCABKA0iQgoP",
            "QmluYXJ5QnJvYWRjYXN0Eg0KBXZhbHVlGAEgASgIEhEKCWFncmVlbWVudBgC",
            "IAEoDRINCgVyb3VuZBgDIAEoDSJqChBDb25zZW5zdXNNZXNzYWdlEh0KCXZh",
            "bGlkYXRvchgBIAEoCzIKLlZhbGlkYXRvchIsChBiaW5hcnlfYnJvYWRjYXN0",
            "GAIgASgLMhAuQmluYXJ5QnJvYWRjYXN0SABCCQoHcGF5bG9hZEIjChFjb20u",
            "bGF0b2tlbi5wcm90b6oCDVBob3JrdXMuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Validator), global::Phorkus.Proto.Validator.Parser, new[]{ "Version", "PrevHash", "ValidatorIndex", "Epoch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BinaryBroadcast), global::Phorkus.Proto.BinaryBroadcast.Parser, new[]{ "Value", "Agreement", "Round" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.ConsensusMessage), global::Phorkus.Proto.ConsensusMessage.Parser, new[]{ "Validator", "BinaryBroadcast" }, new[]{ "Payload" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Validator : pb::IMessage<Validator> {
    private static readonly pb::MessageParser<Validator> _parser = new pb::MessageParser<Validator>(() => new Validator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Validator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator(Validator other) : this() {
      version_ = other.version_;
      prevHash_ = other.prevHash_ != null ? other.prevHash_.Clone() : null;
      validatorIndex_ = other.validatorIndex_;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator Clone() {
      return new Validator(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "prev_hash" field.</summary>
    public const int PrevHashFieldNumber = 2;
    private global::Phorkus.Proto.UInt256 prevHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 PrevHash {
      get { return prevHash_; }
      set {
        prevHash_ = value;
      }
    }

    /// <summary>Field number for the "validator_index" field.</summary>
    public const int ValidatorIndexFieldNumber = 3;
    private uint validatorIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ValidatorIndex {
      get { return validatorIndex_; }
      set {
        validatorIndex_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 4;
    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Validator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Validator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(PrevHash, other.PrevHash)) return false;
      if (ValidatorIndex != other.ValidatorIndex) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (prevHash_ != null) hash ^= PrevHash.GetHashCode();
      if (ValidatorIndex != 0) hash ^= ValidatorIndex.GetHashCode();
      if (Epoch != 0) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (prevHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PrevHash);
      }
      if (ValidatorIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ValidatorIndex);
      }
      if (Epoch != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (prevHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevHash);
      }
      if (ValidatorIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValidatorIndex);
      }
      if (Epoch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Validator other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.prevHash_ != null) {
        if (prevHash_ == null) {
          prevHash_ = new global::Phorkus.Proto.UInt256();
        }
        PrevHash.MergeFrom(other.PrevHash);
      }
      if (other.ValidatorIndex != 0) {
        ValidatorIndex = other.ValidatorIndex;
      }
      if (other.Epoch != 0) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            if (prevHash_ == null) {
              prevHash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(prevHash_);
            break;
          }
          case 24: {
            ValidatorIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BinaryBroadcast : pb::IMessage<BinaryBroadcast> {
    private static readonly pb::MessageParser<BinaryBroadcast> _parser = new pb::MessageParser<BinaryBroadcast>(() => new BinaryBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BinaryBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcast(BinaryBroadcast other) : this() {
      value_ = other.value_;
      agreement_ = other.agreement_;
      round_ = other.round_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcast Clone() {
      return new BinaryBroadcast(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "agreement" field.</summary>
    public const int AgreementFieldNumber = 2;
    private uint agreement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Agreement {
      get { return agreement_; }
      set {
        agreement_ = value;
      }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 3;
    private uint round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BinaryBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BinaryBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Agreement != other.Agreement) return false;
      if (Round != other.Round) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (Agreement != 0) hash ^= Agreement.GetHashCode();
      if (Round != 0) hash ^= Round.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (Agreement != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Agreement);
      }
      if (Round != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Round);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (Agreement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Agreement);
      }
      if (Round != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Round);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BinaryBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      if (other.Agreement != 0) {
        Agreement = other.Agreement;
      }
      if (other.Round != 0) {
        Round = other.Round;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
          case 16: {
            Agreement = input.ReadUInt32();
            break;
          }
          case 24: {
            Round = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsensusMessage : pb::IMessage<ConsensusMessage> {
    private static readonly pb::MessageParser<ConsensusMessage> _parser = new pb::MessageParser<ConsensusMessage>(() => new ConsensusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsensusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage(ConsensusMessage other) : this() {
      validator_ = other.validator_ != null ? other.validator_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.BinaryBroadcast:
          BinaryBroadcast = other.BinaryBroadcast.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage Clone() {
      return new ConsensusMessage(this);
    }

    /// <summary>Field number for the "validator" field.</summary>
    public const int ValidatorFieldNumber = 1;
    private global::Phorkus.Proto.Validator validator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Validator Validator {
      get { return validator_; }
      set {
        validator_ = value;
      }
    }

    /// <summary>Field number for the "binary_broadcast" field.</summary>
    public const int BinaryBroadcastFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BinaryBroadcast BinaryBroadcast {
      get { return payloadCase_ == PayloadOneofCase.BinaryBroadcast ? (global::Phorkus.Proto.BinaryBroadcast) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BinaryBroadcast;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      BinaryBroadcast = 2,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsensusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsensusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Validator, other.Validator)) return false;
      if (!object.Equals(BinaryBroadcast, other.BinaryBroadcast)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (validator_ != null) hash ^= Validator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) hash ^= BinaryBroadcast.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (validator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Validator);
      }
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
        output.WriteRawTag(18);
        output.WriteMessage(BinaryBroadcast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (validator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Validator);
      }
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BinaryBroadcast);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsensusMessage other) {
      if (other == null) {
        return;
      }
      if (other.validator_ != null) {
        if (validator_ == null) {
          validator_ = new global::Phorkus.Proto.Validator();
        }
        Validator.MergeFrom(other.Validator);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.BinaryBroadcast:
          if (BinaryBroadcast == null) {
            BinaryBroadcast = new global::Phorkus.Proto.BinaryBroadcast();
          }
          BinaryBroadcast.MergeFrom(other.BinaryBroadcast);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (validator_ == null) {
              validator_ = new global::Phorkus.Proto.Validator();
            }
            input.ReadMessage(validator_);
            break;
          }
          case 18: {
            global::Phorkus.Proto.BinaryBroadcast subBuilder = new global::Phorkus.Proto.BinaryBroadcast();
            if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
              subBuilder.MergeFrom(BinaryBroadcast);
            }
            input.ReadMessage(subBuilder);
            BinaryBroadcast = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
