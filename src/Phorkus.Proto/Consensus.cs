// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: consensus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from consensus.proto</summary>
  public static partial class ConsensusReflection {

    #region Descriptor
    /// <summary>File descriptor for consensus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConsensusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9jb25zZW5zdXMucHJvdG8aDWRlZmF1bHQucHJvdG8iXwoJVmFsaWRhdG9y",
            "Eg8KB3ZlcnNpb24YASABKA0SGwoJcHJldl9oYXNoGAIgASgLMgguVUludDI1",
            "NhIXCg92YWxpZGF0b3JfaW5kZXgYAyABKA0SCwoDZXJhGAQgASgNIkkKFkJp",
            "bmFyeUJyb2FkY2FzdFBheWxvYWQSDQoFdmFsdWUYASABKAgSEQoJYWdyZWVt",
            "ZW50GAIgASgNEg0KBWVwb2NoGAMgASgNIk4KEUNvbW1vbkNvaW5QYXlsb2Fk",
            "EhcKD3NpZ25hdHVyZV9zaGFyZRgBIAEoDBIRCglhZ3JlZW1lbnQYAiABKA0S",
            "DQoFZXBvY2gYAyABKA0inAEKEENvbnNlbnN1c01lc3NhZ2USHQoJdmFsaWRh",
            "dG9yGAEgASgLMgouVmFsaWRhdG9yEjMKEGJpbmFyeV9icm9hZGNhc3QYAiAB",
            "KAsyFy5CaW5hcnlCcm9hZGNhc3RQYXlsb2FkSAASKQoLY29tbW9uX2NvaW4Y",
            "AyABKAsyEi5Db21tb25Db2luUGF5bG9hZEgAQgkKB3BheWxvYWRCIwoRY29t",
            "LmxhdG9rZW4ucHJvdG+qAg1QaG9ya3VzLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Validator), global::Phorkus.Proto.Validator.Parser, new[]{ "Version", "PrevHash", "ValidatorIndex", "Era" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BinaryBroadcastPayload), global::Phorkus.Proto.BinaryBroadcastPayload.Parser, new[]{ "Value", "Agreement", "Epoch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.CommonCoinPayload), global::Phorkus.Proto.CommonCoinPayload.Parser, new[]{ "SignatureShare", "Agreement", "Epoch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.ConsensusMessage), global::Phorkus.Proto.ConsensusMessage.Parser, new[]{ "Validator", "BinaryBroadcast", "CommonCoin" }, new[]{ "Payload" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Validator : pb::IMessage<Validator> {
    private static readonly pb::MessageParser<Validator> _parser = new pb::MessageParser<Validator>(() => new Validator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Validator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator(Validator other) : this() {
      version_ = other.version_;
      prevHash_ = other.prevHash_ != null ? other.prevHash_.Clone() : null;
      validatorIndex_ = other.validatorIndex_;
      era_ = other.era_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Validator Clone() {
      return new Validator(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "prev_hash" field.</summary>
    public const int PrevHashFieldNumber = 2;
    private global::Phorkus.Proto.UInt256 prevHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 PrevHash {
      get { return prevHash_; }
      set {
        prevHash_ = value;
      }
    }

    /// <summary>Field number for the "validator_index" field.</summary>
    public const int ValidatorIndexFieldNumber = 3;
    private uint validatorIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ValidatorIndex {
      get { return validatorIndex_; }
      set {
        validatorIndex_ = value;
      }
    }

    /// <summary>Field number for the "era" field.</summary>
    public const int EraFieldNumber = 4;
    private uint era_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Era {
      get { return era_; }
      set {
        era_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Validator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Validator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(PrevHash, other.PrevHash)) return false;
      if (ValidatorIndex != other.ValidatorIndex) return false;
      if (Era != other.Era) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (prevHash_ != null) hash ^= PrevHash.GetHashCode();
      if (ValidatorIndex != 0) hash ^= ValidatorIndex.GetHashCode();
      if (Era != 0) hash ^= Era.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (prevHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PrevHash);
      }
      if (ValidatorIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ValidatorIndex);
      }
      if (Era != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Era);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (prevHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevHash);
      }
      if (ValidatorIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValidatorIndex);
      }
      if (Era != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Era);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Validator other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.prevHash_ != null) {
        if (prevHash_ == null) {
          prevHash_ = new global::Phorkus.Proto.UInt256();
        }
        PrevHash.MergeFrom(other.PrevHash);
      }
      if (other.ValidatorIndex != 0) {
        ValidatorIndex = other.ValidatorIndex;
      }
      if (other.Era != 0) {
        Era = other.Era;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            if (prevHash_ == null) {
              prevHash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(prevHash_);
            break;
          }
          case 24: {
            ValidatorIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            Era = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BinaryBroadcastPayload : pb::IMessage<BinaryBroadcastPayload> {
    private static readonly pb::MessageParser<BinaryBroadcastPayload> _parser = new pb::MessageParser<BinaryBroadcastPayload>(() => new BinaryBroadcastPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BinaryBroadcastPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcastPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcastPayload(BinaryBroadcastPayload other) : this() {
      value_ = other.value_;
      agreement_ = other.agreement_;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryBroadcastPayload Clone() {
      return new BinaryBroadcastPayload(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "agreement" field.</summary>
    public const int AgreementFieldNumber = 2;
    private uint agreement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Agreement {
      get { return agreement_; }
      set {
        agreement_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 3;
    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BinaryBroadcastPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BinaryBroadcastPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Agreement != other.Agreement) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (Agreement != 0) hash ^= Agreement.GetHashCode();
      if (Epoch != 0) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (Agreement != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Agreement);
      }
      if (Epoch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (Agreement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Agreement);
      }
      if (Epoch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BinaryBroadcastPayload other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      if (other.Agreement != 0) {
        Agreement = other.Agreement;
      }
      if (other.Epoch != 0) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
          case 16: {
            Agreement = input.ReadUInt32();
            break;
          }
          case 24: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommonCoinPayload : pb::IMessage<CommonCoinPayload> {
    private static readonly pb::MessageParser<CommonCoinPayload> _parser = new pb::MessageParser<CommonCoinPayload>(() => new CommonCoinPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonCoinPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonCoinPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonCoinPayload(CommonCoinPayload other) : this() {
      signatureShare_ = other.signatureShare_;
      agreement_ = other.agreement_;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonCoinPayload Clone() {
      return new CommonCoinPayload(this);
    }

    /// <summary>Field number for the "signature_share" field.</summary>
    public const int SignatureShareFieldNumber = 1;
    private pb::ByteString signatureShare_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SignatureShare {
      get { return signatureShare_; }
      set {
        signatureShare_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "agreement" field.</summary>
    public const int AgreementFieldNumber = 2;
    private uint agreement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Agreement {
      get { return agreement_; }
      set {
        agreement_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 3;
    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonCoinPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonCoinPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignatureShare != other.SignatureShare) return false;
      if (Agreement != other.Agreement) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignatureShare.Length != 0) hash ^= SignatureShare.GetHashCode();
      if (Agreement != 0) hash ^= Agreement.GetHashCode();
      if (Epoch != 0) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignatureShare.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SignatureShare);
      }
      if (Agreement != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Agreement);
      }
      if (Epoch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignatureShare.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignatureShare);
      }
      if (Agreement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Agreement);
      }
      if (Epoch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonCoinPayload other) {
      if (other == null) {
        return;
      }
      if (other.SignatureShare.Length != 0) {
        SignatureShare = other.SignatureShare;
      }
      if (other.Agreement != 0) {
        Agreement = other.Agreement;
      }
      if (other.Epoch != 0) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignatureShare = input.ReadBytes();
            break;
          }
          case 16: {
            Agreement = input.ReadUInt32();
            break;
          }
          case 24: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsensusMessage : pb::IMessage<ConsensusMessage> {
    private static readonly pb::MessageParser<ConsensusMessage> _parser = new pb::MessageParser<ConsensusMessage>(() => new ConsensusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsensusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.ConsensusReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage(ConsensusMessage other) : this() {
      validator_ = other.validator_ != null ? other.validator_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.BinaryBroadcast:
          BinaryBroadcast = other.BinaryBroadcast.Clone();
          break;
        case PayloadOneofCase.CommonCoin:
          CommonCoin = other.CommonCoin.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage Clone() {
      return new ConsensusMessage(this);
    }

    /// <summary>Field number for the "validator" field.</summary>
    public const int ValidatorFieldNumber = 1;
    private global::Phorkus.Proto.Validator validator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Validator Validator {
      get { return validator_; }
      set {
        validator_ = value;
      }
    }

    /// <summary>Field number for the "binary_broadcast" field.</summary>
    public const int BinaryBroadcastFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BinaryBroadcastPayload BinaryBroadcast {
      get { return payloadCase_ == PayloadOneofCase.BinaryBroadcast ? (global::Phorkus.Proto.BinaryBroadcastPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BinaryBroadcast;
      }
    }

    /// <summary>Field number for the "common_coin" field.</summary>
    public const int CommonCoinFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.CommonCoinPayload CommonCoin {
      get { return payloadCase_ == PayloadOneofCase.CommonCoin ? (global::Phorkus.Proto.CommonCoinPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CommonCoin;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      BinaryBroadcast = 2,
      CommonCoin = 3,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsensusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsensusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Validator, other.Validator)) return false;
      if (!object.Equals(BinaryBroadcast, other.BinaryBroadcast)) return false;
      if (!object.Equals(CommonCoin, other.CommonCoin)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (validator_ != null) hash ^= Validator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) hash ^= BinaryBroadcast.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CommonCoin) hash ^= CommonCoin.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (validator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Validator);
      }
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
        output.WriteRawTag(18);
        output.WriteMessage(BinaryBroadcast);
      }
      if (payloadCase_ == PayloadOneofCase.CommonCoin) {
        output.WriteRawTag(26);
        output.WriteMessage(CommonCoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (validator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Validator);
      }
      if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BinaryBroadcast);
      }
      if (payloadCase_ == PayloadOneofCase.CommonCoin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommonCoin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsensusMessage other) {
      if (other == null) {
        return;
      }
      if (other.validator_ != null) {
        if (validator_ == null) {
          validator_ = new global::Phorkus.Proto.Validator();
        }
        Validator.MergeFrom(other.Validator);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.BinaryBroadcast:
          if (BinaryBroadcast == null) {
            BinaryBroadcast = new global::Phorkus.Proto.BinaryBroadcastPayload();
          }
          BinaryBroadcast.MergeFrom(other.BinaryBroadcast);
          break;
        case PayloadOneofCase.CommonCoin:
          if (CommonCoin == null) {
            CommonCoin = new global::Phorkus.Proto.CommonCoinPayload();
          }
          CommonCoin.MergeFrom(other.CommonCoin);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (validator_ == null) {
              validator_ = new global::Phorkus.Proto.Validator();
            }
            input.ReadMessage(validator_);
            break;
          }
          case 18: {
            global::Phorkus.Proto.BinaryBroadcastPayload subBuilder = new global::Phorkus.Proto.BinaryBroadcastPayload();
            if (payloadCase_ == PayloadOneofCase.BinaryBroadcast) {
              subBuilder.MergeFrom(BinaryBroadcast);
            }
            input.ReadMessage(subBuilder);
            BinaryBroadcast = subBuilder;
            break;
          }
          case 26: {
            global::Phorkus.Proto.CommonCoinPayload subBuilder = new global::Phorkus.Proto.CommonCoinPayload();
            if (payloadCase_ == PayloadOneofCase.CommonCoin) {
              subBuilder.MergeFrom(CommonCoin);
            }
            input.ReadMessage(subBuilder);
            CommonCoin = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
