// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: node.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from node.proto</summary>
  public static partial class NodeReflection {

    #region Descriptor
    /// <summary>File descriptor for node.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgpub2RlLnByb3RvGg1kZWZhdWx0LnByb3RvIo8BCgROb2RlEg8KB3ZlcnNp",
            "b24YASABKA0SEQoJdGltZXN0YW1wGAIgASgEEg8KB2FkZHJlc3MYAyABKAkS",
            "HgoKcHVibGljX2tleRgEIAEoCzIKLlB1YmxpY0tleRINCgVub25jZRgFIAEo",
            "DRIUCgxibG9ja19oZWlnaHQYBiABKAQSDQoFYWdlbnQYByABKAlCIwoRY29t",
            "LmxhdG9rZW4ucHJvdG+qAg1QaG9ya3VzLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Node), global::Phorkus.Proto.Node.Parser, new[]{ "Version", "Timestamp", "Address", "PublicKey", "Nonce", "BlockHeight", "Agent" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.NodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      version_ = other.version_;
      timestamp_ = other.timestamp_;
      address_ = other.address_;
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      nonce_ = other.nonce_;
      blockHeight_ = other.blockHeight_;
      agent_ = other.agent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 4;
    private global::Phorkus.Proto.PublicKey publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.PublicKey PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 5;
    private uint nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 6;
    private ulong blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "agent" field.</summary>
    public const int AgentFieldNumber = 7;
    private string agent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Agent {
      get { return agent_; }
      set {
        agent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Address != other.Address) return false;
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (Nonce != other.Nonce) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (Agent != other.Agent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (Nonce != 0) hash ^= Nonce.GetHashCode();
      if (BlockHeight != 0UL) hash ^= BlockHeight.GetHashCode();
      if (Agent.Length != 0) hash ^= Agent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Address);
      }
      if (publicKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PublicKey);
      }
      if (Nonce != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Nonce);
      }
      if (BlockHeight != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(BlockHeight);
      }
      if (Agent.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Agent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (Nonce != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nonce);
      }
      if (BlockHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockHeight);
      }
      if (Agent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Agent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          publicKey_ = new global::Phorkus.Proto.PublicKey();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.Nonce != 0) {
        Nonce = other.Nonce;
      }
      if (other.BlockHeight != 0UL) {
        BlockHeight = other.BlockHeight;
      }
      if (other.Agent.Length != 0) {
        Agent = other.Agent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            Address = input.ReadString();
            break;
          }
          case 34: {
            if (publicKey_ == null) {
              publicKey_ = new global::Phorkus.Proto.PublicKey();
            }
            input.ReadMessage(publicKey_);
            break;
          }
          case 40: {
            Nonce = input.ReadUInt32();
            break;
          }
          case 48: {
            BlockHeight = input.ReadUInt64();
            break;
          }
          case 58: {
            Agent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
