// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: transaction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from transaction.proto</summary>
  public static partial class TransactionReflection {

    #region Descriptor
    /// <summary>File descriptor for transaction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF0cmFuc2FjdGlvbi5wcm90bxoLYXNzZXQucHJvdG8aDWRlZmF1bHQucHJv",
            "dG8ibQoTQ29udHJhY3RUcmFuc2FjdGlvbhIXCgVhc3NldBgBIAEoCzIILlVJ",
            "bnQxNjASFAoCdG8YAiABKAsyCC5VSW50MTYwEhcKBXZhbHVlGAMgASgLMggu",
            "VUludDI1NhIOCgZzY3JpcHQYBCABKAwiWwoQSXNzdWVUcmFuc2FjdGlvbhIX",
            "CgVhc3NldBgBIAEoCzIILlVJbnQxNjASGAoGc3VwcGx5GAIgASgLMgguVUlu",
            "dDI1NhIUCgJ0bxgDIAEoCzIILlVJbnQxNjAiPAoSUHVibGlzaFRyYW5zYWN0",
            "aW9uEhYKBGhhc2gYASABKAsyCC5VSW50MTYwEg4KBnNjcmlwdBgCIAEoDCKc",
            "AQoTUmVnaXN0ZXJUcmFuc2FjdGlvbhIYCgR0eXBlGAEgASgOMgouQXNzZXRU",
            "eXBlEgwKBG5hbWUYAiABKAkSGAoGc3VwcGx5GAMgASgLMgguVUludDI1NhIQ",
            "CghkZWNpbWFscxgEIAEoDRIXCgVvd25lchgFIAEoCzIILlVJbnQxNjASGAoG",
            "bWludGVyGAYgASgLMgguVUludDE2MCIrChBNaW5lclRyYW5zYWN0aW9uEhcK",
            "BW1pbmVyGAEgASgLMgguVUludDE2MCK7AQoQVHJhbnNhY3Rpb25TdGF0ZRIz",
            "CgZzdGF0dXMYASABKA4yIy5UcmFuc2FjdGlvblN0YXRlLlRyYW5zYWN0aW9u",
            "U3RhdHVzInIKEVRyYW5zYWN0aW9uU3RhdHVzEhwKGFRSQU5TQUNUSU9OX1NU",
            "QVRVU19UQUtFThAAEiAKHFRSQU5TQUNUSU9OX1NUQVRVU19DT05GSVJNRUQQ",
            "ARIdChlUUkFOU0FDVElPTl9TVEFUVVNfRkFJTEVEEAIi3wIKC1RyYW5zYWN0",
            "aW9uEh4KBHR5cGUYASABKA4yEC5UcmFuc2FjdGlvblR5cGUSDwoHdmVyc2lv",
            "bhgCIAEoDRINCgVmbGFncxgDIAEoBBIWCgRmcm9tGAQgASgLMgguVUludDE2",
            "MBINCgVub25jZRgFIAEoBBIoCghjb250cmFjdBgGIAEoCzIULkNvbnRyYWN0",
            "VHJhbnNhY3Rpb25IABIiCgVpc3N1ZRgHIAEoCzIRLklzc3VlVHJhbnNhY3Rp",
            "b25IABImCgdwdWJsaXNoGAggASgLMhMuUHVibGlzaFRyYW5zYWN0aW9uSAAS",
            "KAoIcmVnaXN0ZXIYCSABKAsyFC5SZWdpc3RlclRyYW5zYWN0aW9uSAASIgoF",
            "bWluZXIYCiABKAsyES5NaW5lclRyYW5zYWN0aW9uSAASHQoJc2lnbmF0dXJl",
            "GAsgASgLMgouU2lnbmF0dXJlQgYKBGRhdGEiTgoRU2lnbmVkVHJhbnNhY3Rp",
            "b24SIQoLdHJhbnNhY3Rpb24YASABKAsyDC5UcmFuc2FjdGlvbhIWCgRoYXNo",
            "GAIgASgLMgguVUludDI1NiriAQoPVHJhbnNhY3Rpb25UeXBlEhoKFlRSQU5T",
            "QUNUSU9OX1RZUEVfTUlORVIQABIdChlUUkFOU0FDVElPTl9UWVBFX1JFR0lT",
            "VEVSEAESGgoWVFJBTlNBQ1RJT05fVFlQRV9JU1NVRRACEh0KGVRSQU5TQUNU",
            "SU9OX1RZUEVfQ09OVFJBQ1QQAxIcChhUUkFOU0FDVElPTl9UWVBFX1BVQkxJ",
            "U0gQBBIcChhUUkFOU0FDVElPTl9UWVBFX0RFUE9TSVQQBRIdChlUUkFOU0FD",
            "VElPTl9UWVBFX1dJVEhEUkFXEAYqLAoPVHJhbnNhY3Rpb25GbGFnEhkKFVRS",
            "QU5TQUNUSU9OX0ZMQUdfTk9ORRAAQhCqAg1QaG9ya3VzLlByb3RvYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.AssetReflection.Descriptor, global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Proto.TransactionType), typeof(global::Phorkus.Proto.TransactionFlag), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.ContractTransaction), global::Phorkus.Proto.ContractTransaction.Parser, new[]{ "Asset", "To", "Value", "Script" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.IssueTransaction), global::Phorkus.Proto.IssueTransaction.Parser, new[]{ "Asset", "Supply", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.PublishTransaction), global::Phorkus.Proto.PublishTransaction.Parser, new[]{ "Hash", "Script" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.RegisterTransaction), global::Phorkus.Proto.RegisterTransaction.Parser, new[]{ "Type", "Name", "Supply", "Decimals", "Owner", "Minter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.MinerTransaction), global::Phorkus.Proto.MinerTransaction.Parser, new[]{ "Miner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.TransactionState), global::Phorkus.Proto.TransactionState.Parser, new[]{ "Status" }, null, new[]{ typeof(global::Phorkus.Proto.TransactionState.Types.TransactionStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.Transaction), global::Phorkus.Proto.Transaction.Parser, new[]{ "Type", "Version", "Flags", "From", "Nonce", "Contract", "Issue", "Publish", "Register", "Miner", "Signature" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.SignedTransaction), global::Phorkus.Proto.SignedTransaction.Parser, new[]{ "Transaction", "Hash" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TransactionType {
    [pbr::OriginalName("TRANSACTION_TYPE_MINER")] Miner = 0,
    [pbr::OriginalName("TRANSACTION_TYPE_REGISTER")] Register = 1,
    [pbr::OriginalName("TRANSACTION_TYPE_ISSUE")] Issue = 2,
    [pbr::OriginalName("TRANSACTION_TYPE_CONTRACT")] Contract = 3,
    [pbr::OriginalName("TRANSACTION_TYPE_PUBLISH")] Publish = 4,
    [pbr::OriginalName("TRANSACTION_TYPE_DEPOSIT")] Deposit = 5,
    [pbr::OriginalName("TRANSACTION_TYPE_WITHDRAW")] Withdraw = 6,
  }

  public enum TransactionFlag {
    [pbr::OriginalName("TRANSACTION_FLAG_NONE")] None = 0,
  }

  #endregion

  #region Messages
  public sealed partial class ContractTransaction : pb::IMessage<ContractTransaction> {
    private static readonly pb::MessageParser<ContractTransaction> _parser = new pb::MessageParser<ContractTransaction>(() => new ContractTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTransaction(ContractTransaction other) : this() {
      asset_ = other.asset_ != null ? other.asset_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      script_ = other.script_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTransaction Clone() {
      return new ContractTransaction(this);
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 asset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Asset {
      get { return asset_; }
      set {
        asset_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Phorkus.Proto.UInt160 to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::Phorkus.Proto.UInt256 value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "script" field.</summary>
    public const int ScriptFieldNumber = 4;
    private pb::ByteString script_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Script {
      get { return script_; }
      set {
        script_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Asset, other.Asset)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (Script != other.Script) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (asset_ != null) hash ^= Asset.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Script.Length != 0) hash ^= Script.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (asset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Asset);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (Script.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Script);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (asset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Asset);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Script.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Script);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTransaction other) {
      if (other == null) {
        return;
      }
      if (other.asset_ != null) {
        if (asset_ == null) {
          asset_ = new global::Phorkus.Proto.UInt160();
        }
        Asset.MergeFrom(other.Asset);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Phorkus.Proto.UInt160();
        }
        To.MergeFrom(other.To);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Phorkus.Proto.UInt256();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Script.Length != 0) {
        Script = other.Script;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (asset_ == null) {
              asset_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(asset_);
            break;
          }
          case 18: {
            if (to_ == null) {
              to_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(to_);
            break;
          }
          case 26: {
            if (value_ == null) {
              value_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(value_);
            break;
          }
          case 34: {
            Script = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IssueTransaction : pb::IMessage<IssueTransaction> {
    private static readonly pb::MessageParser<IssueTransaction> _parser = new pb::MessageParser<IssueTransaction>(() => new IssueTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IssueTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueTransaction(IssueTransaction other) : this() {
      asset_ = other.asset_ != null ? other.asset_.Clone() : null;
      supply_ = other.supply_ != null ? other.supply_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueTransaction Clone() {
      return new IssueTransaction(this);
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 asset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Asset {
      get { return asset_; }
      set {
        asset_ = value;
      }
    }

    /// <summary>Field number for the "supply" field.</summary>
    public const int SupplyFieldNumber = 2;
    private global::Phorkus.Proto.UInt256 supply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Supply {
      get { return supply_; }
      set {
        supply_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private global::Phorkus.Proto.UInt160 to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IssueTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IssueTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Asset, other.Asset)) return false;
      if (!object.Equals(Supply, other.Supply)) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (asset_ != null) hash ^= Asset.GetHashCode();
      if (supply_ != null) hash ^= Supply.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (asset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Asset);
      }
      if (supply_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Supply);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (asset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Asset);
      }
      if (supply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supply);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IssueTransaction other) {
      if (other == null) {
        return;
      }
      if (other.asset_ != null) {
        if (asset_ == null) {
          asset_ = new global::Phorkus.Proto.UInt160();
        }
        Asset.MergeFrom(other.Asset);
      }
      if (other.supply_ != null) {
        if (supply_ == null) {
          supply_ = new global::Phorkus.Proto.UInt256();
        }
        Supply.MergeFrom(other.Supply);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Phorkus.Proto.UInt160();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (asset_ == null) {
              asset_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(asset_);
            break;
          }
          case 18: {
            if (supply_ == null) {
              supply_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(supply_);
            break;
          }
          case 26: {
            if (to_ == null) {
              to_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(to_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PublishTransaction : pb::IMessage<PublishTransaction> {
    private static readonly pb::MessageParser<PublishTransaction> _parser = new pb::MessageParser<PublishTransaction>(() => new PublishTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishTransaction(PublishTransaction other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      script_ = other.script_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishTransaction Clone() {
      return new PublishTransaction(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "script" field.</summary>
    public const int ScriptFieldNumber = 2;
    private pb::ByteString script_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Script {
      get { return script_; }
      set {
        script_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      if (Script != other.Script) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (Script.Length != 0) hash ^= Script.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (Script.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Script);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (Script.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Script);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishTransaction other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          hash_ = new global::Phorkus.Proto.UInt160();
        }
        Hash.MergeFrom(other.Hash);
      }
      if (other.Script.Length != 0) {
        Script = other.Script;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              hash_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(hash_);
            break;
          }
          case 18: {
            Script = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterTransaction : pb::IMessage<RegisterTransaction> {
    private static readonly pb::MessageParser<RegisterTransaction> _parser = new pb::MessageParser<RegisterTransaction>(() => new RegisterTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTransaction(RegisterTransaction other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      supply_ = other.supply_ != null ? other.supply_.Clone() : null;
      decimals_ = other.decimals_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      minter_ = other.minter_ != null ? other.minter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTransaction Clone() {
      return new RegisterTransaction(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Phorkus.Proto.AssetType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.AssetType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supply" field.</summary>
    public const int SupplyFieldNumber = 3;
    private global::Phorkus.Proto.UInt256 supply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Supply {
      get { return supply_; }
      set {
        supply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 4;
    private uint decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private global::Phorkus.Proto.UInt160 owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "minter" field.</summary>
    public const int MinterFieldNumber = 6;
    private global::Phorkus.Proto.UInt160 minter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Minter {
      get { return minter_; }
      set {
        minter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Supply, other.Supply)) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Minter, other.Minter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (supply_ != null) hash ^= Supply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (minter_ != null) hash ^= Minter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (supply_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Supply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Decimals);
      }
      if (owner_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Owner);
      }
      if (minter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Minter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (supply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Decimals);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (minter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterTransaction other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.supply_ != null) {
        if (supply_ == null) {
          supply_ = new global::Phorkus.Proto.UInt256();
        }
        Supply.MergeFrom(other.Supply);
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          owner_ = new global::Phorkus.Proto.UInt160();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.minter_ != null) {
        if (minter_ == null) {
          minter_ = new global::Phorkus.Proto.UInt160();
        }
        Minter.MergeFrom(other.Minter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Phorkus.Proto.AssetType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (supply_ == null) {
              supply_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(supply_);
            break;
          }
          case 32: {
            Decimals = input.ReadUInt32();
            break;
          }
          case 42: {
            if (owner_ == null) {
              owner_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(owner_);
            break;
          }
          case 50: {
            if (minter_ == null) {
              minter_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(minter_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MinerTransaction : pb::IMessage<MinerTransaction> {
    private static readonly pb::MessageParser<MinerTransaction> _parser = new pb::MessageParser<MinerTransaction>(() => new MinerTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerTransaction(MinerTransaction other) : this() {
      miner_ = other.miner_ != null ? other.miner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerTransaction Clone() {
      return new MinerTransaction(this);
    }

    /// <summary>Field number for the "miner" field.</summary>
    public const int MinerFieldNumber = 1;
    private global::Phorkus.Proto.UInt160 miner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 Miner {
      get { return miner_; }
      set {
        miner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Miner, other.Miner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (miner_ != null) hash ^= Miner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (miner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Miner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (miner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Miner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerTransaction other) {
      if (other == null) {
        return;
      }
      if (other.miner_ != null) {
        if (miner_ == null) {
          miner_ = new global::Phorkus.Proto.UInt160();
        }
        Miner.MergeFrom(other.Miner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (miner_ == null) {
              miner_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(miner_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionState : pb::IMessage<TransactionState> {
    private static readonly pb::MessageParser<TransactionState> _parser = new pb::MessageParser<TransactionState>(() => new TransactionState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionState(TransactionState other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionState Clone() {
      return new TransactionState(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Phorkus.Proto.TransactionState.Types.TransactionStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.TransactionState.Types.TransactionStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionState other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::Phorkus.Proto.TransactionState.Types.TransactionStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TransactionStatus {
        [pbr::OriginalName("TRANSACTION_STATUS_TAKEN")] Taken = 0,
        [pbr::OriginalName("TRANSACTION_STATUS_CONFIRMED")] Confirmed = 1,
        [pbr::OriginalName("TRANSACTION_STATUS_FAILED")] Failed = 2,
      }

    }
    #endregion

  }

  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      type_ = other.type_;
      version_ = other.version_;
      flags_ = other.flags_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      nonce_ = other.nonce_;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      switch (other.DataCase) {
        case DataOneofCase.Contract:
          Contract = other.Contract.Clone();
          break;
        case DataOneofCase.Issue:
          Issue = other.Issue.Clone();
          break;
        case DataOneofCase.Publish:
          Publish = other.Publish.Clone();
          break;
        case DataOneofCase.Register:
          Register = other.Register.Clone();
          break;
        case DataOneofCase.Miner:
          Miner = other.Miner.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Phorkus.Proto.TransactionType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.TransactionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 3;
    private ulong flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private global::Phorkus.Proto.UInt160 from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt160 From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 5;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.ContractTransaction Contract {
      get { return dataCase_ == DataOneofCase.Contract ? (global::Phorkus.Proto.ContractTransaction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Contract;
      }
    }

    /// <summary>Field number for the "issue" field.</summary>
    public const int IssueFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.IssueTransaction Issue {
      get { return dataCase_ == DataOneofCase.Issue ? (global::Phorkus.Proto.IssueTransaction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Issue;
      }
    }

    /// <summary>Field number for the "publish" field.</summary>
    public const int PublishFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.PublishTransaction Publish {
      get { return dataCase_ == DataOneofCase.Publish ? (global::Phorkus.Proto.PublishTransaction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Publish;
      }
    }

    /// <summary>Field number for the "register" field.</summary>
    public const int RegisterFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.RegisterTransaction Register {
      get { return dataCase_ == DataOneofCase.Register ? (global::Phorkus.Proto.RegisterTransaction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Register;
      }
    }

    /// <summary>Field number for the "miner" field.</summary>
    public const int MinerFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.MinerTransaction Miner {
      get { return dataCase_ == DataOneofCase.Miner ? (global::Phorkus.Proto.MinerTransaction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Miner;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 11;
    private global::Phorkus.Proto.Signature signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Contract = 6,
      Issue = 7,
      Publish = 8,
      Register = 9,
      Miner = 10,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Version != other.Version) return false;
      if (Flags != other.Flags) return false;
      if (!object.Equals(From, other.From)) return false;
      if (Nonce != other.Nonce) return false;
      if (!object.Equals(Contract, other.Contract)) return false;
      if (!object.Equals(Issue, other.Issue)) return false;
      if (!object.Equals(Publish, other.Publish)) return false;
      if (!object.Equals(Register, other.Register)) return false;
      if (!object.Equals(Miner, other.Miner)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Flags != 0UL) hash ^= Flags.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (dataCase_ == DataOneofCase.Contract) hash ^= Contract.GetHashCode();
      if (dataCase_ == DataOneofCase.Issue) hash ^= Issue.GetHashCode();
      if (dataCase_ == DataOneofCase.Publish) hash ^= Publish.GetHashCode();
      if (dataCase_ == DataOneofCase.Register) hash ^= Register.GetHashCode();
      if (dataCase_ == DataOneofCase.Miner) hash ^= Miner.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Version);
      }
      if (Flags != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Flags);
      }
      if (from_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(From);
      }
      if (Nonce != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Nonce);
      }
      if (dataCase_ == DataOneofCase.Contract) {
        output.WriteRawTag(50);
        output.WriteMessage(Contract);
      }
      if (dataCase_ == DataOneofCase.Issue) {
        output.WriteRawTag(58);
        output.WriteMessage(Issue);
      }
      if (dataCase_ == DataOneofCase.Publish) {
        output.WriteRawTag(66);
        output.WriteMessage(Publish);
      }
      if (dataCase_ == DataOneofCase.Register) {
        output.WriteRawTag(74);
        output.WriteMessage(Register);
      }
      if (dataCase_ == DataOneofCase.Miner) {
        output.WriteRawTag(82);
        output.WriteMessage(Miner);
      }
      if (signature_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (Flags != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Flags);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (dataCase_ == DataOneofCase.Contract) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (dataCase_ == DataOneofCase.Issue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issue);
      }
      if (dataCase_ == DataOneofCase.Publish) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Publish);
      }
      if (dataCase_ == DataOneofCase.Register) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Register);
      }
      if (dataCase_ == DataOneofCase.Miner) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Miner);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Flags != 0UL) {
        Flags = other.Flags;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Phorkus.Proto.UInt160();
        }
        From.MergeFrom(other.From);
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::Phorkus.Proto.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      switch (other.DataCase) {
        case DataOneofCase.Contract:
          if (Contract == null) {
            Contract = new global::Phorkus.Proto.ContractTransaction();
          }
          Contract.MergeFrom(other.Contract);
          break;
        case DataOneofCase.Issue:
          if (Issue == null) {
            Issue = new global::Phorkus.Proto.IssueTransaction();
          }
          Issue.MergeFrom(other.Issue);
          break;
        case DataOneofCase.Publish:
          if (Publish == null) {
            Publish = new global::Phorkus.Proto.PublishTransaction();
          }
          Publish.MergeFrom(other.Publish);
          break;
        case DataOneofCase.Register:
          if (Register == null) {
            Register = new global::Phorkus.Proto.RegisterTransaction();
          }
          Register.MergeFrom(other.Register);
          break;
        case DataOneofCase.Miner:
          if (Miner == null) {
            Miner = new global::Phorkus.Proto.MinerTransaction();
          }
          Miner.MergeFrom(other.Miner);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Phorkus.Proto.TransactionType) input.ReadEnum();
            break;
          }
          case 16: {
            Version = input.ReadUInt32();
            break;
          }
          case 24: {
            Flags = input.ReadUInt64();
            break;
          }
          case 34: {
            if (from_ == null) {
              from_ = new global::Phorkus.Proto.UInt160();
            }
            input.ReadMessage(from_);
            break;
          }
          case 40: {
            Nonce = input.ReadUInt64();
            break;
          }
          case 50: {
            global::Phorkus.Proto.ContractTransaction subBuilder = new global::Phorkus.Proto.ContractTransaction();
            if (dataCase_ == DataOneofCase.Contract) {
              subBuilder.MergeFrom(Contract);
            }
            input.ReadMessage(subBuilder);
            Contract = subBuilder;
            break;
          }
          case 58: {
            global::Phorkus.Proto.IssueTransaction subBuilder = new global::Phorkus.Proto.IssueTransaction();
            if (dataCase_ == DataOneofCase.Issue) {
              subBuilder.MergeFrom(Issue);
            }
            input.ReadMessage(subBuilder);
            Issue = subBuilder;
            break;
          }
          case 66: {
            global::Phorkus.Proto.PublishTransaction subBuilder = new global::Phorkus.Proto.PublishTransaction();
            if (dataCase_ == DataOneofCase.Publish) {
              subBuilder.MergeFrom(Publish);
            }
            input.ReadMessage(subBuilder);
            Publish = subBuilder;
            break;
          }
          case 74: {
            global::Phorkus.Proto.RegisterTransaction subBuilder = new global::Phorkus.Proto.RegisterTransaction();
            if (dataCase_ == DataOneofCase.Register) {
              subBuilder.MergeFrom(Register);
            }
            input.ReadMessage(subBuilder);
            Register = subBuilder;
            break;
          }
          case 82: {
            global::Phorkus.Proto.MinerTransaction subBuilder = new global::Phorkus.Proto.MinerTransaction();
            if (dataCase_ == DataOneofCase.Miner) {
              subBuilder.MergeFrom(Miner);
            }
            input.ReadMessage(subBuilder);
            Miner = subBuilder;
            break;
          }
          case 90: {
            if (signature_ == null) {
              signature_ = new global::Phorkus.Proto.Signature();
            }
            input.ReadMessage(signature_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///
  ///tx_hash = hash( raw_tx + sign(hash(raw_tx)) )
  ///check this link: https://en.bitcoin.it/wiki/Transaction_malleability
  /// </summary>
  public sealed partial class SignedTransaction : pb::IMessage<SignedTransaction> {
    private static readonly pb::MessageParser<SignedTransaction> _parser = new pb::MessageParser<SignedTransaction>(() => new SignedTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignedTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.TransactionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTransaction(SignedTransaction other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTransaction Clone() {
      return new SignedTransaction(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Phorkus.Proto.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private global::Phorkus.Proto.UInt256 hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.UInt256 Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignedTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignedTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Hash, other.Hash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (hash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignedTransaction other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Phorkus.Proto.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          hash_ = new global::Phorkus.Proto.UInt256();
        }
        Hash.MergeFrom(other.Hash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Phorkus.Proto.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            if (hash_ == null) {
              hash_ = new global::Phorkus.Proto.UInt256();
            }
            input.ReadMessage(hash_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
