// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hermes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from hermes.proto</summary>
  public static partial class HermesReflection {

    #region Descriptor
    /// <summary>File descriptor for hermes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HermesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxoZXJtZXMucHJvdG8iWQoPQmd3UHVibGljUGFyYW1zEgkKAWkYASABKAUS",
            "CQoBbhgCIAEoBRIJCgFqGAMgASgFEgsKA3BpahgEIAEoDBILCgNxaWoYBSAB",
            "KAwSCwoDaGlqGAYgASgMIu4DChJCZ3dQcm90b2NvbE1lc3NhZ2USMgoJY29t",
            "cGxhaW50GAEgASgLMh0uQmd3UHJvdG9jb2xNZXNzYWdlLkNvbXBsYWludEgA",
            "EjMKCmJnd25fcG9pbnQYAiABKAsyHS5CZ3dQcm90b2NvbE1lc3NhZ2UuQmd3",
            "blBvaW50SAASNQoLdGhldGFfcG9pbnQYAyABKAsyHi5CZ3dQcm90b2NvbE1l",
            "c3NhZ2UuVGhldGFQb2ludEgAEj8KEHZlcmlmaWNhdGlvbl9rZXkYBCABKAsy",
            "Iy5CZ3dQcm90b2NvbE1lc3NhZ2UuVmVyaWZpY2F0aW9uS2V5SAASPwoRcWlf",
            "dGVzdF9mb3Jfcm91bmQYBSABKAsyIi5CZ3dQcm90b2NvbE1lc3NhZ2UuUWlU",
            "ZXN0Rm9yUm91bmRIABoXCglDb21wbGFpbnQSCgoCaWQYASABKA0aGgoJQmd3",
            "blBvaW50Eg0KBXBvaW50GAEgASgMGhwKClRoZXRhUG9pbnQSDgoGdGhldGFp",
            "GAEgASgMGisKD1ZlcmlmaWNhdGlvbktleRIYChB2ZXJpZmljYXRpb25fa2V5",
            "GAEgASgMGisKDlFpVGVzdEZvclJvdW5kEgoKAnFpGAEgASgMEg0KBXJvdW5k",
            "GAIgASgNQgkKB21lc3NhZ2UibAoaS2V5c0Rlcml2YXRpb25QdWJsaWNQYXJh",
            "bXMSCQoBaRgBIAEoBRIJCgFqGAIgASgFEg4KBmJldGFpahgDIAEoDBIMCgRk",
            "cmlqGAQgASgMEg0KBXBoaWlqGAUgASgMEgsKA2hpahgGIAEoDCrCAwoKUGFy",
            "dHlTdGF0ZRIYChRTVEFURV9JTklUSUFMSVpBVElPThAAEhoKFlNUQVRFX0dF",
            "TkVSQVRJTkdfU0hBUkUQARIaChZTVEFURV9DT0xMRUNUSU5HX1NIQVJFEAIS",
            "GgoWU1RBVEVfR0VORVJBVElOR19QT0lOVBADEhoKFlNUQVRFX0NPTExFQ1RJ",
            "TkdfUE9JTlQQBBIaChZTVEFURV9HRU5FUkFUSU5HX1BST09GEAUSGgoWU1RB",
            "VEVfQ09MTEVDVElOR19QUk9PRhAGEhoKFlNUQVRFX1ZBTElEQVRJTkdfUFJP",
            "T0YQBxIfChtTVEFURV9HRU5FUkFUSU5HX0RFUklWQVRJT04QCBIfChtTVEFU",
            "RV9DT0xMRUNUSU5HX0RFUklWQVRJT04QCRIaChZTVEFURV9HRU5FUkFUSU5H",
            "X1RIRVRBEAoSGgoWU1RBVEVfQ09MTEVDVElOR19USEVUQRALEiEKHVNUQVRF",
            "X0dFTkVSQVRJTkdfVkVSSUZJQ0FUSU9OEAwSIQodU1RBVEVfQ09MTEVDVElO",
            "R19WRVJJRklDQVRJT04QDRIWChJTVEFURV9GSU5BTElaQVRJT04QY0IQqgIN",
            "UGhvcmt1cy5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Proto.PartyState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwPublicParams), global::Phorkus.Proto.BgwPublicParams.Parser, new[]{ "I", "N", "J", "Pij", "Qij", "Hij" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage), global::Phorkus.Proto.BgwProtocolMessage.Parser, new[]{ "Complaint", "BgwnPoint", "ThetaPoint", "VerificationKey", "QiTestForRound" }, new[]{ "Message" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint), global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint), global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint.Parser, new[]{ "Point" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint), global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint.Parser, new[]{ "Thetai" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey), global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey.Parser, new[]{ "VerificationKey_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound), global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound.Parser, new[]{ "Qi", "Round" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.KeysDerivationPublicParams), global::Phorkus.Proto.KeysDerivationPublicParams.Parser, new[]{ "I", "J", "Betaij", "Drij", "Phiij", "Hij" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PartyState {
    [pbr::OriginalName("STATE_INITIALIZATION")] StateInitialization = 0,
    [pbr::OriginalName("STATE_GENERATING_SHARE")] StateGeneratingShare = 1,
    [pbr::OriginalName("STATE_COLLECTING_SHARE")] StateCollectingShare = 2,
    [pbr::OriginalName("STATE_GENERATING_POINT")] StateGeneratingPoint = 3,
    [pbr::OriginalName("STATE_COLLECTING_POINT")] StateCollectingPoint = 4,
    /// <summary>
    /// &lt;---+
    /// </summary>
    [pbr::OriginalName("STATE_GENERATING_PROOF")] StateGeneratingProof = 5,
    /// <summary>
    ///     | (repeat several times)
    /// </summary>
    [pbr::OriginalName("STATE_COLLECTING_PROOF")] StateCollectingProof = 6,
    /// <summary>
    /// ----+
    /// </summary>
    [pbr::OriginalName("STATE_VALIDATING_PROOF")] StateValidatingProof = 7,
    [pbr::OriginalName("STATE_GENERATING_DERIVATION")] StateGeneratingDerivation = 8,
    [pbr::OriginalName("STATE_COLLECTING_DERIVATION")] StateCollectingDerivation = 9,
    [pbr::OriginalName("STATE_GENERATING_THETA")] StateGeneratingTheta = 10,
    [pbr::OriginalName("STATE_COLLECTING_THETA")] StateCollectingTheta = 11,
    [pbr::OriginalName("STATE_GENERATING_VERIFICATION")] StateGeneratingVerification = 12,
    [pbr::OriginalName("STATE_COLLECTING_VERIFICATION")] StateCollectingVerification = 13,
    [pbr::OriginalName("STATE_FINALIZATION")] StateFinalization = 99,
  }

  #endregion

  #region Messages
  public sealed partial class BgwPublicParams : pb::IMessage<BgwPublicParams> {
    private static readonly pb::MessageParser<BgwPublicParams> _parser = new pb::MessageParser<BgwPublicParams>(() => new BgwPublicParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BgwPublicParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.HermesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams(BgwPublicParams other) : this() {
      i_ = other.i_;
      n_ = other.n_;
      j_ = other.j_;
      pij_ = other.pij_;
      qij_ = other.qij_;
      hij_ = other.hij_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams Clone() {
      return new BgwPublicParams(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private int i_;
    /// <summary>
    /// the id of the party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 2;
    private int n_;
    /// <summary>
    /// the number of parties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 3;
    private int j_;
    /// <summary>
    /// the id of the party for which these shares were generated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    /// <summary>Field number for the "pij" field.</summary>
    public const int PijFieldNumber = 4;
    private pb::ByteString pij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share pij = f(j) of party i's pi generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pij {
      get { return pij_; }
      set {
        pij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qij" field.</summary>
    public const int QijFieldNumber = 5;
    private pb::ByteString qij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share qij = g(j) of party i's qi generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Qij {
      get { return qij_; }
      set {
        qij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hij" field.</summary>
    public const int HijFieldNumber = 6;
    private pb::ByteString hij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share hij = h(j) of party i's zero generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hij {
      get { return hij_; }
      set {
        hij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BgwPublicParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BgwPublicParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (N != other.N) return false;
      if (J != other.J) return false;
      if (Pij != other.Pij) return false;
      if (Qij != other.Qij) return false;
      if (Hij != other.Hij) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (N != 0) hash ^= N.GetHashCode();
      if (J != 0) hash ^= J.GetHashCode();
      if (Pij.Length != 0) hash ^= Pij.GetHashCode();
      if (Qij.Length != 0) hash ^= Qij.GetHashCode();
      if (Hij.Length != 0) hash ^= Hij.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(I);
      }
      if (N != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(N);
      }
      if (J != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(J);
      }
      if (Pij.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Pij);
      }
      if (Qij.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Qij);
      }
      if (Hij.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Hij);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (N != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N);
      }
      if (J != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(J);
      }
      if (Pij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pij);
      }
      if (Qij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Qij);
      }
      if (Hij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hij);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BgwPublicParams other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      if (other.N != 0) {
        N = other.N;
      }
      if (other.J != 0) {
        J = other.J;
      }
      if (other.Pij.Length != 0) {
        Pij = other.Pij;
      }
      if (other.Qij.Length != 0) {
        Qij = other.Qij;
      }
      if (other.Hij.Length != 0) {
        Hij = other.Hij;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadInt32();
            break;
          }
          case 16: {
            N = input.ReadInt32();
            break;
          }
          case 24: {
            J = input.ReadInt32();
            break;
          }
          case 34: {
            Pij = input.ReadBytes();
            break;
          }
          case 42: {
            Qij = input.ReadBytes();
            break;
          }
          case 50: {
            Hij = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BgwProtocolMessage : pb::IMessage<BgwProtocolMessage> {
    private static readonly pb::MessageParser<BgwProtocolMessage> _parser = new pb::MessageParser<BgwProtocolMessage>(() => new BgwProtocolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BgwProtocolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.HermesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwProtocolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwProtocolMessage(BgwProtocolMessage other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Complaint:
          Complaint = other.Complaint.Clone();
          break;
        case MessageOneofCase.BgwnPoint:
          BgwnPoint = other.BgwnPoint.Clone();
          break;
        case MessageOneofCase.ThetaPoint:
          ThetaPoint = other.ThetaPoint.Clone();
          break;
        case MessageOneofCase.VerificationKey:
          VerificationKey = other.VerificationKey.Clone();
          break;
        case MessageOneofCase.QiTestForRound:
          QiTestForRound = other.QiTestForRound.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwProtocolMessage Clone() {
      return new BgwProtocolMessage(this);
    }

    /// <summary>Field number for the "complaint" field.</summary>
    public const int ComplaintFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint Complaint {
      get { return messageCase_ == MessageOneofCase.Complaint ? (global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Complaint;
      }
    }

    /// <summary>Field number for the "bgwn_point" field.</summary>
    public const int BgwnPointFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint BgwnPoint {
      get { return messageCase_ == MessageOneofCase.BgwnPoint ? (global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.BgwnPoint;
      }
    }

    /// <summary>Field number for the "theta_point" field.</summary>
    public const int ThetaPointFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint ThetaPoint {
      get { return messageCase_ == MessageOneofCase.ThetaPoint ? (global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ThetaPoint;
      }
    }

    /// <summary>Field number for the "verification_key" field.</summary>
    public const int VerificationKeyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey VerificationKey {
      get { return messageCase_ == MessageOneofCase.VerificationKey ? (global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VerificationKey;
      }
    }

    /// <summary>Field number for the "qi_test_for_round" field.</summary>
    public const int QiTestForRoundFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound QiTestForRound {
      get { return messageCase_ == MessageOneofCase.QiTestForRound ? (global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.QiTestForRound;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Complaint = 1,
      BgwnPoint = 2,
      ThetaPoint = 3,
      VerificationKey = 4,
      QiTestForRound = 5,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BgwProtocolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BgwProtocolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Complaint, other.Complaint)) return false;
      if (!object.Equals(BgwnPoint, other.BgwnPoint)) return false;
      if (!object.Equals(ThetaPoint, other.ThetaPoint)) return false;
      if (!object.Equals(VerificationKey, other.VerificationKey)) return false;
      if (!object.Equals(QiTestForRound, other.QiTestForRound)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Complaint) hash ^= Complaint.GetHashCode();
      if (messageCase_ == MessageOneofCase.BgwnPoint) hash ^= BgwnPoint.GetHashCode();
      if (messageCase_ == MessageOneofCase.ThetaPoint) hash ^= ThetaPoint.GetHashCode();
      if (messageCase_ == MessageOneofCase.VerificationKey) hash ^= VerificationKey.GetHashCode();
      if (messageCase_ == MessageOneofCase.QiTestForRound) hash ^= QiTestForRound.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Complaint) {
        output.WriteRawTag(10);
        output.WriteMessage(Complaint);
      }
      if (messageCase_ == MessageOneofCase.BgwnPoint) {
        output.WriteRawTag(18);
        output.WriteMessage(BgwnPoint);
      }
      if (messageCase_ == MessageOneofCase.ThetaPoint) {
        output.WriteRawTag(26);
        output.WriteMessage(ThetaPoint);
      }
      if (messageCase_ == MessageOneofCase.VerificationKey) {
        output.WriteRawTag(34);
        output.WriteMessage(VerificationKey);
      }
      if (messageCase_ == MessageOneofCase.QiTestForRound) {
        output.WriteRawTag(42);
        output.WriteMessage(QiTestForRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Complaint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Complaint);
      }
      if (messageCase_ == MessageOneofCase.BgwnPoint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BgwnPoint);
      }
      if (messageCase_ == MessageOneofCase.ThetaPoint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThetaPoint);
      }
      if (messageCase_ == MessageOneofCase.VerificationKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerificationKey);
      }
      if (messageCase_ == MessageOneofCase.QiTestForRound) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QiTestForRound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BgwProtocolMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Complaint:
          if (Complaint == null) {
            Complaint = new global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint();
          }
          Complaint.MergeFrom(other.Complaint);
          break;
        case MessageOneofCase.BgwnPoint:
          if (BgwnPoint == null) {
            BgwnPoint = new global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint();
          }
          BgwnPoint.MergeFrom(other.BgwnPoint);
          break;
        case MessageOneofCase.ThetaPoint:
          if (ThetaPoint == null) {
            ThetaPoint = new global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint();
          }
          ThetaPoint.MergeFrom(other.ThetaPoint);
          break;
        case MessageOneofCase.VerificationKey:
          if (VerificationKey == null) {
            VerificationKey = new global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey();
          }
          VerificationKey.MergeFrom(other.VerificationKey);
          break;
        case MessageOneofCase.QiTestForRound:
          if (QiTestForRound == null) {
            QiTestForRound = new global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound();
          }
          QiTestForRound.MergeFrom(other.QiTestForRound);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint subBuilder = new global::Phorkus.Proto.BgwProtocolMessage.Types.Complaint();
            if (messageCase_ == MessageOneofCase.Complaint) {
              subBuilder.MergeFrom(Complaint);
            }
            input.ReadMessage(subBuilder);
            Complaint = subBuilder;
            break;
          }
          case 18: {
            global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint subBuilder = new global::Phorkus.Proto.BgwProtocolMessage.Types.BgwnPoint();
            if (messageCase_ == MessageOneofCase.BgwnPoint) {
              subBuilder.MergeFrom(BgwnPoint);
            }
            input.ReadMessage(subBuilder);
            BgwnPoint = subBuilder;
            break;
          }
          case 26: {
            global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint subBuilder = new global::Phorkus.Proto.BgwProtocolMessage.Types.ThetaPoint();
            if (messageCase_ == MessageOneofCase.ThetaPoint) {
              subBuilder.MergeFrom(ThetaPoint);
            }
            input.ReadMessage(subBuilder);
            ThetaPoint = subBuilder;
            break;
          }
          case 34: {
            global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey subBuilder = new global::Phorkus.Proto.BgwProtocolMessage.Types.VerificationKey();
            if (messageCase_ == MessageOneofCase.VerificationKey) {
              subBuilder.MergeFrom(VerificationKey);
            }
            input.ReadMessage(subBuilder);
            VerificationKey = subBuilder;
            break;
          }
          case 42: {
            global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound subBuilder = new global::Phorkus.Proto.BgwProtocolMessage.Types.QiTestForRound();
            if (messageCase_ == MessageOneofCase.QiTestForRound) {
              subBuilder.MergeFrom(QiTestForRound);
            }
            input.ReadMessage(subBuilder);
            QiTestForRound = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BgwProtocolMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Complaint : pb::IMessage<Complaint> {
        private static readonly pb::MessageParser<Complaint> _parser = new pb::MessageParser<Complaint>(() => new Complaint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Complaint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Proto.BgwProtocolMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Complaint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Complaint(Complaint other) : this() {
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Complaint Clone() {
          return new Complaint(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        /// <summary>
        /// the id of the party that produced the invalid share
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Complaint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Complaint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Complaint other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class BgwnPoint : pb::IMessage<BgwnPoint> {
        private static readonly pb::MessageParser<BgwnPoint> _parser = new pb::MessageParser<BgwnPoint>(() => new BgwnPoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BgwnPoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Proto.BgwProtocolMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BgwnPoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BgwnPoint(BgwnPoint other) : this() {
          point_ = other.point_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BgwnPoint Clone() {
          return new BgwnPoint(this);
        }

        /// <summary>Field number for the "point" field.</summary>
        public const int PointFieldNumber = 1;
        private pb::ByteString point_ = pb::ByteString.Empty;
        /// <summary>
        /// a share of N
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Point {
          get { return point_; }
          set {
            point_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BgwnPoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BgwnPoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Point != other.Point) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Point.Length != 0) hash ^= Point.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Point.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Point);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Point.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Point);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BgwnPoint other) {
          if (other == null) {
            return;
          }
          if (other.Point.Length != 0) {
            Point = other.Point;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Point = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ThetaPoint : pb::IMessage<ThetaPoint> {
        private static readonly pb::MessageParser<ThetaPoint> _parser = new pb::MessageParser<ThetaPoint>(() => new ThetaPoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ThetaPoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Proto.BgwProtocolMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThetaPoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThetaPoint(ThetaPoint other) : this() {
          thetai_ = other.thetai_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThetaPoint Clone() {
          return new ThetaPoint(this);
        }

        /// <summary>Field number for the "thetai" field.</summary>
        public const int ThetaiFieldNumber = 1;
        private pb::ByteString thetai_ = pb::ByteString.Empty;
        /// <summary>
        /// a share of Theta
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Thetai {
          get { return thetai_; }
          set {
            thetai_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ThetaPoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ThetaPoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Thetai != other.Thetai) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Thetai.Length != 0) hash ^= Thetai.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Thetai.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Thetai);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Thetai.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Thetai);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ThetaPoint other) {
          if (other == null) {
            return;
          }
          if (other.Thetai.Length != 0) {
            Thetai = other.Thetai;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Thetai = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class VerificationKey : pb::IMessage<VerificationKey> {
        private static readonly pb::MessageParser<VerificationKey> _parser = new pb::MessageParser<VerificationKey>(() => new VerificationKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VerificationKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Proto.BgwProtocolMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerificationKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerificationKey(VerificationKey other) : this() {
          verificationKey_ = other.verificationKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerificationKey Clone() {
          return new VerificationKey(this);
        }

        /// <summary>Field number for the "verification_key" field.</summary>
        public const int VerificationKey_FieldNumber = 1;
        private pb::ByteString verificationKey_ = pb::ByteString.Empty;
        /// <summary>
        /// a verification key
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString VerificationKey_ {
          get { return verificationKey_; }
          set {
            verificationKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VerificationKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VerificationKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (VerificationKey_ != other.VerificationKey_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (VerificationKey_.Length != 0) hash ^= VerificationKey_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (VerificationKey_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(VerificationKey_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (VerificationKey_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(VerificationKey_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VerificationKey other) {
          if (other == null) {
            return;
          }
          if (other.VerificationKey_.Length != 0) {
            VerificationKey_ = other.VerificationKey_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                VerificationKey_ = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class QiTestForRound : pb::IMessage<QiTestForRound> {
        private static readonly pb::MessageParser<QiTestForRound> _parser = new pb::MessageParser<QiTestForRound>(() => new QiTestForRound());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QiTestForRound> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Proto.BgwProtocolMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QiTestForRound() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QiTestForRound(QiTestForRound other) : this() {
          qi_ = other.qi_;
          round_ = other.round_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QiTestForRound Clone() {
          return new QiTestForRound(this);
        }

        /// <summary>Field number for the "qi" field.</summary>
        public const int QiFieldNumber = 1;
        private pb::ByteString qi_ = pb::ByteString.Empty;
        /// <summary>
        /// a Qi in the Biprimality test
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Qi {
          get { return qi_; }
          set {
            qi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "round" field.</summary>
        public const int RoundFieldNumber = 2;
        private uint round_;
        /// <summary>
        /// the current round number in the Biprimality test
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Round {
          get { return round_; }
          set {
            round_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as QiTestForRound);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QiTestForRound other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Qi != other.Qi) return false;
          if (Round != other.Round) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Qi.Length != 0) hash ^= Qi.GetHashCode();
          if (Round != 0) hash ^= Round.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Qi.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Qi);
          }
          if (Round != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Round);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Qi.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Qi);
          }
          if (Round != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Round);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QiTestForRound other) {
          if (other == null) {
            return;
          }
          if (other.Qi.Length != 0) {
            Qi = other.Qi;
          }
          if (other.Round != 0) {
            Round = other.Round;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Qi = input.ReadBytes();
                break;
              }
              case 16: {
                Round = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class KeysDerivationPublicParams : pb::IMessage<KeysDerivationPublicParams> {
    private static readonly pb::MessageParser<KeysDerivationPublicParams> _parser = new pb::MessageParser<KeysDerivationPublicParams>(() => new KeysDerivationPublicParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeysDerivationPublicParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.HermesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeysDerivationPublicParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeysDerivationPublicParams(KeysDerivationPublicParams other) : this() {
      i_ = other.i_;
      j_ = other.j_;
      betaij_ = other.betaij_;
      drij_ = other.drij_;
      phiij_ = other.phiij_;
      hij_ = other.hij_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeysDerivationPublicParams Clone() {
      return new KeysDerivationPublicParams(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private int i_;
    /// <summary>
    /// the id of the party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 2;
    private int j_;
    /// <summary>
    /// the id of the party for which these shares were generated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    /// <summary>Field number for the "betaij" field.</summary>
    public const int BetaijFieldNumber = 3;
    private pb::ByteString betaij_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Betaij {
      get { return betaij_; }
      set {
        betaij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drij" field.</summary>
    public const int DrijFieldNumber = 4;
    private pb::ByteString drij_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Drij {
      get { return drij_; }
      set {
        drij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phiij" field.</summary>
    public const int PhiijFieldNumber = 5;
    private pb::ByteString phiij_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Phiij {
      get { return phiij_; }
      set {
        phiij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hij" field.</summary>
    public const int HijFieldNumber = 6;
    private pb::ByteString hij_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hij {
      get { return hij_; }
      set {
        hij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeysDerivationPublicParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeysDerivationPublicParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (J != other.J) return false;
      if (Betaij != other.Betaij) return false;
      if (Drij != other.Drij) return false;
      if (Phiij != other.Phiij) return false;
      if (Hij != other.Hij) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (J != 0) hash ^= J.GetHashCode();
      if (Betaij.Length != 0) hash ^= Betaij.GetHashCode();
      if (Drij.Length != 0) hash ^= Drij.GetHashCode();
      if (Phiij.Length != 0) hash ^= Phiij.GetHashCode();
      if (Hij.Length != 0) hash ^= Hij.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(I);
      }
      if (J != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(J);
      }
      if (Betaij.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Betaij);
      }
      if (Drij.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Drij);
      }
      if (Phiij.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Phiij);
      }
      if (Hij.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Hij);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (J != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(J);
      }
      if (Betaij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Betaij);
      }
      if (Drij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Drij);
      }
      if (Phiij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Phiij);
      }
      if (Hij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hij);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeysDerivationPublicParams other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      if (other.J != 0) {
        J = other.J;
      }
      if (other.Betaij.Length != 0) {
        Betaij = other.Betaij;
      }
      if (other.Drij.Length != 0) {
        Drij = other.Drij;
      }
      if (other.Phiij.Length != 0) {
        Phiij = other.Phiij;
      }
      if (other.Hij.Length != 0) {
        Hij = other.Hij;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadInt32();
            break;
          }
          case 16: {
            J = input.ReadInt32();
            break;
          }
          case 26: {
            Betaij = input.ReadBytes();
            break;
          }
          case 34: {
            Drij = input.ReadBytes();
            break;
          }
          case 42: {
            Phiij = input.ReadBytes();
            break;
          }
          case 50: {
            Hij = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
