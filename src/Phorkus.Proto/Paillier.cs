// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: paillier.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Proto {

  /// <summary>Holder for reflection information generated from paillier.proto</summary>
  public static partial class PaillierReflection {

    #region Descriptor
    /// <summary>File descriptor for paillier.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaillierReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5wYWlsbGllci5wcm90bxoNZGVmYXVsdC5wcm90byJkChBCZ3dQcml2YXRl",
            "UGFyYW1zEgkKAWkYASABKA0SCQoBbhgCIAEoDRIKCgJwaRgDIAEoDBIKCgJx",
            "aRgEIAEoDBIKCgJmaRgFIAEoDBIKCgJnaRgGIAEoDBIKCgJoaRgHIAEoDCJZ",
            "Cg9CZ3dQdWJsaWNQYXJhbXMSCQoBaRgBIAEoDRIJCgFuGAIgASgNEgkKAWoY",
            "AyABKA0SCwoDcGlqGAQgASgMEgsKA3FpahgFIAEoDBILCgNoaWoYBiABKAxC",
            "EKoCDVBob3JrdXMuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Proto.DefaultReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwPrivateParams), global::Phorkus.Proto.BgwPrivateParams.Parser, new[]{ "I", "N", "Pi", "Qi", "Fi", "Gi", "Hi" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Proto.BgwPublicParams), global::Phorkus.Proto.BgwPublicParams.Parser, new[]{ "I", "N", "J", "Pij", "Qij", "Hij" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BgwPrivateParams : pb::IMessage<BgwPrivateParams> {
    private static readonly pb::MessageParser<BgwPrivateParams> _parser = new pb::MessageParser<BgwPrivateParams>(() => new BgwPrivateParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BgwPrivateParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.PaillierReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPrivateParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPrivateParams(BgwPrivateParams other) : this() {
      i_ = other.i_;
      n_ = other.n_;
      pi_ = other.pi_;
      qi_ = other.qi_;
      fi_ = other.fi_;
      gi_ = other.gi_;
      hi_ = other.hi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPrivateParams Clone() {
      return new BgwPrivateParams(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private uint i_;
    /// <summary>
    /// the id of the party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 2;
    private uint n_;
    /// <summary>
    /// the number of parties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    /// <summary>Field number for the "pi" field.</summary>
    public const int PiFieldNumber = 3;
    private pb::ByteString pi_ = pb::ByteString.Empty;
    /// <summary>
    /// the contribution of party Pi to p
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pi {
      get { return pi_; }
      set {
        pi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qi" field.</summary>
    public const int QiFieldNumber = 4;
    private pb::ByteString qi_ = pb::ByteString.Empty;
    /// <summary>
    /// the contribution of party Pi to q
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Qi {
      get { return qi_; }
      set {
        qi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fi" field.</summary>
    public const int FiFieldNumber = 5;
    private pb::ByteString fi_ = pb::ByteString.Empty;
    /// <summary>
    /// the polynomial used to share pi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Fi {
      get { return fi_; }
      set {
        fi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gi" field.</summary>
    public const int GiFieldNumber = 6;
    private pb::ByteString gi_ = pb::ByteString.Empty;
    /// <summary>
    /// the polynomial used to share qi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Gi {
      get { return gi_; }
      set {
        gi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hi" field.</summary>
    public const int HiFieldNumber = 7;
    private pb::ByteString hi_ = pb::ByteString.Empty;
    /// <summary>
    /// the polynomial used to share Ni
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hi {
      get { return hi_; }
      set {
        hi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BgwPrivateParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BgwPrivateParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (N != other.N) return false;
      if (Pi != other.Pi) return false;
      if (Qi != other.Qi) return false;
      if (Fi != other.Fi) return false;
      if (Gi != other.Gi) return false;
      if (Hi != other.Hi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (N != 0) hash ^= N.GetHashCode();
      if (Pi.Length != 0) hash ^= Pi.GetHashCode();
      if (Qi.Length != 0) hash ^= Qi.GetHashCode();
      if (Fi.Length != 0) hash ^= Fi.GetHashCode();
      if (Gi.Length != 0) hash ^= Gi.GetHashCode();
      if (Hi.Length != 0) hash ^= Hi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(I);
      }
      if (N != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(N);
      }
      if (Pi.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Pi);
      }
      if (Qi.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Qi);
      }
      if (Fi.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Fi);
      }
      if (Gi.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Gi);
      }
      if (Hi.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Hi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I);
      }
      if (N != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(N);
      }
      if (Pi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pi);
      }
      if (Qi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Qi);
      }
      if (Fi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Fi);
      }
      if (Gi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Gi);
      }
      if (Hi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BgwPrivateParams other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      if (other.N != 0) {
        N = other.N;
      }
      if (other.Pi.Length != 0) {
        Pi = other.Pi;
      }
      if (other.Qi.Length != 0) {
        Qi = other.Qi;
      }
      if (other.Fi.Length != 0) {
        Fi = other.Fi;
      }
      if (other.Gi.Length != 0) {
        Gi = other.Gi;
      }
      if (other.Hi.Length != 0) {
        Hi = other.Hi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadUInt32();
            break;
          }
          case 16: {
            N = input.ReadUInt32();
            break;
          }
          case 26: {
            Pi = input.ReadBytes();
            break;
          }
          case 34: {
            Qi = input.ReadBytes();
            break;
          }
          case 42: {
            Fi = input.ReadBytes();
            break;
          }
          case 50: {
            Gi = input.ReadBytes();
            break;
          }
          case 58: {
            Hi = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BgwPublicParams : pb::IMessage<BgwPublicParams> {
    private static readonly pb::MessageParser<BgwPublicParams> _parser = new pb::MessageParser<BgwPublicParams>(() => new BgwPublicParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BgwPublicParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Proto.PaillierReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams(BgwPublicParams other) : this() {
      i_ = other.i_;
      n_ = other.n_;
      j_ = other.j_;
      pij_ = other.pij_;
      qij_ = other.qij_;
      hij_ = other.hij_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BgwPublicParams Clone() {
      return new BgwPublicParams(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private uint i_;
    /// <summary>
    /// the id of the party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 2;
    private uint n_;
    /// <summary>
    /// the number of parties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 3;
    private uint j_;
    /// <summary>
    /// the id of the party for which these shares were generated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    /// <summary>Field number for the "pij" field.</summary>
    public const int PijFieldNumber = 4;
    private pb::ByteString pij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share pij = f(j) of party i's pi generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pij {
      get { return pij_; }
      set {
        pij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qij" field.</summary>
    public const int QijFieldNumber = 5;
    private pb::ByteString qij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share qij = g(j) of party i's qi generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Qij {
      get { return qij_; }
      set {
        qij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hij" field.</summary>
    public const int HijFieldNumber = 6;
    private pb::ByteString hij_ = pb::ByteString.Empty;
    /// <summary>
    /// the share hij = h(j) of party i's zero generated for party j
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hij {
      get { return hij_; }
      set {
        hij_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BgwPublicParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BgwPublicParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (N != other.N) return false;
      if (J != other.J) return false;
      if (Pij != other.Pij) return false;
      if (Qij != other.Qij) return false;
      if (Hij != other.Hij) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (N != 0) hash ^= N.GetHashCode();
      if (J != 0) hash ^= J.GetHashCode();
      if (Pij.Length != 0) hash ^= Pij.GetHashCode();
      if (Qij.Length != 0) hash ^= Qij.GetHashCode();
      if (Hij.Length != 0) hash ^= Hij.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(I);
      }
      if (N != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(N);
      }
      if (J != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(J);
      }
      if (Pij.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Pij);
      }
      if (Qij.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Qij);
      }
      if (Hij.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Hij);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I);
      }
      if (N != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(N);
      }
      if (J != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(J);
      }
      if (Pij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pij);
      }
      if (Qij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Qij);
      }
      if (Hij.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hij);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BgwPublicParams other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      if (other.N != 0) {
        N = other.N;
      }
      if (other.J != 0) {
        J = other.J;
      }
      if (other.Pij.Length != 0) {
        Pij = other.Pij;
      }
      if (other.Qij.Length != 0) {
        Qij = other.Qij;
      }
      if (other.Hij.Length != 0) {
        Hij = other.Hij;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadUInt32();
            break;
          }
          case 16: {
            N = input.ReadUInt32();
            break;
          }
          case 24: {
            J = input.ReadUInt32();
            break;
          }
          case 34: {
            Pij = input.ReadBytes();
            break;
          }
          case 42: {
            Qij = input.ReadBytes();
            break;
          }
          case 50: {
            Hij = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
