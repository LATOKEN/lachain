=== Old benchmarks

Full persistence, old version
990000 insertions in 421546ms
0.42580404040404ms per insertion
2348.49814729591 insertions per sec

Full persistence, new version
1000000 insertions in 165128ms
0.165128ms per insertion
6055.90814398527 insertions per sec

In memory, ToHex comparer
1000000 insertions in 228409ms
0.228409ms per insertion
4378.11119526814 insertions per sec

In memory, memcmp from libc compare with ToByteArray
1000000 insertions in 27670ms
0.02767ms per insertion
36140.2240693892 insertions per sec

Somewhere here: memcmp with reflection for private field: ~0.02ms per insertion

In memory, for loop comparer
1000000 insertions in 13787ms
0.013787ms per insertion
72532.0954522376 insertions per sec

=== Newer benchmark
Wrong random (no size), all in memory

100000 insertions in 296786ms
2.96786ms per insertion
336.943117262944 insertions per sec
540941 nodes persisted
123332245 nodes in cache
Commited 100000 operations in 3664ms

100000 insertions in 417597ms
4.17597ms per insertion
239.465321829419 insertions per sec
544636 nodes persisted
128015557 nodes in cache
Commited 100000 operations in 7736ms

100000 insertions in 535102ms
5.35102ms per insertion
186.880258343269 insertions per sec
548392 nodes persisted
132723462 nodes in cache
Commited 100000 operations in 3334ms

=== Even newer benchmark
Correct random (with sizes), all in memory

commit number 51
100000 insertions in 1822ms
0.01822ms per insertion
54884.7420417124 insertions per sec
406380 nodes persisted
138385898 nodes in cache
Commited 100000 operations in 2344ms

commit number 52
100000 insertions in 1918ms
0.01918ms per insertion
52137.6433785193 insertions per sec
410039 nodes persisted
141202549 nodes in cache
Commited 100000 operations in 2116ms

(!) 24.5G of memory 

=== Very rough benchmark
Correct random (with sizes), always purge all caches

commit number 31
100000 insertions in 7378ms
0.07378ms per insertion
13553.8086202223 insertions per sec
344586 nodes persisted
2691300 nodes in cache
Commited 100000 operations in 1598ms

commit number 32
100000 insertions in 6877ms
0.06877ms per insertion
14541.224371092 insertions per sec
348206 nodes persisted
2706112 nodes in cache
Commited 100000 operations in 1575ms

commit number 33
100000 insertions in 7975ms
0.07975ms per insertion
12539.1849529781 insertions per sec
351459 nodes persisted
2771848 nodes in cache
Commited 100000 operations in 1591ms


(!) ~1G of memory

=== HMAT benchmark (no cache misses)

commit number 97
100000 insertions in 547ms
0.00547ms per insertion
182815.356489945 insertions per sec
293946 nodes persisted
78400000 nodes in cache
Commited 100000 operations in 2159ms
commit number 98
100000 insertions in 590ms
0.0059ms per insertion
169491.525423729 insertions per sec
294087 nodes persisted
79200000 nodes in cache
Commited 100000 operations in 1982ms
commit number 99
100000 insertions in 4927ms
0.04927ms per insertion
20296.3263649279 insertions per sec
294340 nodes persisted
80000000 nodes in cache
Commited 100000 operations in 2050ms

(!) ~24 GB of memory

=== HMAT benchmark (aggresive cache pruning)

commit number 97
100000 insertions in 3083ms
0.03083ms per insertion
32435.9390204346 insertions per sec
293946 nodes persisted
800000 nodes in cache
Commited 100000 operations in 1819ms
commit number 98
100000 insertions in 2595ms
0.02595ms per insertion
38535.6454720617 insertions per sec
294087 nodes persisted
800000 nodes in cache
Commited 100000 operations in 1659ms
commit number 99
100000 insertions in 3135ms
0.03135ms per insertion
31897.9266347687 insertions per sec
294340 nodes persisted
800000 nodes in cache
Commited 100000 operations in 1739ms

(!) ~1 GB of memory