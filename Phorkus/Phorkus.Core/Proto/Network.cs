// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: network.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Phorkus.Core.Proto {

  /// <summary>Holder for reflection information generated from network.proto</summary>
  public static partial class NetworkReflection {

    #region Descriptor
    /// <summary>File descriptor for network.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1uZXR3b3JrLnByb3RvGg1kZWZhdWx0LnByb3RvGgtibG9jay5wcm90bxoR",
            "dHJhbnNhY3Rpb24ucHJvdG8aD2NvbnNlbnN1cy5wcm90byIrCgpJcEVuZFBv",
            "aW50Eg8KB2FkZHJlc3MYASABKAkSDAoEcG9ydBgCIAEoDSKhAQoLQWRkck1l",
            "c3NhZ2USNAoHYWRkcmVzcxgBIAMoCzIjLkFkZHJNZXNzYWdlLk5ldHdvcmtB",
            "ZGRyZXNzV2l0aFRpbWUaXAoWTmV0d29ya0FkZHJlc3NXaXRoVGltZRIRCgl0",
            "aW1lc3RhbXAYASABKAQSEAoIc2VydmljZXMYAiABKAQSHQoIZW5kcG9pbnQY",
            "AyABKAsyCy5JcEVuZFBvaW50IjQKE0Jsb2NrSGVhZGVyc01lc3NhZ2USHQoH",
            "aGVhZGVycxgBIAMoCzIMLkJsb2NrSGVhZGVyIiUKDEJsb2NrTWVzc2FnZRIV",
            "CgVibG9jaxgCIAEoCzIGLkJsb2NrIocCChBDb25zZW5zdXNNZXNzYWdlEjwK",
            "CHVuc2lnbmVkGAEgASgLMiouQ29uc2Vuc3VzTWVzc2FnZS5Db25zZW5zdXNQ",
            "YXlsb2FkVW5zaWduZWQatAEKGENvbnNlbnN1c1BheWxvYWRVbnNpZ25lZBIP",
            "Cgd2ZXJzaW9uGAEgASgNEhsKCXByZXZfaGFzaBgCIAEoCzIILlVJbnQyNTYS",
            "EwoLYmxvY2tfaW5kZXgYAyABKAQSFwoPdmFsaWRhdG9yX2luZGV4GAQgASgN",
            "EhEKCXRpbWVzdGFtcBgFIAEoBBIpCgRkYXRhGAYgASgLMhsuQ29uc2Vuc3Vz",
            "UGF5bG9hZEN1c3RvbURhdGEiIQoRRmlsdGVyQWRkck1lc3NhZ2USDAoEZGF0",
            "YRgBIAEoDCIUChJGaWx0ZXJDbGVhck1lc3NhZ2UiPQoRRmlsdGVyTG9hZE1l",
            "c3NhZ2USDgoGZmlsdGVyGAEgASgMEgkKAWsYAiABKA0SDQoFdHdlYWsYAyAB",
            "KA0iEAoOR2V0QWRkck1lc3NhZ2UiUwoWR2V0QmxvY2tIZWFkZXJzTWVzc2Fn",
            "ZRIcCgpoYXNoX3N0YXJ0GAEgAygLMgguVUludDI1NhIbCgloYXNoX3N0b3AY",
            "AiABKAsyCC5VSW50MjU2Ik0KEEdldEJsb2Nrc01lc3NhZ2USHAoKaGFzaF9z",
            "dGFydBgBIAMoCzIILlVJbnQyNTYSGwoJaGFzaF9zdG9wGAIgASgLMgguVUlu",
            "dDI1NiJICg5HZXREYXRhTWVzc2FnZRIcCgR0eXBlGAEgASgOMg4uSW52ZW50",
            "b3J5VHlwZRIYCgZoYXNoZXMYAiADKAsyCC5VSW50MjU2IhAKDk1lbVBvb2xN",
            "ZXNzYWdlIjcKElRyYW5zYWN0aW9uTWVzc2FnZRIhCgt0cmFuc2FjdGlvbhgB",
            "IAEoCzIMLlRyYW5zYWN0aW9uIg8KDVZlckFja01lc3NhZ2UiowEKDlZlcnNp",
            "b25NZXNzYWdlEg8KB3ZlcnNpb24YASABKA0SEAoIc2VydmljZXMYAiABKAQS",
            "EQoJdGltZXN0YW1wGAMgASgEEgwKBHBvcnQYBCABKA0SDQoFbm9uY2UYBSAB",
            "KA0SEgoKdXNlcl9hZ2VudBgGIAEoCRIbChNjdXJyZW50X2Jsb2NrX2luZGV4",
            "GAcgASgEEg0KBXJlbGF5GAggASgIKq4DCgtNZXNzYWdlVHlwZRIVChFNRVNT",
            "QUdFX1RZUEVfQUREUhAAEhYKEk1FU1NBR0VfVFlQRV9CTE9DSxABEhoKFk1F",
            "U1NBR0VfVFlQRV9DT05TRU5TVVMQAhIaChZNRVNTQUdFX1RZUEVfRklMVEVS",
            "QUREEAMSHAoYTUVTU0FHRV9UWVBFX0ZJTFRFUkNMRUFSEAQSGwoXTUVTU0FH",
            "RV9UWVBFX0ZJTFRFUkxPQUQQBRIYChRNRVNTQUdFX1RZUEVfR0VUQUREUhAG",
            "EhoKFk1FU1NBR0VfVFlQRV9HRVRCTE9DS1MQBxIYChRNRVNTQUdFX1RZUEVf",
            "R0VUREFUQRAIEhsKF01FU1NBR0VfVFlQRV9HRVRIRUFERVJTEAkSGAoUTUVT",
            "U0FHRV9UWVBFX0hFQURFUlMQChIUChBNRVNTQUdFX1RZUEVfSVZOEAsSGAoU",
            "TUVTU0FHRV9UWVBFX01FTVBPT0wQDBITCg9NRVNTQUdFX1RZUEVfVFgQDRIX",
            "ChNNRVNTQUdFX1RZUEVfVkVSQUNLEA4SGAoUTUVTU0FHRV9UWVBFX1ZFUlNJ",
            "T04QDyqEAQoNSW52ZW50b3J5VHlwZRIaChZJTlZFTlRPUllfVFlQRV9VTktO",
            "T1dOEAASHgoaSU5WRU5UT1JZX1RZUEVfVFJBTlNBQ1RJT04QARIYChRJTlZF",
            "TlRPUllfVFlQRV9CTE9DSxACEh0KGElOVkVOVE9SWV9UWVBFX0NPTlNFTlNV",
            "UxDgAUIVqgISUGhvcmt1cy5Db3JlLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Phorkus.Core.Proto.DefaultReflection.Descriptor, global::Phorkus.Core.Proto.BlockReflection.Descriptor, global::Phorkus.Core.Proto.TransactionReflection.Descriptor, global::Phorkus.Core.Proto.ConsensusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Phorkus.Core.Proto.MessageType), typeof(global::Phorkus.Core.Proto.InventoryType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.IpEndPoint), global::Phorkus.Core.Proto.IpEndPoint.Parser, new[]{ "Address", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.AddrMessage), global::Phorkus.Core.Proto.AddrMessage.Parser, new[]{ "Address" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime), global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime.Parser, new[]{ "Timestamp", "Services", "Endpoint" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.BlockHeadersMessage), global::Phorkus.Core.Proto.BlockHeadersMessage.Parser, new[]{ "Headers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.BlockMessage), global::Phorkus.Core.Proto.BlockMessage.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.ConsensusMessage), global::Phorkus.Core.Proto.ConsensusMessage.Parser, new[]{ "Unsigned" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned), global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned.Parser, new[]{ "Version", "PrevHash", "BlockIndex", "ValidatorIndex", "Timestamp", "Data" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.FilterAddrMessage), global::Phorkus.Core.Proto.FilterAddrMessage.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.FilterClearMessage), global::Phorkus.Core.Proto.FilterClearMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.FilterLoadMessage), global::Phorkus.Core.Proto.FilterLoadMessage.Parser, new[]{ "Filter", "K", "Tweak" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.GetAddrMessage), global::Phorkus.Core.Proto.GetAddrMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.GetBlockHeadersMessage), global::Phorkus.Core.Proto.GetBlockHeadersMessage.Parser, new[]{ "HashStart", "HashStop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.GetBlocksMessage), global::Phorkus.Core.Proto.GetBlocksMessage.Parser, new[]{ "HashStart", "HashStop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.GetDataMessage), global::Phorkus.Core.Proto.GetDataMessage.Parser, new[]{ "Type", "Hashes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.MemPoolMessage), global::Phorkus.Core.Proto.MemPoolMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.TransactionMessage), global::Phorkus.Core.Proto.TransactionMessage.Parser, new[]{ "Transaction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.VerAckMessage), global::Phorkus.Core.Proto.VerAckMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Phorkus.Core.Proto.VersionMessage), global::Phorkus.Core.Proto.VersionMessage.Parser, new[]{ "Version", "Services", "Timestamp", "Port", "Nonce", "UserAgent", "CurrentBlockIndex", "Relay" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("MESSAGE_TYPE_ADDR")] Addr = 0,
    [pbr::OriginalName("MESSAGE_TYPE_BLOCK")] Block = 1,
    [pbr::OriginalName("MESSAGE_TYPE_CONSENSUS")] Consensus = 2,
    [pbr::OriginalName("MESSAGE_TYPE_FILTERADD")] Filteradd = 3,
    [pbr::OriginalName("MESSAGE_TYPE_FILTERCLEAR")] Filterclear = 4,
    [pbr::OriginalName("MESSAGE_TYPE_FILTERLOAD")] Filterload = 5,
    [pbr::OriginalName("MESSAGE_TYPE_GETADDR")] Getaddr = 6,
    [pbr::OriginalName("MESSAGE_TYPE_GETBLOCKS")] Getblocks = 7,
    [pbr::OriginalName("MESSAGE_TYPE_GETDATA")] Getdata = 8,
    [pbr::OriginalName("MESSAGE_TYPE_GETHEADERS")] Getheaders = 9,
    [pbr::OriginalName("MESSAGE_TYPE_HEADERS")] Headers = 10,
    [pbr::OriginalName("MESSAGE_TYPE_IVN")] Ivn = 11,
    [pbr::OriginalName("MESSAGE_TYPE_MEMPOOL")] Mempool = 12,
    [pbr::OriginalName("MESSAGE_TYPE_TX")] Tx = 13,
    [pbr::OriginalName("MESSAGE_TYPE_VERACK")] Verack = 14,
    [pbr::OriginalName("MESSAGE_TYPE_VERSION")] Version = 15,
  }

  public enum InventoryType {
    [pbr::OriginalName("INVENTORY_TYPE_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("INVENTORY_TYPE_TRANSACTION")] Transaction = 1,
    [pbr::OriginalName("INVENTORY_TYPE_BLOCK")] Block = 2,
    [pbr::OriginalName("INVENTORY_TYPE_CONSENSUS")] Consensus = 224,
  }

  #endregion

  #region Messages
  public sealed partial class IpEndPoint : pb::IMessage<IpEndPoint> {
    private static readonly pb::MessageParser<IpEndPoint> _parser = new pb::MessageParser<IpEndPoint>(() => new IpEndPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpEndPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpEndPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpEndPoint(IpEndPoint other) : this() {
      address_ = other.address_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpEndPoint Clone() {
      return new IpEndPoint(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpEndPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpEndPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpEndPoint other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddrMessage : pb::IMessage<AddrMessage> {
    private static readonly pb::MessageParser<AddrMessage> _parser = new pb::MessageParser<AddrMessage>(() => new AddrMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddrMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddrMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddrMessage(AddrMessage other) : this() {
      address_ = other.address_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddrMessage Clone() {
      return new AddrMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime> _repeated_address_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime> address_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.AddrMessage.Types.NetworkAddressWithTime> Address {
      get { return address_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddrMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddrMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!address_.Equals(other.address_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= address_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      address_.WriteTo(output, _repeated_address_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += address_.CalculateSize(_repeated_address_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddrMessage other) {
      if (other == null) {
        return;
      }
      address_.Add(other.address_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            address_.AddEntriesFrom(input, _repeated_address_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AddrMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NetworkAddressWithTime : pb::IMessage<NetworkAddressWithTime> {
        private static readonly pb::MessageParser<NetworkAddressWithTime> _parser = new pb::MessageParser<NetworkAddressWithTime>(() => new NetworkAddressWithTime());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NetworkAddressWithTime> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Core.Proto.AddrMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkAddressWithTime() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkAddressWithTime(NetworkAddressWithTime other) : this() {
          timestamp_ = other.timestamp_;
          services_ = other.services_;
          endpoint_ = other.endpoint_ != null ? other.endpoint_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkAddressWithTime Clone() {
          return new NetworkAddressWithTime(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private ulong timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "services" field.</summary>
        public const int ServicesFieldNumber = 2;
        private ulong services_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Services {
          get { return services_; }
          set {
            services_ = value;
          }
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 3;
        private global::Phorkus.Core.Proto.IpEndPoint endpoint_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Phorkus.Core.Proto.IpEndPoint Endpoint {
          get { return endpoint_; }
          set {
            endpoint_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NetworkAddressWithTime);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NetworkAddressWithTime other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Timestamp != other.Timestamp) return false;
          if (Services != other.Services) return false;
          if (!object.Equals(Endpoint, other.Endpoint)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
          if (Services != 0UL) hash ^= Services.GetHashCode();
          if (endpoint_ != null) hash ^= Endpoint.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Timestamp != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Timestamp);
          }
          if (Services != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(Services);
          }
          if (endpoint_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Endpoint);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Timestamp != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
          }
          if (Services != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Services);
          }
          if (endpoint_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NetworkAddressWithTime other) {
          if (other == null) {
            return;
          }
          if (other.Timestamp != 0UL) {
            Timestamp = other.Timestamp;
          }
          if (other.Services != 0UL) {
            Services = other.Services;
          }
          if (other.endpoint_ != null) {
            if (endpoint_ == null) {
              endpoint_ = new global::Phorkus.Core.Proto.IpEndPoint();
            }
            Endpoint.MergeFrom(other.Endpoint);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Timestamp = input.ReadUInt64();
                break;
              }
              case 16: {
                Services = input.ReadUInt64();
                break;
              }
              case 26: {
                if (endpoint_ == null) {
                  endpoint_ = new global::Phorkus.Core.Proto.IpEndPoint();
                }
                input.ReadMessage(endpoint_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class BlockHeadersMessage : pb::IMessage<BlockHeadersMessage> {
    private static readonly pb::MessageParser<BlockHeadersMessage> _parser = new pb::MessageParser<BlockHeadersMessage>(() => new BlockHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage(BlockHeadersMessage other) : this() {
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage Clone() {
      return new BlockHeadersMessage(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.BlockHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.BlockHeader.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.BlockHeader> headers_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.BlockHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.BlockHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeadersMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockMessage : pb::IMessage<BlockMessage> {
    private static readonly pb::MessageParser<BlockMessage> _parser = new pb::MessageParser<BlockMessage>(() => new BlockMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage(BlockMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage Clone() {
      return new BlockMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    private global::Phorkus.Core.Proto.Block block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.Block Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          block_ = new global::Phorkus.Core.Proto.Block();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (block_ == null) {
              block_ = new global::Phorkus.Core.Proto.Block();
            }
            input.ReadMessage(block_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsensusMessage : pb::IMessage<ConsensusMessage> {
    private static readonly pb::MessageParser<ConsensusMessage> _parser = new pb::MessageParser<ConsensusMessage>(() => new ConsensusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsensusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage(ConsensusMessage other) : this() {
      unsigned_ = other.unsigned_ != null ? other.unsigned_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsensusMessage Clone() {
      return new ConsensusMessage(this);
    }

    /// <summary>Field number for the "unsigned" field.</summary>
    public const int UnsignedFieldNumber = 1;
    private global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned unsigned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned Unsigned {
      get { return unsigned_; }
      set {
        unsigned_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsensusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsensusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Unsigned, other.Unsigned)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (unsigned_ != null) hash ^= Unsigned.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (unsigned_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Unsigned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (unsigned_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsigned);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsensusMessage other) {
      if (other == null) {
        return;
      }
      if (other.unsigned_ != null) {
        if (unsigned_ == null) {
          unsigned_ = new global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned();
        }
        Unsigned.MergeFrom(other.Unsigned);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (unsigned_ == null) {
              unsigned_ = new global::Phorkus.Core.Proto.ConsensusMessage.Types.ConsensusPayloadUnsigned();
            }
            input.ReadMessage(unsigned_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConsensusMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ConsensusPayloadUnsigned : pb::IMessage<ConsensusPayloadUnsigned> {
        private static readonly pb::MessageParser<ConsensusPayloadUnsigned> _parser = new pb::MessageParser<ConsensusPayloadUnsigned>(() => new ConsensusPayloadUnsigned());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConsensusPayloadUnsigned> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Phorkus.Core.Proto.ConsensusMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsensusPayloadUnsigned() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsensusPayloadUnsigned(ConsensusPayloadUnsigned other) : this() {
          version_ = other.version_;
          prevHash_ = other.prevHash_ != null ? other.prevHash_.Clone() : null;
          blockIndex_ = other.blockIndex_;
          validatorIndex_ = other.validatorIndex_;
          timestamp_ = other.timestamp_;
          data_ = other.data_ != null ? other.data_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsensusPayloadUnsigned Clone() {
          return new ConsensusPayloadUnsigned(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        /// <summary>Field number for the "prev_hash" field.</summary>
        public const int PrevHashFieldNumber = 2;
        private global::Phorkus.Core.Proto.UInt256 prevHash_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Phorkus.Core.Proto.UInt256 PrevHash {
          get { return prevHash_; }
          set {
            prevHash_ = value;
          }
        }

        /// <summary>Field number for the "block_index" field.</summary>
        public const int BlockIndexFieldNumber = 3;
        private ulong blockIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong BlockIndex {
          get { return blockIndex_; }
          set {
            blockIndex_ = value;
          }
        }

        /// <summary>Field number for the "validator_index" field.</summary>
        public const int ValidatorIndexFieldNumber = 4;
        private uint validatorIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ValidatorIndex {
          get { return validatorIndex_; }
          set {
            validatorIndex_ = value;
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 5;
        private ulong timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 6;
        private global::Phorkus.Core.Proto.ConsensusPayloadCustomData data_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Phorkus.Core.Proto.ConsensusPayloadCustomData Data {
          get { return data_; }
          set {
            data_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ConsensusPayloadUnsigned);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConsensusPayloadUnsigned other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          if (!object.Equals(PrevHash, other.PrevHash)) return false;
          if (BlockIndex != other.BlockIndex) return false;
          if (ValidatorIndex != other.ValidatorIndex) return false;
          if (Timestamp != other.Timestamp) return false;
          if (!object.Equals(Data, other.Data)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Version != 0) hash ^= Version.GetHashCode();
          if (prevHash_ != null) hash ^= PrevHash.GetHashCode();
          if (BlockIndex != 0UL) hash ^= BlockIndex.GetHashCode();
          if (ValidatorIndex != 0) hash ^= ValidatorIndex.GetHashCode();
          if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
          if (data_ != null) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Version != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Version);
          }
          if (prevHash_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PrevHash);
          }
          if (BlockIndex != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(BlockIndex);
          }
          if (ValidatorIndex != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(ValidatorIndex);
          }
          if (Timestamp != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(Timestamp);
          }
          if (data_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Version != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
          }
          if (prevHash_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevHash);
          }
          if (BlockIndex != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockIndex);
          }
          if (ValidatorIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValidatorIndex);
          }
          if (Timestamp != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
          }
          if (data_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConsensusPayloadUnsigned other) {
          if (other == null) {
            return;
          }
          if (other.Version != 0) {
            Version = other.Version;
          }
          if (other.prevHash_ != null) {
            if (prevHash_ == null) {
              prevHash_ = new global::Phorkus.Core.Proto.UInt256();
            }
            PrevHash.MergeFrom(other.PrevHash);
          }
          if (other.BlockIndex != 0UL) {
            BlockIndex = other.BlockIndex;
          }
          if (other.ValidatorIndex != 0) {
            ValidatorIndex = other.ValidatorIndex;
          }
          if (other.Timestamp != 0UL) {
            Timestamp = other.Timestamp;
          }
          if (other.data_ != null) {
            if (data_ == null) {
              data_ = new global::Phorkus.Core.Proto.ConsensusPayloadCustomData();
            }
            Data.MergeFrom(other.Data);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Version = input.ReadUInt32();
                break;
              }
              case 18: {
                if (prevHash_ == null) {
                  prevHash_ = new global::Phorkus.Core.Proto.UInt256();
                }
                input.ReadMessage(prevHash_);
                break;
              }
              case 24: {
                BlockIndex = input.ReadUInt64();
                break;
              }
              case 32: {
                ValidatorIndex = input.ReadUInt32();
                break;
              }
              case 40: {
                Timestamp = input.ReadUInt64();
                break;
              }
              case 50: {
                if (data_ == null) {
                  data_ = new global::Phorkus.Core.Proto.ConsensusPayloadCustomData();
                }
                input.ReadMessage(data_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class FilterAddrMessage : pb::IMessage<FilterAddrMessage> {
    private static readonly pb::MessageParser<FilterAddrMessage> _parser = new pb::MessageParser<FilterAddrMessage>(() => new FilterAddrMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterAddrMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterAddrMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterAddrMessage(FilterAddrMessage other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterAddrMessage Clone() {
      return new FilterAddrMessage(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterAddrMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterAddrMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterAddrMessage other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FilterClearMessage : pb::IMessage<FilterClearMessage> {
    private static readonly pb::MessageParser<FilterClearMessage> _parser = new pb::MessageParser<FilterClearMessage>(() => new FilterClearMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterClearMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterClearMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterClearMessage(FilterClearMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterClearMessage Clone() {
      return new FilterClearMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterClearMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterClearMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterClearMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class FilterLoadMessage : pb::IMessage<FilterLoadMessage> {
    private static readonly pb::MessageParser<FilterLoadMessage> _parser = new pb::MessageParser<FilterLoadMessage>(() => new FilterLoadMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterLoadMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterLoadMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterLoadMessage(FilterLoadMessage other) : this() {
      filter_ = other.filter_;
      k_ = other.k_;
      tweak_ = other.tweak_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterLoadMessage Clone() {
      return new FilterLoadMessage(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "k" field.</summary>
    public const int KFieldNumber = 2;
    private uint k_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint K {
      get { return k_; }
      set {
        k_ = value;
      }
    }

    /// <summary>Field number for the "tweak" field.</summary>
    public const int TweakFieldNumber = 3;
    private uint tweak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Tweak {
      get { return tweak_; }
      set {
        tweak_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterLoadMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterLoadMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      if (K != other.K) return false;
      if (Tweak != other.Tweak) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (K != 0) hash ^= K.GetHashCode();
      if (Tweak != 0) hash ^= Tweak.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Filter);
      }
      if (K != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(K);
      }
      if (Tweak != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tweak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Filter);
      }
      if (K != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(K);
      }
      if (Tweak != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tweak);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterLoadMessage other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.K != 0) {
        K = other.K;
      }
      if (other.Tweak != 0) {
        Tweak = other.Tweak;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadBytes();
            break;
          }
          case 16: {
            K = input.ReadUInt32();
            break;
          }
          case 24: {
            Tweak = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAddrMessage : pb::IMessage<GetAddrMessage> {
    private static readonly pb::MessageParser<GetAddrMessage> _parser = new pb::MessageParser<GetAddrMessage>(() => new GetAddrMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAddrMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddrMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddrMessage(GetAddrMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddrMessage Clone() {
      return new GetAddrMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAddrMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAddrMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAddrMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetBlockHeadersMessage : pb::IMessage<GetBlockHeadersMessage> {
    private static readonly pb::MessageParser<GetBlockHeadersMessage> _parser = new pb::MessageParser<GetBlockHeadersMessage>(() => new GetBlockHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage(GetBlockHeadersMessage other) : this() {
      hashStart_ = other.hashStart_.Clone();
      hashStop_ = other.hashStop_ != null ? other.hashStop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockHeadersMessage Clone() {
      return new GetBlockHeadersMessage(this);
    }

    /// <summary>Field number for the "hash_start" field.</summary>
    public const int HashStartFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_hashStart_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> hashStart_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> HashStart {
      get { return hashStart_; }
    }

    /// <summary>Field number for the "hash_stop" field.</summary>
    public const int HashStopFieldNumber = 2;
    private global::Phorkus.Core.Proto.UInt256 hashStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.UInt256 HashStop {
      get { return hashStop_; }
      set {
        hashStop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashStart_.Equals(other.hashStart_)) return false;
      if (!object.Equals(HashStop, other.HashStop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashStart_.GetHashCode();
      if (hashStop_ != null) hash ^= HashStop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashStart_.WriteTo(output, _repeated_hashStart_codec);
      if (hashStop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HashStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashStart_.CalculateSize(_repeated_hashStart_codec);
      if (hashStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HashStop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockHeadersMessage other) {
      if (other == null) {
        return;
      }
      hashStart_.Add(other.hashStart_);
      if (other.hashStop_ != null) {
        if (hashStop_ == null) {
          hashStop_ = new global::Phorkus.Core.Proto.UInt256();
        }
        HashStop.MergeFrom(other.HashStop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashStart_.AddEntriesFrom(input, _repeated_hashStart_codec);
            break;
          }
          case 18: {
            if (hashStop_ == null) {
              hashStop_ = new global::Phorkus.Core.Proto.UInt256();
            }
            input.ReadMessage(hashStop_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlocksMessage : pb::IMessage<GetBlocksMessage> {
    private static readonly pb::MessageParser<GetBlocksMessage> _parser = new pb::MessageParser<GetBlocksMessage>(() => new GetBlocksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlocksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage(GetBlocksMessage other) : this() {
      hashStart_ = other.hashStart_.Clone();
      hashStop_ = other.hashStop_ != null ? other.hashStop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksMessage Clone() {
      return new GetBlocksMessage(this);
    }

    /// <summary>Field number for the "hash_start" field.</summary>
    public const int HashStartFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_hashStart_codec
        = pb::FieldCodec.ForMessage(10, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> hashStart_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> HashStart {
      get { return hashStart_; }
    }

    /// <summary>Field number for the "hash_stop" field.</summary>
    public const int HashStopFieldNumber = 2;
    private global::Phorkus.Core.Proto.UInt256 hashStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.UInt256 HashStop {
      get { return hashStop_; }
      set {
        hashStop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlocksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlocksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashStart_.Equals(other.hashStart_)) return false;
      if (!object.Equals(HashStop, other.HashStop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashStart_.GetHashCode();
      if (hashStop_ != null) hash ^= HashStop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashStart_.WriteTo(output, _repeated_hashStart_codec);
      if (hashStop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HashStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashStart_.CalculateSize(_repeated_hashStart_codec);
      if (hashStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HashStop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlocksMessage other) {
      if (other == null) {
        return;
      }
      hashStart_.Add(other.hashStart_);
      if (other.hashStop_ != null) {
        if (hashStop_ == null) {
          hashStop_ = new global::Phorkus.Core.Proto.UInt256();
        }
        HashStop.MergeFrom(other.HashStop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashStart_.AddEntriesFrom(input, _repeated_hashStart_codec);
            break;
          }
          case 18: {
            if (hashStop_ == null) {
              hashStop_ = new global::Phorkus.Core.Proto.UInt256();
            }
            input.ReadMessage(hashStop_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDataMessage : pb::IMessage<GetDataMessage> {
    private static readonly pb::MessageParser<GetDataMessage> _parser = new pb::MessageParser<GetDataMessage>(() => new GetDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataMessage(GetDataMessage other) : this() {
      type_ = other.type_;
      hashes_ = other.hashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataMessage Clone() {
      return new GetDataMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Phorkus.Core.Proto.InventoryType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.InventoryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "hashes" field.</summary>
    public const int HashesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Phorkus.Core.Proto.UInt256> _repeated_hashes_codec
        = pb::FieldCodec.ForMessage(18, global::Phorkus.Core.Proto.UInt256.Parser);
    private readonly pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> hashes_ = new pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Phorkus.Core.Proto.UInt256> Hashes {
      get { return hashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!hashes_.Equals(other.hashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= hashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      hashes_.Add(other.hashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Phorkus.Core.Proto.InventoryType) input.ReadEnum();
            break;
          }
          case 18: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemPoolMessage : pb::IMessage<MemPoolMessage> {
    private static readonly pb::MessageParser<MemPoolMessage> _parser = new pb::MessageParser<MemPoolMessage>(() => new MemPoolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemPoolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemPoolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemPoolMessage(MemPoolMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemPoolMessage Clone() {
      return new MemPoolMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemPoolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemPoolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemPoolMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TransactionMessage : pb::IMessage<TransactionMessage> {
    private static readonly pb::MessageParser<TransactionMessage> _parser = new pb::MessageParser<TransactionMessage>(() => new TransactionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage(TransactionMessage other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage Clone() {
      return new TransactionMessage(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Phorkus.Core.Proto.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Phorkus.Core.Proto.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionMessage other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Phorkus.Core.Proto.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Phorkus.Core.Proto.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerAckMessage : pb::IMessage<VerAckMessage> {
    private static readonly pb::MessageParser<VerAckMessage> _parser = new pb::MessageParser<VerAckMessage>(() => new VerAckMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerAckMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerAckMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerAckMessage(VerAckMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerAckMessage Clone() {
      return new VerAckMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerAckMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerAckMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerAckMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class VersionMessage : pb::IMessage<VersionMessage> {
    private static readonly pb::MessageParser<VersionMessage> _parser = new pb::MessageParser<VersionMessage>(() => new VersionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Phorkus.Core.Proto.NetworkReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage(VersionMessage other) : this() {
      version_ = other.version_;
      services_ = other.services_;
      timestamp_ = other.timestamp_;
      port_ = other.port_;
      nonce_ = other.nonce_;
      userAgent_ = other.userAgent_;
      currentBlockIndex_ = other.currentBlockIndex_;
      relay_ = other.relay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage Clone() {
      return new VersionMessage(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 2;
    private ulong services_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Services {
      get { return services_; }
      set {
        services_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 5;
    private uint nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "user_agent" field.</summary>
    public const int UserAgentFieldNumber = 6;
    private string userAgent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_block_index" field.</summary>
    public const int CurrentBlockIndexFieldNumber = 7;
    private ulong currentBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentBlockIndex {
      get { return currentBlockIndex_; }
      set {
        currentBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "relay" field.</summary>
    public const int RelayFieldNumber = 8;
    private bool relay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Relay {
      get { return relay_; }
      set {
        relay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Services != other.Services) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Port != other.Port) return false;
      if (Nonce != other.Nonce) return false;
      if (UserAgent != other.UserAgent) return false;
      if (CurrentBlockIndex != other.CurrentBlockIndex) return false;
      if (Relay != other.Relay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Services != 0UL) hash ^= Services.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Nonce != 0) hash ^= Nonce.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (CurrentBlockIndex != 0UL) hash ^= CurrentBlockIndex.GetHashCode();
      if (Relay != false) hash ^= Relay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (Services != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Services);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Port);
      }
      if (Nonce != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Nonce);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserAgent);
      }
      if (CurrentBlockIndex != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(CurrentBlockIndex);
      }
      if (Relay != false) {
        output.WriteRawTag(64);
        output.WriteBool(Relay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (Services != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Services);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (Nonce != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nonce);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (CurrentBlockIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentBlockIndex);
      }
      if (Relay != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionMessage other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Services != 0UL) {
        Services = other.Services;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Nonce != 0) {
        Nonce = other.Nonce;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.CurrentBlockIndex != 0UL) {
        CurrentBlockIndex = other.CurrentBlockIndex;
      }
      if (other.Relay != false) {
        Relay = other.Relay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            Services = input.ReadUInt64();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            Port = input.ReadUInt32();
            break;
          }
          case 40: {
            Nonce = input.ReadUInt32();
            break;
          }
          case 50: {
            UserAgent = input.ReadString();
            break;
          }
          case 56: {
            CurrentBlockIndex = input.ReadUInt64();
            break;
          }
          case 64: {
            Relay = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
